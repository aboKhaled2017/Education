{"version":3,"file":"SharedCoursesFuncs.js","sourceRoot":"","sources":["SharedCoursesFuncs.ts"],"names":[],"mappings":";;AAAA,sCAAoC;AAoDpC;IAAA;IA6CA,CAAC;IAnCiB,6BAAiB,GAA/B,UAAgC,UAAkB,EAAE,UAAkB,EAAC,EAAU,EAAC,MAAyB;QACvG,IAAI,QAAkB,CAAC;QACvB,CAAC,CAAC,WAAW,CAAC,UAAU,EAAE,UAAU,IAAU,EAAE,GAAW;YACvD,IAAI,IAAI,GAAG,KAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAK,CAAC;YACjC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC1B,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC1B,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC9B,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC/B,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;YAC9C,CAAC,CAAC,IAAI,CAAC;gBACH,GAAG,EAAE,WAAW,CAAC,kBAAkB;gBACnC,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,MAAM;gBACd,WAAW,EAAE,KAAK;gBAClB,KAAK,EAAE,KAAK;gBACZ,WAAW,EAAE,KAAK;aACrB,CAAC;iBACG,IAAI,CAAC;gBACF,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAG,WAAW,CAAC,cAAc,GAAG,IAAM,CAAC,CAAA;gBAC9D,CAAC,CAAC,MAAM,CAAC;oBACL,OAAO,EAAE,qBAAqB;iBACjC,CAAC,CAAC;gBACH,MAAM,CAAC,KAAG,WAAW,CAAC,cAAc,GAAG,IAAM,CAAC,CAAC;YACnD,CAAC,CAAC;iBACD,MAAM,CAAC;gBACJ,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YACnC,CAAC,CAAC;iBACD,KAAK,CAAC,UAAA,CAAC;gBACJ,CAAC,CAAC,MAAM,CAAC;oBACL,OAAO,EAAE,yCAAyC;iBACrD,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IA3Ca,yBAAa,GAAU,qBAAqB,CAAC;IAC7C,2BAAe,GAAW,uBAAuB,CAAC;IAClD,yBAAa,GAAW,qBAAqB,CAAC;IAC9C,8BAAkB,GAAW,0BAA0B,CAAC;IACxD,0BAAc,GAAW,wBAAwB,CAAC;IAClD,iCAAqB,GAAW,2BAA2B,CAAC;IAC5D,uBAAW,GAAW,0BAA0B,CAAC;IACjD,0BAAc,GAAW,6BAA6B,CAAC;IACvD,wBAAY,GAAW,2BAA2B,CAAC;IAoCrE,kBAAC;CAAA,AA7CD,IA6CC;AA7CY,kCAAW","sourcesContent":["import \"../../../global/helperDome\";\r\nimport {CategoryListItem, Course } from '../Shared/Interfaces';\r\nexport interface IAddCourseOperations {\r\n    SelectCategoryDataList: CategoryListItem[],\r\n    selectCategoryBtn: JQuery,\r\n    CategoryIdInp: JQuery,\r\n    AddCourseBtn: JQuery,\r\n    AddCourseForm: JQuery,\r\n    NotNowBtn: JQuery,\r\n    GetCategoryNameById(is: string): string\r\n    MakeDropDownMenuForCategories(data: CategoryListItem[], SuperId?:null): JQuery<HTMLElement>,\r\n    HandleDropDownMenu(): void,\r\n    CreateCategoryBtnList(): void,\r\n    HandleAddCourseSubmit(): void,\r\n    ResetDropdownMenu(): void,\r\n    ResetAddCourseForm(): void,\r\n    HandleToggleBtn(): void,\r\n    HandleSomeFormOperations(): void,\r\n    main(): void\r\n}\r\nexport interface IGetCoursesOperations {\r\n    CurrentSelectedUpdatableCard: JQuery,\r\n    CoursesCount: number,\r\n    CoursesSection: JQuery,\r\n    CourseCountText: JQuery,\r\n    EditCourseModal: JQuery,\r\n    GetCoursesUrl: string,\r\n    DeleteCourseUrl: string,\r\n    EditCourseUrl: string,\r\n    CourseCardTemplate: JQuery,\r\n    EditCourseImgBgUrl: string,\r\n    CardImgBaseUrl: string,\r\n    CourseCard: JQuery\r\n    EditCourse: JQuery,\r\n    EditCourseForm: JQuery,\r\n    EditBgImgBtn: JQuery,\r\n    EditCourseSubmitBtn: JQuery,\r\n    loadingIcon: JQuery,\r\n    HandleOnCardImgChange():void,\r\n    DesignCourseCard(course: Course): JQuery,\r\n    EditDesignCourseCard(course: Course, template: JQuery):void,\r\n    DrawCourses(courses: Course[]) :void,\r\n    GetCourses() :void,\r\n    Refresh() :void,\r\n    HandleDesignCardOperations() :void,\r\n    ToggleFormForModal():void,\r\n    FormatDateTo_yyyy_mm_dd(dateStr: string): string ,\r\n    BindDataToTargetForm(TargetForm: JQuery < HTMLFormElement >, data: Course):void,\r\n    HandleOnCourseUD() :void,\r\n    HandleModals() :void,\r\n    main():void\r\n}\r\nexport class CommonFuncs {\r\n    public static GetCoursesUrl: string= '/Admin/Courses/List';\r\n    public static DeleteCourseUrl: string = '/Admin/Courses/Delete';\r\n    public static EditCourseUrl: string = '/Admin/Courses/Edit';\r\n    public static EditCourseImgBgUrl: string = '/Admin/Courses/EditBgImg';\r\n    public static CardImgBaseUrl: string = '/images/admin/courses/';\r\n    public static GetVideosListOfCourse: string = '/Admin/VideoTutorial/List';\r\n    public static AddVideoUrl: string = '/Admin/VideoTutorial/Add';\r\n    public static DeleteVideoUrl: string = '/Admin/VideoTutorial/Delete';\r\n    public static EditVideoUrl: string = '/Admin/VideoTutorial/Edit';\r\n    public static UploadCourseImage(BtnHandler: JQuery, ImgHandler: JQuery,id: string,OnDone:(Url:string)=>void) {\r\n        let formData: FormData;\r\n        $.UploadImage(BtnHandler, function (file: File, ext: string) {\r\n            let Name = `${Date.now()}${ext}`;\r\n            formData = new FormData();\r\n            formData.append(\"Id\", id);\r\n            formData.append(\"Name\", Name);\r\n            formData.append(\"Image\", file);\r\n            let icon = BtnHandler.find('i:eq(0)');\r\n            icon.switchPendingState(true, \"fa-picture-o\");\r\n            $.ajax({\r\n                url: CommonFuncs.EditCourseImgBgUrl,\r\n                data: formData,\r\n                method: \"POST\",\r\n                processData: false,\r\n                cache: false,\r\n                contentType: false\r\n            })\r\n                .done(() => {\r\n                    ImgHandler.prop('src', `${CommonFuncs.CardImgBaseUrl}${Name}`)\r\n                    $.notify({\r\n                        message: \"تم حفظ الصورة بنجاح\"\r\n                    });\r\n                    OnDone(`${CommonFuncs.CardImgBaseUrl}${Name}`);\r\n                })\r\n                .always(() => {\r\n                    icon.switchPendingState(false);\r\n                })\r\n                .catch(e => {\r\n                    $.notify({\r\n                        message: \"لم يتم حفظ الصورة,حدثت مشكلة فى السيرفر\"\r\n                    });\r\n                });\r\n        }); \r\n    }\r\n}\r\n \r\n"]}