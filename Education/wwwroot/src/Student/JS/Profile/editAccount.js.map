{"version":3,"file":"editAccount.js","sourceRoot":"","sources":["editAccount.ts"],"names":[],"mappings":"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","sourcesContent":["import { requestStatus } from \"../../../global/functionality\";\r\nexport const EditAccountHandlingObject = {\r\n  EditAccountForm: $(\"#EditAccountForm\"),\r\n  get SubmitBtn() {\r\n    return this.EditAccountForm.find(\"#AccountSubmitBtn\") as JQuery;\r\n  },\r\n  changeUserName(newName: string) {\r\n    $(\"#userNameElement\").text(newName);\r\n  },\r\n  start() {\r\n    EditAccountHandlingObject.SubmitBtn.click(() => {\r\n      if (EditAccountHandlingObject.EditAccountForm.valid()) {\r\n        this.EditAccountForm.ajaxSubmit(\r\n          \"/Profile/editAccount\",\r\n          \"POST\",\r\n          (Def, model) => {\r\n            Def.done(data => {\r\n              this.changeUserName(model[\"fname\"]);\r\n              $.notify({\r\n                message: data\r\n              });\r\n            })\r\n              .always(() => {\r\n                this.SubmitBtn.pendingState(false);\r\n              })\r\n              .catch(e => {\r\n                $.notify({\r\n                  message: e.responseText\r\n                });\r\n              });\r\n          },\r\n          //before send\r\n          () => {\r\n            this.SubmitBtn.pendingState(true, \"fa-edit\");\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n};\r\nexport const EditPasswordHandlingObject = {\r\n  EditPasswordForm: $(\"#EditPasswordForm\"),\r\n  get SubmitBtn() {\r\n    return this.EditPasswordForm.find(\"#PasswordSubmitBtn\");\r\n  },\r\n  start() {\r\n    EditPasswordHandlingObject.SubmitBtn.click(() => {\r\n      if (EditPasswordHandlingObject.EditPasswordForm.valid()) {\r\n        this.EditPasswordForm.ajaxSubmit(\r\n          \"/Profile/ChangePassword\",\r\n          \"POST\",\r\n          (Def, model) => {\r\n            Def.done(data => {\r\n              $.notify({\r\n                message: data\r\n              });\r\n            })\r\n              .always(() => {\r\n                this.SubmitBtn.pendingState(false);\r\n              })\r\n              .catch(e => {\r\n                if (e.status == requestStatus.NotFound)\r\n                  this.EditPasswordForm.resetPassword()\r\n                    .formAlert()\r\n                    .text(e.responseText)\r\n                    .end();\r\n                $.notify({\r\n                  message: e.responseText\r\n                });\r\n              });\r\n          },\r\n          //before send\r\n          () => {\r\n            this.SubmitBtn.pendingState(true, \"fa-edit\");\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n};\r\nexport const EditMembershipHandlingObject = {\r\n  membershipAccountSection: $(\"#membershipAccount\"),\r\n  MembershipForm: $(\"#MembershipForm\"),\r\n  get SubmitRegisBtn() {\r\n    var btn = this.MembershipForm.find(\"#MemshipRegistBtn\");\r\n    btn.data(\"icon\", \"fa-user-circle\");\r\n    return btn;\r\n  },\r\n  get SubmitEditBtn() {\r\n    var btn = this.MembershipForm.find(\"#MemshipEditBtn\");\r\n    btn.data(\"icon\", \"fa-user-circle\");\r\n    return btn;\r\n  },\r\n  get SubmitBtn() {\r\n    return this.isMembershipRegistered\r\n      ? this.SubmitEditBtn\r\n      : this.SubmitRegisBtn;\r\n  },\r\n  get isMembershipRegistered(): boolean {\r\n    return this.MembershipForm.data(\"isregistered\") == \"True\";\r\n  },\r\n  formUrl() {\r\n    return this.isMembershipRegistered\r\n      ? \"/Profile/Membership?type=edit\"\r\n      : \"/Profile/Membership?type=register\";\r\n  },\r\n  get formMemberSection() {\r\n    return this.membershipAccountSection.find(\".member\");\r\n  },\r\n  get formNotMemberSection() {\r\n    return this.membershipAccountSection.find(\".notMember\");\r\n  },\r\n  toggleFormAction() {\r\n    this.formMemberSection.toggle();\r\n    this.formNotMemberSection.toggle();\r\n  },\r\n  start() {\r\n    var context = this;\r\n    EditMembershipHandlingObject.SubmitBtn.click(() => {\r\n      if (EditMembershipHandlingObject.MembershipForm.valid()) {\r\n        this.MembershipForm.ajaxSubmit(\r\n          this.formUrl(),\r\n          \"POST\",\r\n          (Def, model) => {\r\n            Def.done(data => {\r\n              $.notify(\r\n                {\r\n                  message: data\r\n                },\r\n                {\r\n                  onClose() {\r\n                    if (!context.isMembershipRegistered) {\r\n                      context.toggleFormAction();\r\n                      context.MembershipForm.data(\"isregistered\", \"True\");\r\n                    }\r\n                  }\r\n                }\r\n              );\r\n            })\r\n              .always(() => {\r\n                this.SubmitBtn.pendingState(false);\r\n              })\r\n              .catch(e => {\r\n                $.notify({\r\n                  message: e.responseText\r\n                });\r\n              });\r\n          },\r\n          //before send\r\n          () => {\r\n            this.SubmitBtn.pendingState(true, this.SubmitBtn.data(\"icon\"));\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n};\r\n"]}