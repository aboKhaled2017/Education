{"version":3,"file":"jquery.jTable.js","sourceRoot":"","sources":["jquery.jTable.ts"],"names":[],"mappings":";AAAA,6CAA6C;AAC7C;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2BE;AAEF;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,IAAI,aAAa,CAAC;IAElB,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE;QACzB,aAAa,GAAG,IAAI,CAAC;IACzB,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE;QACnB,aAAa,GAAG,KAAK,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE;QAEnB;;kFAE0E;QAC1E,OAAO,EAAE;YAEL,SAAS;YACT,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,UAAU;YAC7B,gBAAgB,EAAE,MAAM;YACxB,gBAAgB,EAAE,MAAM;YACxB,eAAe,EAAE,KAAK;YACtB,qBAAqB,EAAE,GAAG;YAC1B,mBAAmB,EAAE,IAAI;YACzB,aAAa,EAAE,KAAK;YACpB,8BAA8B,EAAE,IAAI;YAEpC,YAAY,EAAE;gBACV,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,MAAM;aACnB;YAED,OAAO,EAAE;gBACL,cAAc,EAAE,IAAI;gBACpB,sBAAsB,EAAE,EAAE;gBAC1B,oBAAoB,EAAE,SAAS;gBAC/B,KAAK,EAAE,EAAE;aACZ;YAED,QAAQ;YACR,cAAc,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YAC1C,WAAW,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YACvC,cAAc,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YAC1C,UAAU,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YACtC,cAAc,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YAC1C,aAAa,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YACzC,WAAW,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YACvC,WAAW,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YAEvC,cAAc;YACd,QAAQ,EAAE;gBACN,wBAAwB,EAAE,qDAAqD;gBAC/E,cAAc,EAAE,oBAAoB;gBACpC,eAAe,EAAE,oBAAoB;gBACrC,UAAU,EAAE,eAAe;gBAC3B,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,QAAQ;gBAChB,MAAM,EAAE,QAAQ;gBAChB,KAAK,EAAE,OAAO;gBACd,KAAK,EAAE,OAAO;gBACd,oBAAoB,EAAE,oCAAoC;aAC7D;SACJ;QAED;;kFAE0E;QAE1E,eAAe,EAAE,IAAI;QAErB,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;QAElB,OAAO,EAAE,IAAI;QACb,WAAW,EAAE,IAAI;QACjB,WAAW,EAAE,IAAI;QAEjB,SAAS,EAAE,IAAI;QACf,gBAAgB,EAAE,IAAI;QACtB,gBAAgB,EAAE,IAAI;QAEtB,WAAW,EAAE,IAAI;QACjB,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,IAAI;QAEf,sBAAsB,EAAE,CAAC;QACzB,aAAa,EAAE,IAAI;QAEnB,MAAM,EAAE,IAAI;QAEZ;;kFAE0E;QAE1E;kFAC0E;QAC1E,OAAO,EAAE;YAEL,gBAAgB;YAChB,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAEjC,uBAAuB;YACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC5D,CAAC;QAED;kFAC0E;QAC1E,uBAAuB,EAAE;YACrB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,SAAS,EAAE,KAAK;gBAClD,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,SAAS,EAAE,KAAK;YAC9C,IAAI,KAAK,CAAC,SAAS,IAAI,SAAS,EAAE;gBAC9B,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;aACxB;YACD,IAAI,KAAK,CAAC,UAAU,IAAI,SAAS,EAAE;gBAC/B,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;aACzB;YAED,4DAA4D;YAC5D,IAAI,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,QAAQ,EAAE;gBACzD,IAAI,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAChD,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC;gBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC5C,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACnD;aACJ;QACL,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,IAAI,EAAE,KAAK;gBAE7C,6BAA6B;gBAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE3B,sCAAsC;gBACtC,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE;oBACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACzB;gBAED,sDAAsD;gBACtD,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,EAAE;oBAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/B;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE;YAClB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC9B,QAAQ,CAAC,uBAAuB,CAAC;iBACjC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;QACnE,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE;YACf,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACrB,OAAO;aACV;YAED,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;iBACvB,QAAQ,CAAC,cAAc,CAAC;iBACxB,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEpC,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;YAE3D,CAAC,CAAC,SAAS,CAAC;iBACP,QAAQ,CAAC,mBAAmB,CAAC;iBAC7B,QAAQ,CAAC,SAAS,CAAC;iBACnB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAEhC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBAE9B,IAAI,SAAS,GAAG,CAAC,CAAC,UAAU,CAAC;qBACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAEvC,CAAC,CAAC,mBAAmB,CAAC;qBACjB,QAAQ,CAAC,2CAA2C,CAAC;qBACrD,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;qBAC1C,MAAM,CAAC,SAAS,CAAC;qBACjB,QAAQ,CAAC,SAAS,CAAC;qBACnB,KAAK,CAAC,UAAU,CAAC;oBACd,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACV;YAED,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAChC,CAAC;QAED;kFAC0E;QAC1E,YAAY,EAAE;YACV,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,iBAAiB,CAAC;iBAC9B,QAAQ,CAAC,QAAQ,CAAC;iBAClB,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEpC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;aACjD;YAED,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;YAE/D,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE;YACd,IAAI,MAAM,GAAG,CAAC,CAAC,iBAAiB,CAAC;iBAC5B,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC;QAED;kFAC0E;QAC1E,kBAAkB,EAAE,UAAU,MAAM;YAChC,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC;iBACnB,QAAQ,CAAC,MAAM,CAAC,CAAC;YAEtB,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC;QACrC,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,GAAG;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC5F,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aAC7B;QACL,CAAC;QAED;;kFAE0E;QAC1E,yBAAyB,EAAE,UAAU,SAAS,EAAE,KAAK;YACjD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,4BAA4B;YAEhE,IAAI,eAAe,GAAG,CAAC,CAAC,UAAU,CAAC;iBAC9B,QAAQ,CAAC,2BAA2B,CAAC;iBACrC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAEvB,IAAI,mBAAmB,GAAG,CAAC,CAAC,SAAS,CAAC;iBACjC,QAAQ,CAAC,gCAAgC,CAAC;iBAC1C,MAAM,CAAC,eAAe,CAAC,CAAC;YAE7B,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC;iBACnB,QAAQ,CAAC,sBAAsB,CAAC;iBAChC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC;iBACzB,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC;iBACzB,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC;iBAC5B,MAAM,CAAC,mBAAmB,CAAC,CAAC;YAEjC,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;YAErD,OAAO,GAAG,CAAC;QACf,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE;YACvB,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC;iBACnB,QAAQ,CAAC,8BAA8B,CAAC;iBACxC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAExB,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;YAErD,OAAO,GAAG,CAAC;QACf,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE;YACd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnE,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE;YACd,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACrG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACvG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;YACvE,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QAED;kFAC0E;QAC1E,qBAAqB,EAAE;YACnB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACxE,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;gBACzB,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK;gBAClC,OAAO,EAAE,CAAC;wBACN,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK;wBACjC,KAAK,EAAE;4BACH,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBAC1C,CAAC;qBACJ,CAAC;aACL,CAAC,CAAC;QACP,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,IAAI,EAAE,UAAU,QAAQ,EAAE,gBAAgB;YACtC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QACxC,CAAC;QAED;kFAC0E;QAC1E,MAAM,EAAE,UAAU,gBAAgB;YAC9B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QACxC,CAAC;QAED;kFAC0E;QAC1E,WAAW,EAAE,UAAU,GAAG;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;oBACtE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;iBAC9B;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAED;kFAC0E;QAC1E,OAAO,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,UAAU,EAAE,UAAU,GAAG,EAAE,KAAK;QAEhC,CAAC;QAED,0EAA0E;QAE1E;kFAC0E;QAC1E,YAAY,EAAE,UAAU,gBAAgB;YACpC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,cAAc,GAAG,UAAS,IAAI;gBAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;gBAEjB,gDAAgD;gBAChD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9B,OAAO;iBACV;gBAED,wBAAwB;gBACxB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;gBACjC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAEtC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAE5B,wBAAwB;gBACxB,IAAI,gBAAgB,EAAE;oBAClB,gBAAgB,EAAE,CAAC;iBACtB;YACL,CAAC,CAAC;YAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,+BAA+B;YACzH,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,8CAA8C;YAC9C,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBAE/C,sBAAsB;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;gBAEvG,6CAA6C;gBAC7C,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;oBACpC,UAAU,CAAC,IAAI,CAAC,UAAS,IAAI;wBACzB,cAAc,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,IAAI,CAAC;wBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;oBACpE,CAAC,CAAC,CAAC,MAAM,CAAC;wBACN,IAAI,CAAC,SAAS,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACN;qBAAM,EAAE,oCAAoC;oBACzC,cAAc,CAAC,UAAU,CAAC,CAAC;iBAC9B;aAEJ;iBAAM,EAAE,kCAAkC;gBAEvC,6DAA6D;gBAC7D,IAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAE1C,kCAAkC;gBAClC,IAAI,CAAC,KAAK,CAAC;oBACP,GAAG,EAAE,OAAO;oBACZ,IAAI,EAAE,IAAI,CAAC,aAAa;oBACxB,OAAO,EAAE,UAAU,IAAI;wBACnB,cAAc,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC;oBACD,KAAK,EAAE;wBACH,IAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;oBACpE,CAAC;iBACJ,CAAC,CAAC;aAEN;QACL,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE;YAClB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC;QAC3C,CAAC;QAED,yBAAyB,EAAE;YACvB,OAAO;YACH,yHAAyH;aAC5H,CAAC;QACN,CAAC;QAED,0EAA0E;QAE1E;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,MAAM;YAClC,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC;iBACnB,QAAQ,CAAC,iBAAiB,CAAC;iBAC3B,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;iBAC1D,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE5B,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,GAAG,CAAC;QACf,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,IAAI;YACrC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;qBACtD,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvB;QACL,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,MAAM,EAAE,SAAS;YAClD,OAAO,CAAC,CAAC,WAAW,CAAC;iBAChB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;iBAClD,MAAM,CAAC,CAAC,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;QACzE,CAAC;QAED;kFAC0E;QAC1E,kBAAkB,EAAE,UAAU,OAAO;YACjC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,KAAK,EAAE,MAAM;gBACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;YACpD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC;QAED;;;kFAG0E;QAC1E,cAAc,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,iBAAiB;YACnE,IAAI,OAAO,GAAqB;gBAC5B,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;aAC3F,CAAC;YAEF,IAAI,QAAQ,IAAI,IAAI,EAAE;gBAClB,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;aAC3B;YAED,IAAI,iBAAiB,IAAI,KAAK,EAAE;gBAC5B,OAAO,CAAC,iBAAiB,GAAG,KAAK,CAAC;aACrC;YAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACrC,CAAC;QAED;kFAC0E;QAC1E,OAAO,EAAE,UAAU,IAAI,EAAE,OAAO;YAC5B,cAAc;YACd,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;gBACf,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;gBAC9B,QAAQ,EAAE,KAAK;gBACf,iBAAiB,EAAE,IAAI;aAC1B,EAAE,OAAO,CAAC,CAAC;YAEZ,2CAA2C;YAC3C,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;YAED,kDAAkD;YAClD,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC1G,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC1C,iBAAiB;gBACjB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;iBAAM,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,EAAE;gBAC3B,kBAAkB;gBAClB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAClC;iBAAM;gBACH,2BAA2B;gBAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aACnD;YAED,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE5C,0BAA0B;YAC1B,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,iBAAiB,EAAE;oBAC7D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;iBACnC;aACJ;QACL,CAAC;QAED;;kFAE0E;QAC1E,oBAAoB,EAAE,UAAU,SAAS;YACrC,IAAI,SAAS,GAAG,oBAAoB,CAAC;YACrC,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;gBAC5B,SAAS,GAAG,SAAS,GAAG,qBAAqB,CAAC;aACjD;YAED,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;gBACtC,SAAS,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,KAAK,EAAE,MAAM;YACzC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,4BAA4B;YAC5B,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBACnB,OAAO;aACV;YAED,iBAAiB;YACjB,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;YAE9C,+BAA+B;YAC/B,KAAK,CAAC,IAAI,CAAC;gBACP,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxC,IAAI,KAAK,IAAI,CAAC,EAAE;oBACZ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBACrC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAEnC,kDAAkD;YAClD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;YAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC;QAED;kFAC0E;QAC1E,aAAa,EAAE,UAAU,IAAI;YACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,UAAU,KAAK,EAAE,KAAK;gBACxE,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,cAAc,EAAE,UAAU,MAAM;YAC5B,oCAAoC;YACpC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC9B,OAAO;aACV;YAED,8DAA8D;YAC9D,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAExD,oDAAoD;YACpD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAEnC,6CAA6C;YAC7C,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAED;kFAC0E;QAC1E,aAAa,EAAE;YACX,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5D,OAAO;aACV;YAED,IAAI,GAAG,GAAG,CAAC,CAAC,WAAW,CAAC;iBACnB,QAAQ,CAAC,oBAAoB,CAAC;iBAC9B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEhC,IAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;YAC5D,CAAC,CAAC,WAAW,CAAC;iBACT,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC;iBACjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC;iBAC3C,QAAQ,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1D,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACZ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;iBACnD;qBAAM;oBACH,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;iBACtD;aACJ;QACL,CAAC;QAED,0EAA0E;QAE1E;kFAC0E;QAC1E,6BAA6B,EAAE,UAAU,MAAM,EAAE,SAAS;YACtD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YAEnC,kDAAkD;YAClD,IAAI,KAAK,CAAC,OAAO,EAAE;gBACf,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;aAC5C;YAED,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,EAAE;gBACtB,OAAO,IAAI,CAAC,iCAAiC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;aACpE;iBAAM,IAAI,KAAK,CAAC,IAAI,IAAI,UAAU,EAAE;gBACjC,OAAO,IAAI,CAAC,+BAA+B,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;aACtE;iBAAM,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE,wDAAwD;gBAChF,IAAI,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE;oBAC9C,MAAM,EAAE,MAAM;oBACd,KAAK,EAAE,UAAU;oBACjB,MAAM,EAAE,MAAM;oBACd,cAAc,EAAE,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC;iBACjF,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,WAAW,CAAC;aACnE;iBAAM,EAAE,aAAa;gBAClB,OAAO,UAAU,CAAC;aACrB;QACL,CAAC;QAED;kFAC0E;QAC1E,gCAAgC,EAAE,UAAU,MAAM,EAAE,SAAS;YACzD,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO,EAAE,CAAC;aACb;YAED,IAAI,cAAc,GAAG,EAAE,CAAC;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;YAED,OAAO,cAAc,CAAC;QAC1B,CAAC;QAED;kFAC0E;QAC1E,kBAAkB,EAAE,UAAU,OAAO,EAAE,KAAK;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,EAAE;oBAC3B,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;iBACrB;aACJ;YAED,OAAO,EAAE,CAAC,CAAC,iBAAiB;QAChC,CAAC;QAED;kFAC0E;QAC1E,iCAAiC,EAAE,UAAU,KAAK,EAAE,UAAU;YAC1D,IAAI,CAAC,UAAU,EAAE;gBACb,OAAO,EAAE,CAAC;aACb;YAED,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAC1E,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACvC,OAAO,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACxD,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE,UAAU,SAAS,EAAE,UAAU;YAChD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC;YAElC,IAAI,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;gBAC7B,mCAAmC;gBACnC,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE;oBACxB,aAAa,EAAE,KAAK;oBACpB,cAAc,EAAE,EAAE;oBAClB,UAAU,EAAE;wBACR,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC9B,CAAC;iBACJ,EAAE,UAAU,CAAC,CAAC;gBAEf,6CAA6C;gBAC7C,aAAa,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;aAC7C;YAED,IAAI,OAAO,CAAC;YAEZ,6CAA6C;YAC7C,IAAI,OAAO,aAAa,IAAI,QAAQ,EAAE,EAAE,kCAAkC;gBACtE,IAAI,QAAQ,GAAG,UAAU,GAAG,SAAS,GAAG,GAAG,GAAG,aAAa,CAAC,CAAC,2BAA2B;gBACxF,IAAI,UAAU,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE;oBACtD,oFAAoF;oBACpF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC;oBACrG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;iBACvE;qBAAM;oBACH,kBAAkB;oBAClB,oHAAoH;oBACpH,mHAAmH;oBACnH,IAAI,UAAU,CAAC,KAAK,IAAI,SAAS,EAAE;wBAC/B,IAAI,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;wBACtF,IAAI,cAAc,CAAC,WAAW,IAAI,SAAS,EAAE,EAAE,wCAAwC;4BACnF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC;4BACrG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;yBACvE;qBACJ;iBACJ;gBAED,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACnC;iBAAM,IAAI,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,EAAE,2BAA2B;gBACnE,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;gBACrD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;aACzD;iBAAM,EAAE,kDAAkD;gBACvD,OAAO,GAAG,IAAI,CAAC,4BAA4B,CAAC,aAAa,CAAC,CAAC;gBAC3D,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;aACzD;YAED,OAAO,OAAO,CAAC;QACnB,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE,UAAU,SAAS,EAAE,GAAG;YACtC,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,IAAI,CAAC,KAAK,CAAC;gBACP,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,UAAU,IAAI;oBACnB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;wBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC9B,OAAO;qBACV;oBAED,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC3B,CAAC;gBACD,KAAK,EAAE;oBACH,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;oBAC3F,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAChC,CAAC;aACJ,CAAC,CAAC;YAEH,OAAO,OAAO,CAAC;QACnB,CAAC;QAED;;kFAE0E;QAC1E,iBAAiB,EAAE,UAAU,OAAO,EAAE,OAAO;YAEzC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE;gBAC/C,OAAO;aACV;YAED,+BAA+B;YAC/B,IAAI,YAAY,CAAC;YACjB,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC/B,YAAY,GAAG,UAAU,MAAM;oBAC3B,OAAO,MAAM,CAAC,KAAK,CAAC;gBACxB,CAAC,CAAC;aACL;iBAAM,EAAE,gBAAgB;gBACrB,YAAY,GAAG,UAAU,MAAM;oBAC3B,OAAO,MAAM,CAAC,WAAW,CAAC;gBAC9B,CAAC,CAAC;aACL;YAED,IAAI,WAAW,CAAC;YAChB,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;gBAC9C,WAAW,GAAG,UAAU,OAAO,EAAE,OAAO;oBACpC,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtE,CAAC,CAAC;aACL;iBAAM,EAAE,mBAAmB;gBACxB,WAAW,GAAG,UAAU,OAAO,EAAE,OAAO;oBACpC,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;gBACzD,CAAC,CAAC;aACL;YAED,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBAC7B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBACvB,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACN;iBAAM,EAAE,eAAe;gBACpB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBACvB,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QAED;kFAC0E;QAC1E,4BAA4B,EAAE,UAAU,OAAO;YAC3C,IAAI,IAAI,GAAG,EAAE,CAAC;YAEd,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,QAAQ,EAAE,SAAS;gBACzC,IAAI,CAAC,IAAI,CAAC;oBACN,KAAK,EAAE,QAAQ;oBACf,WAAW,EAAE,SAAS;iBACzB,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC;QAChB,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,YAAY;YAC1C,IAAI,IAAI,GAAG,EAAE,CAAC;YAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE;oBAClC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9B;qBAAM,EAAE,4CAA4C;oBACjD,IAAI,CAAC,IAAI,CAAC;wBACN,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC;wBACtB,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC;qBAC/B,CAAC,CAAC;iBACN;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAED;;;;;kFAK0E;QAC1E,UAAU,EAAE,UAAU,UAAU;YAC5B,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,+BAA+B;gBAClE,OAAO,IAAI,IAAI,CACX,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CACrC,CAAC;aACL;iBAAM,IAAI,UAAU,CAAC,MAAM,IAAI,EAAE,EAAE,EAAE,oBAAoB;gBACtD,OAAO,IAAI,IAAI,CACX,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EACrC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EACzC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CACxC,CAAC;aACL;iBAAM,IAAI,UAAU,CAAC,MAAM,IAAI,EAAE,EAAE,EAAE,6BAA6B;gBAC/D,OAAO,IAAI,IAAI,CACX,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EACrC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,EACzC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EACrC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EACtC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EACtC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CACzC,CAAC;aACL;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,wCAAwC,GAAG,UAAU,CAAC,CAAC;gBACrE,OAAO,eAAe,CAAC;aAC1B;QACL,CAAC;QAED,0EAA0E;QAE1E;kFAC0E;QAC1E,cAAc,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC/B,QAAQ,CAAC,gBAAgB,CAAC;iBAC1B,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACvD;QACL,CAAC;QAED;kFAC0E;QAC1E,eAAe,EAAE,UAAU,IAAI;YAE3B,wBAAwB;YACxB,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,EAAE;gBAC3E,IAAI,CAAC,QAAQ,CAAC,kDAAkD,CAAC,CAAC;gBAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACpB,OAAO,IAAI,CAAC;aACf;YAED,IAAI,YAAY,GAAG,CAAC,CAAC,eAAe,CAAC;iBAChC,QAAQ,CAAC,qBAAqB,CAAC;iBAC/B,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEjC,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,0CAA0C,EAAE,gBAAgB,CAAC,CAAC;YAExG,mBAAmB;YACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,YAAY;qBACP,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAChC;YAED,kBAAkB;YAClB,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,YAAY;qBACP,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACpC;YAED,eAAe;YACf,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,IAAI,KAAK,GAAG,CAAC,CAAC,gDAAgD,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBACvF,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACpB,YAAY;iBACf;qBAAM,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,EAAE;oBACvC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;iBACvD;aACJ;YAED,eAAe;YACf,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,CAAC,CAAC,wBAAwB,CAAC;qBACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;qBACf,QAAQ,CAAC,0BAA0B,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;aACpE;YAED,aAAa;YACb,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,YAAY,CAAC,KAAK,CAAC;oBACf,IAAI,CAAC,KAAK,EAAE,CAAC;gBACjB,CAAC,CAAC,CAAC;aACN;YAED,gCAAgC;YAChC,IAAI,sBAAsB,GAAG,SAAS,CAAC;YACvC,IAAI,oBAAoB,GAAG,SAAS,CAAC;YACrC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE;gBACrC,sBAAsB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC;gBACrE,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC;aACpE;YAED,uBAAuB;YACvB,YAAY,CAAC,KAAK,CAAC;gBACf,YAAY,CAAC,QAAQ,CAAC,2BAA2B,EAAE,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;YACrG,CAAC,EAAE;gBACC,YAAY,CAAC,WAAW,CAAC,2BAA2B,EAAE,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;YACxG,CAAC,CAAC,CAAC;YAEH,OAAO,YAAY,CAAC;QACxB,CAAC;QAED,0EAA0E;QAE1E;kFAC0E;QAC1E,UAAU,EAAE,UAAU,OAAO;YACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACvD,CAAC;QAED,0EAA0E;QAE1E;;kFAE0E;QAC1E,aAAa,EAAE,IAAI;QACnB,SAAS,EAAE,UAAU,OAAO,EAAE,KAAK;YAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,CAAE,EAAE;YAEpB,6DAA6D;YAC7D,IAAI,CAAC,SAAS;iBACT,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;iBACnC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;iBACrC,QAAQ,CAAC,wCAAwC,CAAC;iBAClD,IAAI,EAAE,CAAC;YAEZ,IAAI,WAAW,GAAG;gBACd,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,wCAAwC,CAAC,CAAC;gBACrE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;YAC/C,CAAC,CAAC;YAEF,IAAI,KAAK,EAAE;gBACP,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpB,OAAO;iBACV;gBAED,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;aACvD;iBAAM;gBACH,WAAW,EAAE,CAAC;aACjB;QACL,CAAC;QAED;kFAC0E;QAC1E,SAAS,EAAE;YACP,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC1C,CAAC;QAED;kFAC0E;QAC1E,OAAO,EAAE;YACL,OAAO,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,IAAI,EAAE,SAAS,EAAE,cAAc;YAC7D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;gBAC7B,OAAO;aACV;YAED,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAEzB,IAAI,cAAc,EAAE;gBAChB,IAAI,CAAC,KAAK,CAAC;oBACP,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;gBAClC,CAAC,EAAE;oBACC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QAED,0EAA0E;QAE1E;;;kFAG0E;QAC1E,gBAAgB,EAAE,UAAU,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK;YAC5D,IAAI,CAAC,KAAK,CAAC;gBACP,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE,KAAK;aACf,CAAC,CAAC;QACP,CAAC;QAED,2BAA2B,EAAE;YACzB,IAAI,IAAI,CAAC,OAAO,CAAC,8BAA8B,EAAE;gBAC7C,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,8BAA8B,CAAC;aAC/D;iBAAM;gBACH,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACzB;QACL,CAAC;QAED;;kFAE0E;QAC1E,KAAK,EAAE,UAAU,OAAO;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,gCAAgC;YAChC,IAAI,IAAI,GAAsB;gBAC1B,UAAU,EAAE;oBACR,GAAG,EAAE;wBACD,IAAI,CAAC,2BAA2B,EAAE,CAAC;oBACvC,CAAC;iBACJ;aACJ,CAAC;YAEF,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YAE1D,kBAAkB;YAClB,IAAI,CAAC,OAAO,GAAG,UAAU,IAAI;gBACzB,kCAAkC;gBAClC,IAAI,IAAI,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,EAAE;oBAC1C,IAAI,CAAC,2BAA2B,EAAE,CAAC;iBACtC;gBAED,IAAI,OAAO,CAAC,OAAO,EAAE;oBACjB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBACzB;YACL,CAAC,CAAC;YAEF,gBAAgB;YAChB,IAAI,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE,UAAU,EAAE,WAAW;gBACjD,IAAI,aAAa,EAAE;oBACf,KAAK,CAAC,KAAK,EAAE,CAAC;oBACd,OAAO;iBACV;gBAED,IAAI,OAAO,CAAC,KAAK,EAAE;oBACf,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;iBAC5B;YACL,CAAC,CAAC;YAEF,mBAAmB;YACnB,IAAI,CAAC,QAAQ,GAAG;gBACZ,IAAI,OAAO,CAAC,QAAQ,EAAE;oBAClB,OAAO,CAAC,QAAQ,EAAE,CAAC;iBACtB;YACL,CAAC,CAAC;YAEF,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,MAAM;YAClC,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,UAAU,EAAE,UAAU,GAAG,EAAE,KAAK;YAC5B,GAAG,GAAG,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAElC,IAAI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;YAC9C,QAAQ,CAAC,MAAM,GAAG,kBAAkB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,YAAY,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;QAC1H,CAAC;QAED;kFAC0E;QAC1E,UAAU,EAAE,UAAU,GAAG;YACrB,GAAG,GAAG,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;YAElC,IAAI,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;oBAChB,SAAS;iBACZ;gBAED,IAAI,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACxC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;oBACtB,SAAS;iBACZ;gBAED,IAAI,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;oBACzC,OAAO,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;iBAChD;aACJ;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAED;kFAC0E;QAC1E,wBAAwB,EAAE;YAEtB,IAAI,UAAU,GAAG,UAAU,KAAK;gBAC5B,IAAI,IAAI,GAAG,CAAC,CAAC;gBACb,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;oBACnB,OAAO,IAAI,CAAC;iBACf;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,IAAI,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC7B,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBACjC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;iBACtB;gBAED,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC;YAEF,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACtB,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,GAAG,CAAC;aACtD;YAED,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;YACjG,OAAO,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QAC7C,CAAC;QAED;;kFAE0E;QAE1E,iBAAiB,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAC9C,CAAC;QAED,gBAAgB,EAAE,UAAU,IAAI;YAC5B,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,cAAc,EAAE,UAAU,IAAI,EAAE,QAAQ;YACpC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACvG,CAAC;QAED,cAAc,EAAE,UAAU,KAAK,EAAE,MAAM;YACnC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;QACxE,CAAC;QAED,iBAAiB,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAC9C,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,GAAG,EAAE,QAAQ;YACzC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC3B,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;aACxB;iBAAM;gBACH,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1D,IAAI,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5D,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;aAC1D;QACL,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,GAAG,EAAE,QAAQ,EAAE,KAAK;YAChD,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC3B,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;aACzB;iBAAM;gBACH,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC1D,IAAI,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5D,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;aAC1D;QACL,CAAC;QAED;kFAC0E;QAC1E,6BAA6B,EAAE,UAAU,KAAK,EAAE,KAAK;YACjD,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;gBAC7B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrB;QACL,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE,UAAU,KAAK,EAAE,KAAK,EAAE,WAAW;YAElD,yCAAyC;YACzC,IAAI,CAAC,WAAW,EAAE;gBACd,WAAW,GAAG,UAAU,CAAC,EAAE,CAAC;oBACxB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC;aACL;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC9B,OAAO,CAAC,CAAC;iBACZ;aACJ;YAED,OAAO,CAAC,CAAC,CAAC;QACd,CAAC;QAED;;kFAE0E;QAC1E,gBAAgB,EAAE,UAAU,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,YAAY;YACtD,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;gBACxD,OAAO,YAAY,CAAC;aACvB;YAED,IAAI,MAAM,GAAG,GAAG,EAAE;gBACd,OAAO,GAAG,CAAC;aACd;YAED,IAAI,MAAM,GAAG,GAAG,EAAE;gBACd,OAAO,GAAG,CAAC;aACd;YAED,OAAO,MAAM,CAAC;QAClB,CAAC;QAED;;;kFAG0E;QAC1E,aAAa,EAAE;YACX,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC;aACf;YAED,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,WAAW,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBACtC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAChD;YAED,OAAO,GAAG,CAAC;QACf,CAAC;QAED;WACG;QACH,iBAAiB,EAAE,UAAU,GAAG;YAC5B,OAAO,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC;QAC5C,CAAC;QAED,0EAA0E;QAE1E,SAAS,EAAE,UAAU,IAAI;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACjB,OAAO;aACV;YAED,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;QACzC,CAAC;QAED,QAAQ,EAAE,UAAU,IAAI;YACpB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACjB,OAAO;aACV;YAED,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;QACxC,CAAC;QAED,QAAQ,EAAE,UAAU,IAAI;YACpB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACjB,OAAO;aACV;YAED,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;QAC3C,CAAC;QAED,SAAS,EAAE,UAAU,IAAI;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACjB,OAAO;aACV;YAED,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;QACzC,CAAC;KAEJ,CAAC,CAAC;IAEH;4FACwF;IACxF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE;QAC1B,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,GAAG;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACtB,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;gBACZ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACjB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,IAAI,GAAG,CAAC;gBACR,IAAI,IAAI,GAAG,CAAC;YAChB,OAAO,IAAI,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE;gBACvB,IAAI,IAAI,IAAI,IAAI;oBACZ,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG;oBAClB,OAAO,IAAI,CAAC;aACnB;YACD,OAAO,CAAC,CAAC,CAAC;QACd,CAAC,CAAC;KACL;AAEL,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAE1E;;;kFAG0E;QAC1E,oBAAoB,EAAE,UAAU,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK;YACzD,IAAI,CAAC,KAAK,CAAC;gBACP,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,QAAQ;gBACd,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE,KAAK;aACf,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,+BAA+B,EAAE,UAAU,SAAS;YAChD,8CAA8C;YAC9C,OAAO,CAAC,CAAC,SAAS,CAAC;iBACd,QAAQ,CAAC,oBAAoB,CAAC;iBAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;QACjG,CAAC;QAED;kFAC0E;QAC1E,0BAA0B,EAAE,UAAU,UAAU;YAC5C,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,EAChC,KAAK,GAAG,UAAU,CAAC,KAAK,EACxB,MAAM,GAAG,UAAU,CAAC,MAAM,EAC1B,QAAQ,GAAG,UAAU,CAAC,QAAQ,EAC9B,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;YAE3B,eAAe;YACf,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAE3C,yDAAyD;YACzD,IAAI,KAAK,IAAI,SAAS,IAAI,KAAK,IAAI,IAAI,EAAE;gBACrC,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC;aAC9B;YAED,iCAAiC;YACjC,IAAI,KAAK,CAAC,KAAK,EAAE;gBACb,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;oBACvB,KAAK,EAAE,KAAK;oBACZ,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,IAAI;iBACb,CAAC,CAAC,CAAC;gBAEJ,qCAAqC;gBACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBACpB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,GAAG,SAAS,CAAC,CAAC;iBAC1C;gBAED,6BAA6B;gBAC7B,OAAO,CAAC,CAAC,SAAS,CAAC;qBACd,QAAQ,CAAC,kCAAkC,CAAC;qBAC5C,MAAM,CAAC,MAAM,CAAC,CAAC;aACvB;YAED,sCAAsC;YACtC,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,EAAE;gBACtB,OAAO,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;aACjE;iBAAM,IAAI,KAAK,CAAC,IAAI,IAAI,UAAU,EAAE;gBACjC,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;aAChE;iBAAM,IAAI,KAAK,CAAC,IAAI,IAAI,UAAU,EAAE;gBACjC,OAAO,IAAI,CAAC,4BAA4B,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;aACrE;iBAAM,IAAI,KAAK,CAAC,IAAI,IAAI,UAAU,EAAE;gBACjC,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;aAChE;iBAAM,IAAI,KAAK,CAAC,OAAO,EAAE;gBACtB,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa,EAAE;oBAC7B,OAAO,IAAI,CAAC,8BAA8B,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;iBACzF;qBAAM;oBACH,OAAO,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;iBAC5F;aACJ;iBAAM;gBACH,OAAO,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;aACjE;QACL,CAAC;QAED,2DAA2D;QAC3D,qBAAqB,EAAE,UAAU,SAAS,EAAE,KAAK;YAC7C,IAAI,KAAK,IAAI,SAAS,EAAE;gBACpB,KAAK,GAAG,EAAE,CAAC;aACd;YAED,OAAO,CAAC,CAAC,6BAA6B,GAAG,SAAS,GAAG,aAAa,GAAG,SAAS,GAAG,YAAY,CAAC;iBACzF,GAAG,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;QAED;kFAC0E;QAC1E,wBAAwB,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,KAAK;YACvD,IAAI,MAAM,GAAG,CAAC,CAAC,gBAAgB,GAAG,KAAK,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,GAAG,sBAAsB,GAAG,SAAS,GAAG,YAAY,CAAC,CAAC;YACpI,IAAG,KAAK,IAAI,SAAS,EAAE;gBACnB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAC1E,MAAM,CAAC,UAAU,CAAC,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC,CAAC;YACjD,OAAO,CAAC,CAAC,SAAS,CAAC;iBACd,QAAQ,CAAC,gCAAgC,CAAC;iBAC1C,MAAM,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC;QAED;kFAC0E;QAC1E,uBAAuB,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,KAAK;YACtD,IAAI,SAAS,GAAG,CAAC,CAAC,mBAAmB,GAAG,KAAK,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,GAAG,UAAU,GAAG,SAAS,GAAG,eAAe,CAAC,CAAC;YACjI,IAAI,KAAK,IAAI,SAAS,EAAE;gBACpB,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACxB;YAED,OAAO,CAAC,CAAC,SAAS,CAAC;iBACd,QAAQ,CAAC,oCAAoC,CAAC;iBAC9C,MAAM,CAAC,SAAS,CAAC,CAAC;QAC3B,CAAC;QAED;kFAC0E;QAC1E,wBAAwB,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,KAAK;YACvD,IAAI,MAAM,GAAG,CAAC,CAAC,gBAAgB,GAAG,KAAK,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,GAAG,sBAAsB,GAAG,SAAS,GAAG,YAAY,CAAC,CAAC;YACpI,IAAI,KAAK,IAAI,SAAS,EAAE;gBACpB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,OAAO,CAAC,CAAC,SAAS,CAAC;iBACd,QAAQ,CAAC,gCAAgC,CAAC;iBAC1C,MAAM,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC;QAED;kFAC0E;QAC1E,4BAA4B,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,KAAK;YAC3D,IAAI,MAAM,GAAG,CAAC,CAAC,gBAAgB,GAAG,KAAK,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,GAAG,0BAA0B,GAAG,SAAS,GAAG,YAAY,CAAC,CAAC;YACxI,IAAI,KAAK,IAAI,SAAS,EAAE;gBACpB,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,OAAO,CAAC,CAAC,SAAS,CAAC;iBACd,QAAQ,CAAC,oCAAoC,CAAC;iBAC9C,MAAM,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC;QAED;kFAC0E;QAC1E,uBAAuB,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,KAAK;YACtD,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,oDAAoD;YACpD,IAAI,KAAK,IAAI,SAAS,EAAE;gBACpB,KAAK,GAAG,IAAI,CAAC,qCAAqC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;aAC9E;YAED,wBAAwB;YACxB,IAAI,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC3B,QAAQ,CAAC,oCAAoC,CAAC,CAAC;YAEpD,qCAAqC;YACrC,IAAI,SAAS,GAAG,CAAC,CAAC,gBAAgB,GAAG,KAAK,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,GAAG,0BAA0B,GAAG,SAAS,GAAG,MAAM,CAAC;iBAC/H,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC7B,IAAI,KAAK,IAAI,SAAS,EAAE;gBACpB,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACxB;YAED,mDAAmD;YACnD,IAAI,SAAS,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,+BAA+B,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;iBAC/G,QAAQ,CAAC,aAAa,CAAC,CAAC;YAE7B,mDAAmD;YACnD,IAAI,IAAI,CAAC,qCAAqC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;gBAC9D,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;aACxC;YAED,+EAA+E;YAC/E,IAAI,2BAA2B,GAAG;gBAC9B,IAAI,aAAa,GAAG,IAAI,CAAC,qCAAqC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC7C,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,aAAa,CAAC,WAAW,CAAC,CAAC;YAChE,CAAC,CAAC;YAEF,mFAAmF;YACnF,SAAS,CAAC,KAAK,CAAC;gBACZ,2BAA2B,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,4CAA4C;YAC5C,IAAI,KAAK,CAAC,cAAc,IAAI,KAAK,EAAE;gBAC/B,SAAS;qBACJ,QAAQ,CAAC,8BAA8B,CAAC;qBACxC,KAAK,CAAC;oBACH,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;wBAC1B,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;qBACtC;yBAAM;wBACH,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;qBACrC;oBAED,2BAA2B,EAAE,CAAC;gBAClC,CAAC,CAAC,CAAC;aACV;YAED,OAAO,aAAa,CAAC;QACzB,CAAC;QAED;kFAC0E;QAC1E,2BAA2B,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI;YAEhF,wBAAwB;YACxB,IAAI,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC3B,QAAQ,CAAC,oCAAoC,CAAC,CAAC;YAEpD,uBAAuB;YACvB,IAAI,OAAO,GAAG,CAAC,CAAC,iBAAiB,GAAG,KAAK,CAAC,UAAU,GAAG,aAAa,GAAG,SAAS,GAAG,UAAU,GAAG,SAAS,GAAG,aAAa,CAAC;iBACrH,QAAQ,CAAC,aAAa,CAAC,CAAC;YAE7B,aAAa;YACb,IAAI,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE;gBAC9C,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,IAAI;gBACV,cAAc,EAAE,IAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC;aAC7E,CAAC,CAAC;YAEH,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;YAE3D,OAAO,aAAa,CAAC;QACzB,CAAC;QAED;kFAC0E;QAC1E,4BAA4B,EAAE,UAAU,OAAO,EAAE,OAAO,EAAE,KAAK;YAC3D,OAAO,CAAC,KAAK,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,CAAC,CAAC,SAAS,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;qBAChH,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBACrB,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC1B;QACL,CAAC;QAED;kFAC0E;QAC1E,8BAA8B,EAAE,UAAU,KAAK,EAAE,SAAS;YACtD,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO,EAAE,CAAC;aACb;YAED,IAAI,cAAc,GAAG,EAAE,CAAC;YAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBAEjC,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,GAAG,aAAa,GAAG,GAAG,CAAC,CAAC;gBAClE,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;oBACxB,SAAS;iBACZ;gBAED,cAAc,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;aACpD;YAGD,OAAO,cAAc,CAAC;QAC1B,CAAC;QAED;kFAC0E;QAC1E,8BAA8B,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM;YAC7E,IAAI,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC3B,QAAQ,CAAC,2CAA2C,CAAC,CAAC;YAE3D,IAAI,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE;gBAC9C,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,MAAM;aACjB,CAAC,CAAC;YAEH,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAS,CAAQ,EAAE,MAAM;gBACrC,IAAI,eAAe,GAAG,CAAC,CAAC,sBAAsB,CAAC;qBAC1C,QAAQ,CAAC,oBAAoB,CAAC;qBAC9B,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAE7B,IAAI,YAAY,GAAG,CAAC,CAAC,+BAA+B,GAAG,SAAS,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,GAAG,KAAK,CAAC,UAAU,GAAG,UAAU,GAAG,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;qBAC1M,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;qBACjB,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAE/B,IAAI,SAAS,GAAG,CAAC,CAAC,eAAe,CAAC;qBAC7B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;qBACxB,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAE/B,IAAI,KAAK,CAAC,cAAc,IAAI,KAAK,EAAE;oBAC/B,SAAS;yBACJ,QAAQ,CAAC,8BAA8B,CAAC;yBACxC,KAAK,CAAC;wBACH,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;4BAC9B,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;yBACxC;oBACL,CAAC,CAAC,CAAC;iBACV;YACL,CAAC,CAAC,CAAC;YAEH,OAAO,aAAa,CAAC;QACzB,CAAC;QAED;kFAC0E;QAC1E,+BAA+B,EAAE,UAAU,SAAS,EAAE,KAAK;YACvD,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACxD,CAAC;QAED;kFAC0E;QAC1E,qCAAqC,EAAE,UAAU,SAAS,EAAE,KAAK;YAC7D,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAClH,CAAC;QAED;;kFAE0E;QAC1E,qCAAqC,EAAE,UAAU,SAAS,EAAE,OAAO;YAC/D,OAAO,IAAI,CAAC,4CAA4C,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3F,CAAC;QAED;kFAC0E;QAC1E,4CAA4C,EAAE,UAAU,SAAS;YAC7D,IAAI,QAAQ,GAAG,WAAW,GAAG,SAAS,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBAExB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,iCAAiC,CAAC,SAAS,CAAC,CAAC;aAC7E;YAED,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC;QAED;;;kFAG0E;QAC1E,iCAAiC,EAAE,UAAU,SAAS;YAClD,IAAI,UAAU,GAAG,EAAE,CAAC;YACpB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,UAAU,QAAQ,EAAE,SAAS;gBACvE,IAAI,YAAY,EAAE,GAAG,CAAC,EAAE;oBACpB,UAAU,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC;iBACpE;YACL,CAAC,CAAC,CAAC;YAEH,OAAO,UAAU,CAAC;QACtB,CAAC;QAED;UACE;QACF,qBAAqB,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE,MAAM;YAClD,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,mBAAmB;iBACnC,IAAI,CAAC;gBACF,IAAI,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBAE5B,gBAAgB;gBAChB,IAAI,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAI,CAAC,SAAS,EAAE;oBACZ,OAAO;iBACV;gBAED,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAE3C,0CAA0C;gBAC1C,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBAClB,OAAO;iBACV;gBAED,qBAAqB;gBACrB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,UAAU,KAAK,EAAE,cAAc;oBACnD,4BAA4B;oBAC5B,IAAI,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,GAAG,cAAc,GAAG,GAAG,CAAC,CAAC;oBAC3E,gCAAgC;oBAChC,kBAAkB,CAAC,MAAM,CAAC;wBAEtB,iBAAiB;wBACjB,IAAI,UAAU,GAAG;4BACb,MAAM,EAAE,MAAM;4BACd,MAAM,EAAE,MAAM;4BACd,IAAI,EAAE,KAAK;4BACX,cAAc,EAAE,EAAE;yBACrB,CAAC;wBACF,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,8BAA8B,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;wBACxF,IAAI,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;wBAE9D,gCAAgC;wBAChC,IAAI,CAAC,4BAA4B,CAAC,aAAa,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;wBAErE,0DAA0D;wBAC1D,aAAa,CAAC,MAAM,EAAE,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACX,CAAC;QAED;kFAC0E;QAC1E,2BAA2B,EAAE,UAAU,MAAM,EAAE,KAAK;YAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAE3C,mCAAmC;gBACnC,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,EAAE;oBACrB,SAAS;iBACZ;gBAED,gEAAgE;gBAChE,IAAI,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;gBAC7D,IAAI,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC3B,SAAS;iBACZ;gBAED,+CAA+C;gBAC/C,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,EAAE;oBACtB,IAAI,OAAO,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;oBAClC,IAAI,OAAO,EAAE;wBACT,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;wBAC1E,IAAI;4BACA,IAAI,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;4BAC1D,MAAM,CAAC,SAAS,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;yBACxD;wBAAC,OAAO,CAAC,EAAE;4BACR,+CAA+C;4BAC/C,IAAI,CAAC,QAAQ,CAAC,qCAAqC,GAAG,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC;4BAClF,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;yBACjC;qBACJ;yBAAM;wBACH,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG,SAAS,CAAC,CAAC;wBACjD,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,wCAAwC;qBAC1E;iBACJ;qBAAM,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,IAAI,aAAa,EAAE;oBACrD,IAAI,eAAe,GAAG,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACvD,IAAI,eAAe,CAAC,MAAM,EAAE;wBACxB,MAAM,CAAC,SAAS,CAAC,GAAG,eAAe,CAAC,GAAG,EAAE,CAAC;qBAC7C;yBAAM;wBACH,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;qBACjC;iBACJ;qBAAM;oBACH,MAAM,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;iBAC3C;aACJ;QACL,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,OAAO,EAAE,OAAO,EAAE,UAAU;YAC7D,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO;aACV;YAED,IAAI,OAAO,IAAI,KAAK,EAAE;gBAClB,OAAO;qBACF,UAAU,CAAC,UAAU,CAAC;qBACtB,WAAW,CAAC,mBAAmB,CAAC,CAAC;aACzC;iBAAM;gBACH,OAAO;qBACF,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC;qBAC5B,QAAQ,CAAC,mBAAmB,CAAC,CAAC;aACtC;YAED,IAAI,UAAU,EAAE;gBACZ,OAAO;qBACF,IAAI,CAAC,MAAM,CAAC;qBACZ,IAAI,CAAC,UAAU,CAAC,CAAC;aACzB;QACL,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;KAC1C,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAC1E,OAAO,EAAE;YAEL,QAAQ;YACR,WAAW,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YAEvC,cAAc;YACd,QAAQ,EAAE;gBACN,YAAY,EAAE,gBAAgB;aACjC;SACJ;QAED;;kFAE0E;QAE1E,cAAc,EAAE,IAAI;QAEpB;;kFAE0E;QAE1E;kFAC0E;QAC1E,OAAO,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;gBACpC,OAAO;aACV;YAED,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,sDAAsD;YACtD,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC7B,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEpC,gBAAgB;YAChB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;gBACvB,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY;gBACzC,OAAO,EACC,CAAC;wBACG,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM;wBAClC,KAAK,EAAE;4BACH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBACxC,CAAC;qBACJ,EAAE;wBACC,EAAE,EAAE,2BAA2B;wBAC/B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI;wBAChC,KAAK,EAAE;4BACH,IAAI,CAAC,0BAA0B,EAAE,CAAC;wBACtC,CAAC;qBACJ,CAAC;gBACV,KAAK,EAAE;oBACH,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;oBAC9D,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;oBAClF,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;oBAChF,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC9E,cAAc,CAAC,MAAM,EAAE,CAAC;gBAC5B,CAAC;aACJ,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBAC9B,qEAAqE;gBACrE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC;oBAC1C,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC9B,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,+EAA+E;gBAC/E,IAAI,CAAC,eAAe,CAAC;oBACjB,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,gCAAgC;oBAC1C,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY;oBACxC,KAAK,EAAE;wBACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC9B,CAAC;iBACJ,CAAC,CAAC;aACN;QACL,CAAC;QAED,0BAA0B,EAAE;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAClF,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEtD,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,IAAI,KAAK,EAAE;gBAC9F,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACjF,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;aACxD;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,cAAc,EAAE;YACZ,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC;QAED;kFAC0E;QAC1E,SAAS,EAAE,UAAU,OAAO;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;gBACf,UAAU,EAAE,KAAK;gBACjB,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB;gBACjD,OAAO,EAAE,cAAc,CAAC;gBACxB,KAAK,EAAE,cAAc,CAAC;aACzB,EAAE,OAAO,CAAC,CAAC;YAEZ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,uEAAuE,CAAC,CAAC;gBACvF,OAAO;aACV;YAED,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,OAAO,CACR,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBACvC,QAAQ,EAAE,IAAI;oBACd,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;iBAC/C,CAAC,CAAC;gBAEP,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,OAAO;aACV;YAED,IAAI,iBAAiB,GAAG,UAAU,IAAI;gBAClC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9B,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACpB,OAAO;iBACV;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,SAAS,CAAC,+CAA+C,CAAC,CAAC;oBAChE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACpB,OAAO;iBACV;gBAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAO,CACR,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;oBACpC,QAAQ,EAAE,IAAI;oBACd,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;iBAC/C,CAAC,CAAC;gBAEP,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC;YAEF,gDAAgD;YAChD,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAEjE,sBAAsB;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE5E,6CAA6C;gBAC7C,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;oBACpC,cAAc;oBACd,UAAU,CAAC,IAAI,CAAC,UAAU,IAAI;wBAC1B,iBAAiB,CAAC,IAAI,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC,IAAI,CAAC;wBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;wBAChE,OAAO,CAAC,KAAK,EAAE,CAAC;oBACpB,CAAC,CAAC,CAAC;iBACN;qBAAM,EAAE,wCAAwC;oBAC7C,iBAAiB,CAAC,UAAU,CAAC,CAAC;iBACjC;aAEJ;iBAAM,EAAE,0BAA0B;gBAE/B,oCAAoC;gBACpC,IAAI,CAAC,oBAAoB,CACrB,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAChD,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EACvB,UAAU,IAAI;oBACV,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC,EACD;oBACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;oBAChE,OAAO,CAAC,KAAK,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC;aAEV;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,kBAAkB,EAAE;YAChB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,4BAA4B;YAC5B,IAAI,cAAc,GAAG,CAAC,CAAC,qFAAqF,CAAC,CAAC;YAE9G,uBAAuB;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAE7C,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAE3C,kFAAkF;gBAClF,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC3C,SAAS;iBACZ;gBAED,uDAAuD;gBACvD,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,EAAE;oBACvB,SAAS;iBACZ;gBAED,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,EAAE;oBACxB,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;oBACjF,SAAS;iBACZ;gBAED,6DAA6D;gBAC7D,IAAI,eAAe,GAAG,CAAC,CAAC,SAAS,CAAC;qBAC7B,QAAQ,CAAC,8BAA8B,CAAC;qBACxC,QAAQ,CAAC,cAAc,CAAC,CAAC;gBAE9B,0BAA0B;gBAC1B,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC,CAAC;gBAExE,sBAAsB;gBACtB,eAAe,CAAC,MAAM,CAClB,IAAI,CAAC,0BAA0B,CAAC;oBAC5B,SAAS,EAAE,SAAS;oBACpB,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,cAAc;iBACvB,CAAC,CAAC,CAAC;aACX;YAED,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;YAEhE,cAAc,CAAC,MAAM,CAAC;gBAClB,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;YAEH,eAAe;YACf,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QACrF,CAAC;QAED;kFAC0E;QAC1E,kBAAkB,EAAE,UAAU,cAAc,EAAE,WAAW;YACrD,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,iBAAiB,GAAG,UAAU,IAAI;gBAClC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9B,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC9E,OAAO;iBACV;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,SAAS,CAAC,+CAA+C,CAAC,CAAC;oBAChE,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC9E,OAAO;iBACV;gBAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAO,CACR,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;oBACpC,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBACP,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACxC,CAAC,CAAC;YAEF,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC,4CAA4C;YAErF,gDAAgD;YAChD,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAEjD,sBAAsB;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC;gBAE/E,6CAA6C;gBAC7C,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;oBACpC,cAAc;oBACd,UAAU,CAAC,IAAI,CAAC,UAAU,IAAI;wBAC1B,iBAAiB,CAAC,IAAI,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC,IAAI,CAAC;wBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;wBAChE,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAClF,CAAC,CAAC,CAAC;iBACN;qBAAM,EAAE,wCAAwC;oBAC7C,iBAAiB,CAAC,UAAU,CAAC,CAAC;iBACjC;aAEJ;iBAAM,EAAE,0BAA0B;gBAE/B,oCAAoC;gBACpC,IAAI,CAAC,oBAAoB,CACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EACjC,cAAc,CAAC,SAAS,EAAE,EAC1B,UAAU,IAAI;oBACV,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAC5B,CAAC,EACD;oBACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;oBAChE,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAClF,CAAC,CAAC,CAAC;aACV;QACL,CAAC;QAED,cAAc,EAAE,UAAU,IAAI;YAC1B,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QACtF,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;QACvC,sBAAsB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB;QACrE,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;KAC9E,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAC1E,OAAO,EAAE;YAEL,QAAQ;YACR,aAAa,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YACzC,UAAU,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YAEtC,cAAc;YACd,QAAQ,EAAE;gBACN,UAAU,EAAE,aAAa;aAC5B;SACJ;QAED;;kFAE0E;QAE1E,SAAS,EAAE,IAAI;QACf,YAAY,EAAE,IAAI;QAElB;;kFAE0E;QAE1E;kFAC0E;QAC1E,OAAO,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;gBACpC,OAAO;aACV;YAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE;YAClB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,sDAAsD;YACtD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,aAAa,CAAC;iBAC5B,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEpC,gBAAgB;YAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAClB,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,KAAK;gBACf,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU;gBACvC,OAAO,EACC,CAAC;wBACG,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM;wBAClC,KAAK,EAAE;4BACH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBACnC,CAAC;qBACJ,EAAE;wBACC,EAAE,EAAE,sBAAsB;wBAC1B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI;wBAChC,KAAK,EAAE;4BACH,IAAI,CAAC,wBAAwB,EAAE,CAAC;wBACpC,CAAC;qBACJ,CAAC;gBACV,KAAK,EAAE;oBACH,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAClD,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;oBACxE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;oBACjG,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC9E,SAAS,CAAC,MAAM,EAAE,CAAC;gBACvB,CAAC;aACJ,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,wBAAwB,EAAE;YACtB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,wDAAwD;YACxD,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;gBAClD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC/B,OAAO;aACV;YAED,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACxE,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,KAAK,EAAE;gBAC/G,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACjF,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;aAC9C;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,YAAY,EAAE,UAAU,OAAO;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;gBACf,UAAU,EAAE,KAAK;gBACjB,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB;gBACjD,OAAO,EAAE,cAAc,CAAC;gBACxB,KAAK,EAAE,cAAc,CAAC;aACzB,EAAE,OAAO,CAAC,CAAC;YAEZ,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,0EAA0E,CAAC,CAAC;gBAC1F,OAAO;aACV;YAED,IAAI,GAAG,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACpD,IAAI,GAAG,IAAI,SAAS,IAAI,GAAG,IAAI,IAAI,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,sGAAsG,CAAC,CAAC;gBACtH,OAAO;aACV;YAED,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,YAAY,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,QAAQ,CAAC,gCAAgC,GAAG,GAAG,GAAG,4DAA4D,CAAC,CAAC;gBACrH,OAAO;aACV;YAED,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBACtD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;gBACnC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAC1C,IAAI,OAAO,CAAC,iBAAiB,EAAE;oBAC3B,IAAI,CAAC,0BAA0B,CAAC,YAAY,CAAC,CAAC;iBACjD;gBAED,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,OAAO;aACV;YAED,IAAI,YAAY,GAAG,UAAU,IAAI;gBAC7B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9B,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACpB,OAAO;iBACV;gBAED,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;gBACtD,IAAI,CAAC,qCAAqC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;gBAE9E,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;gBACnC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAC1C,IAAI,OAAO,CAAC,iBAAiB,EAAE;oBAC3B,IAAI,CAAC,0BAA0B,CAAC,YAAY,CAAC,CAAC;iBACjD;gBAED,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC;YAEF,gDAAgD;YAChD,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAEjE,sBAAsB;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE5E,6CAA6C;gBAC7C,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;oBACpC,cAAc;oBACd,UAAU,CAAC,IAAI,CAAC,UAAU,IAAI;wBAC1B,YAAY,CAAC,IAAI,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC,IAAI,CAAC;wBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;wBAChE,OAAO,CAAC,KAAK,EAAE,CAAC;oBACpB,CAAC,CAAC,CAAC;iBACN;qBAAM,EAAE,wCAAwC;oBAC7C,YAAY,CAAC,UAAU,CAAC,CAAC;iBAC5B;aAEJ;iBAAM,EAAE,0BAA0B;gBAE/B,oCAAoC;gBACpC,IAAI,CAAC,oBAAoB,CACrB,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAChD,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EACvB,UAAU,IAAI;oBACV,YAAY,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,EACD;oBACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;oBAChE,OAAO,CAAC,KAAK,EAAE,CAAC;gBACpB,CAAC,CAAC,CAAC;aAEV;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,GAAG;YACjC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACnD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,EAAE;gBAChD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;aAChD;QACL,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,IAAI;YACrC,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEtD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,EAAE;gBAChD,IAAI,KAAK,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACtE,IAAI,OAAO,GAAG,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,GAAG,aAAa,CAAC;qBAChF,QAAQ,CAAC,kDAAkD,CAAC;qBAC5D,MAAM,CAAC,KAAK,CAAC;qBACb,KAAK,CAAC,UAAU,CAAC;oBACd,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,WAAW,CAAC;qBACT,QAAQ,CAAC,uBAAuB,CAAC;qBACjC,MAAM,CAAC,OAAO,CAAC;qBACf,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvB;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,aAAa,EAAE,UAAU,SAAS;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEtC,kBAAkB;YAClB,IAAI,SAAS,GAAG,CAAC,CAAC,iFAAiF,CAAC,CAAC;YAErG,qBAAqB;YACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAE7C,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC3C,IAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;gBAEnC,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE;oBACnB,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;wBACpB,6BAA6B;wBAC7B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;wBACpE,SAAS;qBACZ;yBAAM;wBACH,kEAAkE;wBAClE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,CAAC;qBAC3E;iBACJ;gBAED,+CAA+C;gBAC/C,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,EAAE;oBACrB,SAAS;iBACZ;gBAED,cAAc;gBACd,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,EAAE;oBACxB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;oBACpE,SAAS;iBACZ;gBAED,6DAA6D;gBAC7D,IAAI,eAAe,GAAG,CAAC,CAAC,kDAAkD,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAEhG,0BAA0B;gBAC1B,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC,CAAC;gBAExE,8CAA8C;gBAC9C,IAAI,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBACnE,eAAe,CAAC,MAAM,CAClB,IAAI,CAAC,0BAA0B,CAAC;oBAC5B,SAAS,EAAE,SAAS;oBACpB,KAAK,EAAE,YAAY;oBACnB,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,MAAM;oBAChB,IAAI,EAAE,SAAS;iBAClB,CAAC,CAAC,CAAC;aACX;YAED,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAEtD,SAAS,CAAC,MAAM,CAAC;gBACb,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;YAEH,aAAa;YACb,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC;QAC9G,CAAC;QAED;kFAC0E;QAC1E,aAAa,EAAE,UAAU,SAAS,EAAE,WAAW;YAC3C,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,YAAY,GAAG,UAAU,IAAI;gBAC7B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9B,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAC9E,OAAO;iBACV;gBAED,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAE9C,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBACpD,IAAI,CAAC,qCAAqC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAExC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE7E,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAE/C,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;oBAChC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACtD;gBAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC,CAAC;YAGF,gDAAgD;YAChD,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAEjD,sBAAsB;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;gBAE1E,6CAA6C;gBAC7C,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;oBACpC,cAAc;oBACd,UAAU,CAAC,IAAI,CAAC,UAAU,IAAI;wBAC1B,YAAY,CAAC,IAAI,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC,IAAI,CAAC;wBACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;wBAChE,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAClF,CAAC,CAAC,CAAC;iBACN;qBAAM,EAAE,wCAAwC;oBAC7C,YAAY,CAAC,UAAU,CAAC,CAAC;iBAC5B;aAEJ;iBAAM,EAAE,0BAA0B;gBAE/B,oCAAoC;gBACpC,IAAI,CAAC,oBAAoB,CACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EACjC,SAAS,CAAC,SAAS,EAAE,EACrB,UAAS,IAAI;oBACT,YAAY,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,EACD;oBACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;oBAChE,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAClF,CAAC,CAAC,CAAC;aACV;QAEL,CAAC;QAED;;kFAE0E;QAC1E,qCAAqC,EAAE,UAAU,MAAM,EAAE,cAAc;YACnE,IAAI,CAAC,cAAc,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;gBAC3C,OAAO;aACV;YAED,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC;QAED;kFAC0E;QAC1E,uBAAuB,EAAE,UAAU,MAAM,EAAE,SAAS;YAChD,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,EAAE;gBACtB,OAAO,IAAI,CAAC,iCAAiC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;aACpE;iBAAM;gBACH,OAAO,UAAU,CAAC;aACrB;QACL,CAAC;QAED;kFAC0E;QAC1E,eAAe,EAAE,UAAU,SAAS;YAChC,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,WAAW,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;oBAAE,WAAW,GAAG,GAAG,CAAC;gBACjE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;aACxE;YAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;QAED;kFAC0E;QAC1E,0BAA0B,EAAE,UAAU,SAAS;YAC3C,IAAI,SAAS,GAAG,oBAAoB,CAAC;YACrC,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;gBAC5B,SAAS,GAAG,SAAS,GAAG,qBAAqB,CAAC;aACjD;YAED,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,EAAE;gBACvD,SAAS,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACP,CAAC;QAED;;kFAE0E;QAE1E,aAAa,EAAE,UAAU,IAAI;YACzB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAClF,CAAC;QAED,gBAAgB,EAAE,UAAU,IAAI,EAAE,IAAI;YAClC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3G,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;QACvC,sBAAsB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB;QACrE,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;KAC9E,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAC1E,OAAO,EAAE;YAEL,SAAS;YACT,kBAAkB,EAAE,IAAI;YAExB,QAAQ;YACR,aAAa,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;YAEzC,cAAc;YACd,QAAQ,EAAE;gBACN,kBAAkB,EAAE,4CAA4C;gBAChE,UAAU,EAAE,QAAQ;gBACpB,QAAQ,EAAE,UAAU;gBACpB,oBAAoB,EAAE,oCAAoC;gBAC1D,eAAe,EAAE,4CAA4C;aAChE;SACJ;QAED;;kFAE0E;QAE1E,iBAAiB,EAAE,IAAI;QACvB,aAAa,EAAE,IAAI;QAEnB;;kFAE0E;QAE1E;kFAC0E;QAC1E,OAAO,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE;gBACpC,OAAO;aACV;YAED,mDAAmD;YACnD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,2JAA2J,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEvN,gBAAgB;YAChB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC1B,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBACnC,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU;gBACvC,OAAO,EACC,CAAC;wBACG,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM;wBAClC,KAAK,EAAE;4BACH,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBAC3C,CAAC;qBACJ,EAAE;wBACC,EAAE,EAAE,oBAAoB;wBACxB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU;wBACtC,KAAK,EAAE;4BAEH,wDAAwD;4BACxD,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,oBAAoB,CAAC,EAAE;gCACnD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gCACvC,OAAO;6BACV;4BAED,IAAI,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;4BAChF,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;4BACrF,IAAI,CAAC,uBAAuB,CACxB,IAAI,CAAC,aAAa,EAClB;gCACI,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gCAC3D,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;4BAC3C,CAAC,EACD,UAAU,OAAO;gCACb,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gCACzB,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;4BAC1F,CAAC,CACJ,CAAC;wBACN,CAAC;qBACJ,CAAC;gBACV,KAAK,EAAE;oBACH,IAAI,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;oBAChF,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAC1F,CAAC;aACJ,CAAC,CAAC;QACP,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,UAAU,EAAE,UAAU,KAAK;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,gDAAgD,CAAC,CAAC;gBAChE,OAAO;aACV;YAED,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;gBAChB,IAAI,CAAC,QAAQ,CAAC,2CAA2C,CAAC,CAAC;gBAC3D,OAAO;aACV;YAED,uBAAuB;YACvB,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBACnB,IAAI,CAAC,uBAAuB,CACxB,KAAK,EACL;oBACI,IAAI,CAAC,iCAAiC,CAAC,KAAK,CAAC,CAAC;gBAClD,CAAC,EACD,UAAU,OAAO;oBACb,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC7B,CAAC,CACJ,CAAC;gBAEF,OAAO;aACV;YAED,wBAAwB;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAE3F,4DAA4D;YAC5D,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,IAAI,WAAW,GAAG;gBACd,OAAO,CAAC,cAAc,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5C,CAAC,CAAC;YAEF,8DAA8D;YAC9D,IAAI,SAAS,GAAG;gBACZ,IAAI,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,6BAA6B,CAAC,CAAC;gBAC/D,IAAI,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE;oBACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,oBAAoB,EAAE,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;iBACrI;gBAED,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,IAAI,CAAC,iCAAiC,CAAC,YAAY,CAAC,CAAC;iBACxD;gBAED,IAAI,CAAC,SAAS,EAAE,CAAC;YACrB,CAAC,CAAC;YAEF,iBAAiB;YACjB,IAAI,YAAY,GAAG,CAAC,CAAC;YACrB,KAAK,CAAC,IAAI,CAAC;gBACP,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACnB,IAAI,CAAC,uBAAuB,CACxB,IAAI,EACJ;oBACI,EAAE,YAAY,CAAC;oBAAC,EAAE,cAAc,CAAC;oBACjC,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;oBAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;oBACtG,IAAI,WAAW,EAAE,EAAE;wBACf,SAAS,EAAE,CAAC;qBACf;gBACL,CAAC,EACD;oBACI,EAAE,cAAc,CAAC;oBACjB,IAAI,WAAW,EAAE,EAAE;wBACf,SAAS,EAAE,CAAC;qBACf;gBACL,CAAC,CACJ,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,YAAY,EAAE,UAAU,OAAO;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;gBACf,UAAU,EAAE,KAAK;gBACjB,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB;gBACjD,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY;gBACtC,OAAO,EAAE,cAAc,CAAC;gBACxB,KAAK,EAAE,cAAc,CAAC;aACzB,EAAE,OAAO,CAAC,CAAC;YAEZ,IAAI,OAAO,CAAC,GAAG,IAAI,SAAS,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,uEAAuE,CAAC,CAAC;gBACvF,OAAO;aACV;YAED,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACjD,IAAI,YAAY,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,QAAQ,CAAC,gCAAgC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBAC9D,OAAO;aACV;YAED,IAAI,OAAO,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,iCAAiC,CAAC,YAAY,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;gBAChF,OAAO,CAAC,OAAO,EAAE,CAAC;gBAClB,OAAO;aACV;YAED,IAAI,CAAC,uBAAuB,CACpB,YAAY,EACZ,UAAU,IAAI;gBACV,IAAI,CAAC,iCAAiC,CAAC,YAAY,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;gBAChF,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,EACD,UAAU,OAAO;gBACb,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACzB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC,EACD,OAAO,CAAC,GAAG,CACd,CAAC;QACV,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,GAAG;YACjC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACnD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,EAAE;gBAChD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;aAChD;QACL,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,IAAI;YACrC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEtD,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,EAAE;gBAChD,IAAI,KAAK,GAAG,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACtE,IAAI,OAAO,GAAG,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,GAAG,aAAa,CAAC;qBAChF,QAAQ,CAAC,oDAAoD,CAAC;qBAC9D,MAAM,CAAC,KAAK,CAAC;qBACb,KAAK,CAAC,UAAU,CAAC;oBACd,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;oBACpB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,WAAW,CAAC;qBACT,QAAQ,CAAC,uBAAuB,CAAC;qBACjC,MAAM,CAAC,OAAO,CAAC;qBACf,QAAQ,CAAC,IAAI,CAAC,CAAC;aACvB;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,0BAA0B,EAAE,UAAU,IAAI;YACtC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,aAAa,CAAC;YAClB,IAAI,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAC;YAEpE,wDAAwD;YACxD,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;gBAC/C,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;gBAC3J,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAEtC,iCAAiC;gBACjC,IAAI,IAAI,CAAC,MAAM,EAAE;oBAEb,uCAAuC;oBACvC,IAAI,IAAI,CAAC,aAAa,EAAE;wBACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,qFAAqF;qBAC7H;oBAED,OAAO;iBACV;gBAED,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACjD,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;aACtC;iBAAM;gBACH,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;aACnD;YAED,IAAI,aAAa,IAAI,KAAK,EAAE;gBACxB,cAAc;gBACd,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACzF,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;aAChC;iBAAM;gBACH,iBAAiB;gBACjB,IAAI,CAAC,uBAAuB,CACxB,IAAI,EACJ;oBACI,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,CAAC;gBACjD,CAAC,EACD,UAAU,OAAO;oBACb,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC7B,CAAC,CACJ,CAAC;aACL;QACL,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE,UAAU,IAAI;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC;QAED;;kFAE0E;QAC1E,uBAAuB,EAAE,UAAU,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG;YACxD,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,cAAc,GAAG,UAAS,IAAI;gBAC9B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;oBAC7B,IAAI,KAAK,EAAE;wBACP,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACvB;oBAED,OAAO;iBACV;gBAED,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;gBAEvG,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB;YACL,CAAC,CAAC;YAEF,gDAAgD;YAChD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;gBAC/B,OAAO;aACV;YAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YAE5B,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAE1E,gDAAgD;YAChD,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBAEzD,sBAAsB;gBACtB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAE7D,6CAA6C;gBAC7C,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE;oBACpC,cAAc;oBACd,UAAU,CAAC,IAAI,CAAC,UAAU,IAAI;wBAC1B,cAAc,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,IAAI,CAAC;wBACJ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;wBAC7B,IAAI,KAAK,EAAE;4BACP,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;yBACzD;oBACL,CAAC,CAAC,CAAC;iBACN;qBAAM,EAAE,wCAAwC;oBAC7C,cAAc,CAAC,UAAU,CAAC,CAAC;iBAC9B;aAEJ;iBAAM,EAAE,0BAA0B;gBAC/B,iDAAiD;gBACjD,IAAI,CAAC,KAAK,CAAC;oBACP,GAAG,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;oBAC/C,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,UAAU,IAAI;wBACnB,cAAc,CAAC,IAAI,CAAC,CAAC;oBACzB,CAAC;oBACD,KAAK,EAAE;wBACH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;wBAC7B,IAAI,KAAK,EAAE;4BACP,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;yBACzD;oBACL,CAAC;iBACJ,CAAC,CAAC;aAEN;QACL,CAAC;QAED;kFAC0E;QAC1E,iCAAiC,EAAE,UAAU,KAAK,EAAE,iBAAiB;YACjE,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,iBAAiB,IAAI,SAAS,EAAE;gBAChC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;aACtD;YAED,IAAI,iBAAiB,EAAE;gBACnB,IAAI,SAAS,GAAG,qBAAqB,CAAC;gBACtC,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;oBAC5B,SAAS,GAAG,SAAS,GAAG,oBAAoB,CAAC;iBAChD;gBAED,yEAAyE;gBACzE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;oBAClE,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;aACN;iBAAM;gBACH,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;aAC/C;QACL,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;QACvC,sBAAsB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB;QACrE,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;QAC3E,iBAAiB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB;QAC3D,gBAAgB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB;QACzD,cAAc,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc;KACxD,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAC1E,OAAO,EAAE;YAEL,SAAS;YACT,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,KAAK;YAClB,mBAAmB,EAAE,KAAK;YAC1B,gBAAgB,EAAE,IAAI;YAEtB,QAAQ;YACR,gBAAgB,EAAE,UAAU,KAAK,EAAE,IAAI,IAAI,CAAC;SAC/C;QAED;;kFAE0E;QAE1E,4BAA4B,EAAE,IAAI;QAClC,mBAAmB,EAAE,IAAI;QACzB,aAAa,EAAE,KAAK;QAEpB;;kFAE0E;QAE1E;kFAC0E;QAC1E,OAAO,EAAE;YACL,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBAC5D,EAAE,IAAI,CAAC,sBAAsB,CAAC;gBAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;YAED,kBAAkB;YAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACxC,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,+CAA+C;YAC/C,CAAC,CAAC,QAAQ,CAAC;iBACN,OAAO,CAAC,UAAU,KAAK;gBACpB,QAAQ,KAAK,CAAC,KAAK,EAAE;oBACjB,KAAK,EAAE;wBACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,MAAM;iBACb;YACL,CAAC,CAAC;iBACD,KAAK,CAAC,UAAU,KAAK;gBAClB,QAAQ,KAAK,CAAC,KAAK,EAAE;oBACjB,KAAK,EAAE;wBACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;wBAC3B,MAAM;iBACb;YACL,CAAC,CAAC,CAAC;QACX,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,YAAY,EAAE;YACV,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACnC,CAAC;QAED;kFAC0E;QAC1E,UAAU,EAAE,UAAU,KAAK;YACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,8CAA8C;QAC9E,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,GAAG;YACjC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBAC5D,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;oBAC1B,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;iBAC7C;qBAAM;oBACH,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;iBAChD;aACJ;YAED,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACvD,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,IAAI;YACrC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;aACjC;YAED,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC1D,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE;YACf,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;YAED,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClD,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE;YACd,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAChC;YAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC;QAED;kFAC0E;QAC1E,cAAc,EAAE,UAAU,KAAK,EAAE,MAAM;YACnC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBACxG,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;YAED,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC/C,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,sBAAsB,EAAE;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,aAAa,GAAG,CAAC,CAAC,oBAAoB,CAAC;iBACtC,QAAQ,CAAC,6DAA6D,CAAC,CAAC;YAC7E,IAAI,CAAC,sBAAsB,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;YAE/D,IAAI,gBAAgB,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC9B,QAAQ,CAAC,gCAAgC,CAAC;iBAC1C,QAAQ,CAAC,aAAa,CAAC,CAAC;YAE7B,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,2BAA2B,CAAC;iBACpD,QAAQ,CAAC,gBAAgB,CAAC;iBAC1B,KAAK,CAAC;gBACH,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC9B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;oBAChD,OAAO;iBACV;gBAED,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBAC3D,IAAI,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;oBACzC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;iBAC7B;qBAAM;oBACH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;iBAC/B;gBAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEP,OAAO,aAAa,CAAC;QACzB,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACzB,OAAO;aACV;YAED,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;YACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC;gBACzB,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9F,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,qBAAqB,EAAE;YACnB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACzB,OAAO;aACV;YAED,IAAI,gBAAgB,GAAG,CAAC,CAAC;YACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBAC9C,IAAI,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7E,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtC,EAAE,gBAAgB,CAAC;iBACtB;aACJ;YAED,IAAI,IAAI,CAAC,4BAA4B,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,4BAA4B,CAAC,MAAM,IAAI,gBAAgB,EAAE;gBAC9G,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;YAED,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;YACvC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE;YACd,OAAO,IAAI,CAAC,WAAW;iBAClB,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC;QAED;kFAC0E;QAC1E,kBAAkB,EAAE,UAAU,IAAI;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,8BAA8B;YAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;gBAC/B,IAAI,CAAC,KAAK,CAAC;oBACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;aACN;YAED,mCAAmC;YACnC,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBAClC,IAAI,KAAK,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;gBAC/D,IAAI,eAAe,GAAG,CAAC,CAAC,2BAA2B,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;oBAChC,eAAe,CAAC,KAAK,CAAC;wBAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;oBACnC,CAAC,CAAC,CAAC;iBACN;gBAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACtB;QACL,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE,UAAU,IAAI;YAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;gBACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aAC5B;iBAAM;gBACH,YAAY;gBACZ,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACxC,2DAA2D;oBAC3D,IAAI,WAAW,GAAG,IAAI,CAAC,qCAAqC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;oBAC3E,IAAI,WAAW,GAAG,CAAC,IAAI,WAAW,GAAG,QAAQ,EAAE;wBAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;qBAClF;yBAAM;wBACH,2DAA2D;wBAC3D,IAAI,UAAU,GAAG,IAAI,CAAC,oCAAoC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;wBACzE,IAAI,UAAU,GAAG,QAAQ,EAAE;4BACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;yBACjF;6BAAM;4BACH,sBAAsB;4BACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;yBAC1B;qBACJ;iBACJ;qBAAM;oBACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBAC1B;aACJ;YAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC;QAED;kFAC0E;QAC1E,qCAAqC,EAAE,UAAU,QAAQ;YACrD,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;gBACpC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;oBACrD,OAAO,CAAC,CAAC;iBACZ;aACJ;YAED,OAAO,CAAC,CAAC,CAAC;QACd,CAAC;QAED;kFAC0E;QAC1E,oCAAoC,EAAE,UAAU,QAAQ;YACpD,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACzD,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;oBACrD,OAAO,CAAC,CAAC;iBACZ;aACJ;YAED,OAAO,CAAC,CAAC,CAAC;QACd,CAAC;QAED;kFAC0E;QAC1E,WAAW,EAAE,UAAU,KAAK;YACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;aAC/C;YAED,KAAK,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YACtC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;YAEzD,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBAClC,KAAK,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAC1E;YAED,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;QAED;kFAC0E;QAC1E,aAAa,EAAE,UAAU,KAAK;YAC1B,KAAK,CAAC,WAAW,CAAC,wCAAwC,CAAC,CAAC;YAC5D,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBAClC,KAAK,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;aAC3E;YAED,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC;QAED;kFAC0E;QAC1E,8BAA8B,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBAChE,OAAO;aACV;YAED,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAC5C,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC;YAEtD,IAAI,gBAAgB,IAAI,CAAC,EAAE;gBACvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;gBACtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;aACnD;iBAAM,IAAI,gBAAgB,IAAI,aAAa,EAAE;gBAC1C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;gBACtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAClD;iBAAM;gBACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aACxD;QACL,CAAC;QAED;;kFAE0E;QAE1E,mBAAmB,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAChD,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;QACjC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;QACvC,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU;QAC7C,oBAAoB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB;QACjE,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;QAC3E,cAAc,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc;QACrD,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;QACvC,oBAAoB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB;QACjE,gBAAgB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB;KAC5D,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAC1E,OAAO,EAAE;YACL,MAAM,EAAE,KAAK;YACb,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YACtC,kBAAkB,EAAE,IAAI;YACxB,YAAY,EAAE,UAAU;YAExB,QAAQ,EAAE;gBACN,UAAU,EAAE,wBAAwB;gBACpC,mBAAmB,EAAE,WAAW;gBAChC,aAAa,EAAE,YAAY;aAC9B;SACJ;QAED;;kFAE0E;QAE1E,aAAa,EAAE,IAAI;QACnB,gBAAgB,EAAE,IAAI;QACtB,oBAAoB,EAAE,IAAI;QAC1B,cAAc,EAAE,IAAI;QACpB,cAAc,EAAE,IAAI;QACpB,eAAe,EAAE,IAAI;QACrB,iBAAiB,EAAE,CAAC;QACpB,cAAc,EAAE,CAAC;QAEjB;;kFAE0E;QAE1E;kFAC0E;QAC1E,OAAO,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,wBAAwB,EAAE,CAAC;aACnC;QACL,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBACnC,OAAO;aACV;YAED,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAC5C,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;aAC9F;QACL,CAAC;QAED;kFAC0E;QAC1E,kBAAkB,EAAE;YAChB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC;iBAC5B,QAAQ,CAAC,qBAAqB,CAAC;iBAC/B,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE/B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;YAEpE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5E,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,eAAe,CAAC;iBACrC,QAAQ,CAAC,kBAAkB,CAAC;iBAC5B,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAE5D,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,eAAe,CAAC;iBACnC,QAAQ,CAAC,kBAAkB,CAAC;iBAC5B,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACjE,CAAC;QAED;kFAC0E;QAC1E,wBAAwB,EAAE;YACtB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE;gBAClC,OAAO;aACV;YAED,6DAA6D;YAC7D,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC3E,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjE;YAED,8CAA8C;YAC9C,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,eAAe,CAAC;iBACzC,QAAQ,CAAC,yBAAyB,CAAC;iBACnC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAE5D,iBAAiB;YACjB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,GAAG,WAAW,CAAC,CAAC;YAErG,2BAA2B;YAC3B,IAAI,uBAAuB,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAEzF,gCAAgC;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpD,uBAAuB,CAAC,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;aAClI;YAED,0BAA0B;YAC1B,uBAAuB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEnD,qCAAqC;YACrC,uBAAuB,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAQ,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE;YAClB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,MAAM,EAAE;gBACnE,OAAO;aACV;YAED,uCAAuC;YACvC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,eAAe,CAAC;iBACnC,QAAQ,CAAC,kBAAkB,CAAC;iBAC5B,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAE5D,iBAAiB;YACjB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,GAAG,WAAW,CAAC,CAAC;YAEzF,iBAAiB;YACjB,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,UAAU,EAAE;gBAEzC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,mBAAmB,CAAC;qBACxC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;qBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;qBACpB,MAAM,CAAC;oBACJ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAS,CAAC,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;gBACP,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC;aAE/D;iBAAM,EAAE,SAAS;gBAEd,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,2CAA2C,GAAG,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;qBAC/F,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC;qBAC7B,QAAQ,CAAC,UAAS,KAAK;oBACpB,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,OAAO;wBAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;qBAC1D;yBAAM,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI;wBAChC,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC9D;yBAAM,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI;wBAChC,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC9D;yBAAM;wBACH,mBAAmB;wBACnB,IAAI,OAAO,GAAG,CACV,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,GAAG,EAAE,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC;+BACvF,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC;+BACpB,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC,CAC9B,CAAC;wBAEF,IAAI,CAAC,OAAO,EAAE;4BACV,KAAK,CAAC,cAAc,EAAE,CAAC;yBAC1B;qBACJ;gBACL,CAAC,CAAC,CAAC;aAEV;QACL,CAAC;QAED;kFAC0E;QAC1E,qBAAqB,EAAE;YACnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,MAAM,EAAE;gBACnE,OAAO;aACV;YAED,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;aAC9B;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;aAC9B;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,UAAU,EAAE;gBACzC,IAAI,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC1D,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAClD,IAAI,YAAY,IAAI,gBAAgB,EAAE;oBAClC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;oBAE7B,6CAA6C;oBAC7C,IAAI,QAAQ,GAAG,CAAC,CAAC;oBACjB,IAAI,gBAAgB,GAAG,KAAK,EAAE;wBAC1B,QAAQ,GAAG,GAAG,CAAC;qBAClB;yBAAM,IAAI,gBAAgB,GAAG,IAAI,EAAE;wBAChC,QAAQ,GAAG,EAAE,CAAC;qBACjB;yBAAM,IAAI,gBAAgB,GAAG,IAAI,EAAE;wBAChC,QAAQ,GAAG,CAAC,CAAC;qBAChB;yBAAM,IAAI,gBAAgB,GAAG,IAAI,EAAE;wBAChC,QAAQ,GAAG,CAAC,CAAC;qBAChB;oBAED,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,gBAAgB,EAAE,CAAC,IAAI,QAAQ,EAAE;wBACzD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,iBAAiB,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;qBAC/E;oBAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;iBAC5D;aACJ;YAED,mCAAmC;YACnC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAClD,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,IAAI,EAAE;YACF,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YAExB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrC,CAAC;QAED;kFAC0E;QAC1E,UAAU,EAAE,UAAS,GAAG,EAAE,KAAK;YAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEvC,IAAI,GAAG,IAAI,UAAU,EAAE;gBACnB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;aACzC;QACL,CAAC;QAED;kFAC0E;QAC1E,eAAe,EAAE,UAAS,QAAQ;YAC9B,IAAI,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACnC,OAAO;aACV;YAED,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAEjC,wBAAwB;YACxB,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3C,IAAI,IAAI,CAAC,cAAc,GAAG,SAAS,EAAE;gBACjC,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;aACnC;YACD,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,EAAE;gBAC1B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aAC3B;YAED,kEAAkE;YAClE,IAAI,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;YACzF,IAAI,uBAAuB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpC,IAAI,QAAQ,CAAC,uBAAuB,CAAC,GAAG,EAAE,CAAC,IAAI,QAAQ,EAAE;oBACrD,IAAI,cAAc,GAAG,uBAAuB,CAAC,IAAI,CAAC,eAAe,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;oBACpF,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3B,uBAAuB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;qBACzC;iBACJ;aACJ;YAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBACnC,OAAO;aACV;YAED,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxD,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC/D,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACjE,OAAO,OAAO,CAAC;QACnB,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE;YACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAErE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrB,QAAQ,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAC1E,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;aAC/C;YAED,OAAO,QAAQ,CAAC;QACpB,CAAC;QAED;;;kFAG0E;QAC1E,cAAc,EAAE,UAAU,SAAS,EAAE,KAAK,EAAE,QAAQ;YAChD,IAAI,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,OAAO;aACV;YAED,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC/C,CAAC;QAED;kFAC0E;QAC1E,OAAO,EAAE,UAAU,IAAI,EAAE,OAAO;YAC5B,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACpD,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,OAAO;aACV;YAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACxC,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,KAAK,EAAE,MAAM;YACzC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEjD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrB,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;oBACzD,EAAE,IAAI,CAAC,cAAc,CAAC;iBACzB;gBAED,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;QACL,CAAC;QAED;kFAC0E;QAC1E,gBAAgB,EAAE,UAAU,IAAI;YAC5B,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAC/C,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAChC;YAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,mBAAmB,EAAE,UAAU,GAAG,EAAE,UAAU;YAC1C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACtB,OAAO,GAAG,CAAC;aACd;YAED,IAAI,YAAY,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC5D,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAEvC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,eAAe,GAAG,YAAY,GAAG,cAAc,GAAG,UAAU,CAAC,CAAC;QACrH,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE;YACf,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,EAAE;gBAC5B,OAAO;aACV;YAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,EAAE;gBAC7B,OAAO;aACV;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3C,IAAI,CAAC,kCAAkC,EAAE,CAAC;YAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,EAAE;gBACnC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC;aACxE;YACD,IAAI,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,CAAC,mCAAmC,EAAE,CAAC;QAC/C,CAAC;QAED;kFAC0E;QAC1E,kCAAkC,EAAE;YAChC,IAAI,MAAM,GAAG,CAAC,CAAC,eAAe,CAAC;iBAC1B,QAAQ,CAAC,0BAA0B,CAAC;iBACpC,IAAI,CAAC,QAAQ,CAAC;iBACd,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;iBACrB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAErC,IAAI,SAAS,GAAG,CAAC,CAAC,eAAe,CAAC;iBAC7B,QAAQ,CAAC,6BAA6B,CAAC;iBACvC,IAAI,CAAC,KAAK,CAAC;iBACX,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;iBAC3C,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAErC,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,4BAA4B,EAAE,gBAAgB,CAAC,CAAC;YACpF,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,4BAA4B,EAAE,gBAAgB,CAAC,CAAC;YAEvF,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,EAAE;gBAC1B,MAAM,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;gBAC/C,SAAS,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;gBAClD,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;gBACzD,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,mBAAmB,CAAC,CAAC;aAC/D;QACL,CAAC;QAED;kFAC0E;QAC1E,6BAA6B,EAAE,UAAU,SAAS;YAC9C,IAAI,KAAK,GAAG,CAAC,CAAC,eAAe,CAAC;iBACzB,QAAQ,CAAC,yBAAyB,CAAC;iBACnC,IAAI,CAAC,KAAK,CAAC;iBACX,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;iBAC3C,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrC,IAAI,KAAK,GAAG,CAAC,CAAC,eAAe,CAAC;iBACzB,QAAQ,CAAC,yBAAyB,CAAC;iBACnC,IAAI,CAAC,QAAQ,CAAC;iBACd,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC;iBAC7B,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAErC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,4BAA4B,EAAE,gBAAgB,CAAC,CAAC;YACnF,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,4BAA4B,EAAE,gBAAgB,CAAC,CAAC;YAEnF,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,EAAE;gBAClC,KAAK,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;gBAC9C,KAAK,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;gBAC9C,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;gBACxD,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;aAC3D;QACL,CAAC;QAED;kFAC0E;QAC1E,wBAAwB,EAAE,UAAU,WAAW;YAC3C,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,6CAA6C;gBAC7C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,EAAE;oBACvC,CAAC,CAAC,eAAe,CAAC;yBACb,QAAQ,CAAC,0BAA0B,CAAC;yBACpC,IAAI,CAAC,KAAK,CAAC;yBACX,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACxC;gBAED,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,cAAc,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;aACnC;QACL,CAAC;QAED;kFAC0E;QAC1E,uBAAuB,EAAE,UAAU,UAAU;YACzC,IAAI,WAAW,GAAG,CAAC,CAAC,eAAe,CAAC;iBAC/B,QAAQ,CAAC,oBAAoB,CAAC;iBAC9B,IAAI,CAAC,UAAU,CAAC;iBAChB,IAAI,CAAC,YAAY,EAAE,UAAU,CAAC;iBAC9B,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAErC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,4BAA4B,EAAE,gBAAgB,CAAC,CAAC;YAEzF,IAAI,IAAI,CAAC,cAAc,IAAI,UAAU,EAAE;gBACnC,WAAW,CAAC,QAAQ,CAAC,uDAAuD,CAAC,CAAC;gBAC9E,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;aAC/D;QACL,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,EAAE;gBACrD,EAAE,SAAS,CAAC;aACf;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;QAED;kFAC0E;QAC1E,qBAAqB,EAAE,UAAU,SAAS;YACtC,IAAI,SAAS,IAAI,CAAC,EAAE;gBAChB,gBAAgB;gBAChB,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,EAAE,CAAC,EAAE;oBACjC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACvB;gBAED,OAAO,WAAW,CAAC;aACtB;iBAAM;gBACH,uEAAuE;gBACvE,IAAI,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;gBACxD,IAAI,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;gBACrF,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;gBAEjF,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;gBACrE,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC1E,IAAI,CAAC,6BAA6B,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;gBAEjE,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzD,OAAO,gBAAgB,CAAC;aAC3B;QACL,CAAC;QAED;kFAC0E;QAC1E,iBAAiB,EAAE;YACf,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,EAAE;gBAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC5B,OAAO;aACV;YAED,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;YACpE,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YACxD,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;YAEzE,IAAI,KAAK,IAAI,OAAO,EAAE;gBAClB,IAAI,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACrH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAC/C;QACL,CAAC;QAED;kFAC0E;QAC1E,mCAAmC,EAAE;YACjC,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,gBAAgB;iBAChB,IAAI,CAAC,8HAA8H,CAAC;iBACpI,GAAG,CAAC,8BAA8B,CAAC;iBACnC,KAAK,CAAC,UAAU,CAAC;gBACd,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACX,CAAC;QAED;kFAC0E;QAC1E,WAAW,EAAE,UAAU,MAAM;YACzB,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;YACzE,IAAI,MAAM,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,OAAO;aACV;YAED,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,iBAAiB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB;QAC3D,sBAAsB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB;QACrE,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;QAC3E,oBAAoB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB;QACjE,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;KAC9E,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAC1E,OAAO,EAAE;YACL,OAAO,EAAE,KAAK;YACd,YAAY,EAAE,KAAK;YACnB,cAAc,EAAE,EAAE;SACrB;QAED;;kFAE0E;QAE1E,YAAY,EAAE,IAAI;QAElB;;kFAE0E;QAE1E;kFAC0E;QAC1E,iBAAiB,EAAE;YACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAE9C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACtB,IAAI,CAAC,yBAAyB,EAAE,CAAC;aACpC;QACL,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,SAAS,EAAE,KAAK;YAC9C,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACnD,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;QAC7C,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,SAAS,EAAE,KAAK;YACjD,IAAI,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACxE,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE;gBACvC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;aACpD;YAED,OAAO,WAAW,CAAC;QACvB,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC/D,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YAC7C,OAAO,OAAO,CAAC;QACnB,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,yBAAyB,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,UAAU,UAAU,EAAE,UAAU;gBAC3E,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,SAAS,EAAE,UAAU;oBACvD,IAAI,UAAU,CAAC,OAAO,EAAE;wBACpB,IAAI,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;wBAC9C,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE;4BAChB,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;gCAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oCACnB,SAAS,EAAE,SAAS;oCACpB,SAAS,EAAE,MAAM;iCACpB,CAAC,CAAC;6BACN;iCAAM;gCACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oCACnB,SAAS,EAAE,SAAS;oCACpB,SAAS,EAAE,KAAK;iCACnB,CAAC,CAAC;6BACN;yBACJ;qBACJ;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE,UAAU,aAAa,EAAE,SAAS;YACnD,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,aAAa;iBACR,QAAQ,CAAC,+BAA+B,CAAC;iBACzC,KAAK,CAAC,UAAU,CAAC;gBACd,CAAC,CAAC,cAAc,EAAE,CAAC;gBAEnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE;oBAC1C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,wBAAwB;iBACnD;gBAED,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;YAEP,qBAAqB;YACrB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,SAAS,EAAE,SAAS;gBACpD,IAAI,SAAS,CAAC,SAAS,IAAI,SAAS,EAAE;oBAClC,IAAI,SAAS,CAAC,SAAS,IAAI,MAAM,EAAE;wBAC/B,aAAa,CAAC,QAAQ,CAAC,kCAAkC,CAAC,CAAC;qBAC9D;yBAAM;wBACH,aAAa,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;qBAC7D;iBACJ;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,kBAAkB,EAAE,UAAU,aAAa;YACvC,wDAAwD;YACxD,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC/B,aAAa,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,kEAAkE,CAAC,CAAC;aAC5G;YAED,uEAAuE;YACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;oBACnE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACpC;aACJ;YAED,qDAAqD;YACrD,IAAI,aAAa,CAAC,QAAQ,CAAC,iCAAiC,CAAC,EAAE;gBAC3D,aAAa,CAAC,WAAW,CAAC,iCAAiC,CAAC,CAAC,QAAQ,CAAC,kCAAkC,CAAC,CAAC;gBAC1G,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACnB,WAAW,EAAE,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;oBAC5C,SAAS,EAAE,MAAM;iBACpB,CAAC,CAAC;aACN;iBAAM;gBACH,aAAa,CAAC,WAAW,CAAC,kCAAkC,CAAC,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;gBAC1G,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACnB,WAAW,EAAE,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;oBAC5C,SAAS,EAAE,KAAK;iBACnB,CAAC,CAAC;aACN;YAED,yBAAyB;YACzB,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,GAAG;YAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;gBACxD,OAAO,GAAG,CAAC;aACd;YAED,IAAI,OAAO,GAAG,EAAE,CAAC;YACjB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,GAAG,EAAE,KAAK;gBAC1C,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzF,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE;YACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAErE,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBAClD,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,GAAG,EAAE,KAAK;oBAC1C,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;gBAC1D,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC1C;YAED,OAAO,QAAQ,CAAC;QACpB,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAEX;;;0EAG0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;QACvC,sBAAsB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,sBAAsB;QACrE,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;QAC3E,yBAAyB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,yBAAyB;KAC9E,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAE1E,OAAO,EAAE;YACL,OAAO,EAAE,SAAS;YAClB,eAAe,EAAE,IAAI;YACrB,gBAAgB,EAAE,IAAI;SACzB;QAED;;kFAE0E;QAE1E,oBAAoB,EAAE,IAAI;QAC1B,iBAAiB,EAAE,IAAI;QACvB,gBAAgB,EAAE,IAAI;QACtB,kBAAkB,EAAE,IAAI;QAExB;;kFAE0E;QAE1E;kFAC0E;QAE1E,OAAO,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAE9B,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBAClC,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;YAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,SAAS,EAAE,KAAK;YAC9C,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEnD,iBAAiB;YACjB,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBAC9B,KAAK,CAAC,eAAe,GAAG,CAAC,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC;aAC5D;YAED,YAAY;YACZ,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;gBACnB,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;aAChC;QACL,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,SAAS,EAAE,KAAK;YACjD,IAAI,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAExE,iDAAiD;YACjD,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,IAAI,KAAK,CAAC,eAAe,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;gBACvH,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;aAC1C;YAED,uBAAuB;YACvB,IAAI,KAAK,CAAC,UAAU,IAAI,QAAQ,EAAE;gBAC9B,WAAW,CAAC,IAAI,EAAE,CAAC;aACtB;YAED,OAAO,WAAW,CAAC;QACvB,CAAC;QAED;kFAC0E;QAC1E,yBAAyB,EAAE,UAAU,MAAM,EAAE,SAAS;YAClD,IAAI,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEpE,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,KAAK,CAAC,UAAU,IAAI,QAAQ,EAAE;gBAC9B,OAAO,CAAC,IAAI,EAAE,CAAC;aAClB;YAED,OAAO,OAAO,CAAC;QACnB,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,sBAAsB,EAAE,UAAU,UAAU,EAAE,UAAU;YACpD,IAAI,CAAC,+BAA+B,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAC7D,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;gBAClC,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC9B;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,+BAA+B,EAAE,UAAU,UAAU,EAAE,UAAU;YAC7D,4CAA4C;YAC5C,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACvD,IAAI,WAAW,GAAG,CAAC,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,GAAG,6BAA6B,CAAC,CAAC;gBACvE,OAAO;aACV;YAED,oCAAoC;YACpC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACxD,IAAI,CAAC,QAAQ,CAAC,kCAAkC,GAAG,UAAU,GAAG,yCAAyC,CAAC,CAAC;gBAC3G,OAAO;aACV;YAED,eAAe;YACf,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC5C,IAAI,KAAK,CAAC,UAAU,IAAI,UAAU,EAAE;gBAChC,OAAO,CAAC,4CAA4C;aACvD;YAED,mCAAmC;YACnC,IAAI,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,GAAG,WAAW,GAAG,CAAC,CAAC;YACvE,IAAI,KAAK,CAAC,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,EAAE;gBACxD,IAAI,CAAC,OAAO;qBACP,IAAI,CAAC,2BAA2B,GAAG,kBAAkB,GAAG,6BAA6B,GAAG,kBAAkB,GAAG,GAAG,CAAC;qBACjH,IAAI,EAAE,CAAC;aACf;iBAAM,IAAI,KAAK,CAAC,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,QAAQ,EAAE;gBAC/D,IAAI,CAAC,OAAO;qBACP,IAAI,CAAC,2BAA2B,GAAG,kBAAkB,GAAG,6BAA6B,GAAG,kBAAkB,GAAG,GAAG,CAAC;qBACjH,IAAI,EAAE;qBACN,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;aACrC;YAED,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;QAClC,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,sDAAsD;YACtD,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,SAAS,CAAC;iBACnC,QAAQ,CAAC,mCAAmC,CAAC;iBAC7C,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAEpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC;gBAC1D,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;oBAChC,OAAO;iBACV;gBAED,CAAC,CAAC,cAAc,EAAE,CAAC;gBAEnB,4CAA4C;gBAC5C,CAAC,CAAC,SAAS,CAAC;qBACP,QAAQ,CAAC,4BAA4B,CAAC;qBACtC,KAAK,CAAC;oBACH,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;oBACjB,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;gBACrC,CAAC,CAAC;qBACD,IAAI,CAAC,aAAa,EAAE,cAAc,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;qBAClD,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAE7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAE5B,yDAAyD;gBAEzD,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;gBACpD,IAAI,eAAe,GAAG,CAAC,CAAC,KAAK,GAAG,eAAe,CAAC,GAAG,CAAC;gBACpD,IAAI,gBAAgB,GAAG,CAAC,CAAC,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC;gBAEtD,IAAI,oBAAoB,GAAG,GAAG,CAAC,CAAC,WAAW;gBAC3C,IAAI,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;gBAElD,8EAA8E;gBAC9E,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,cAAc,GAAG,oBAAoB,CAAC,CAAC,EAAE;oBACzG,gBAAgB,GAAG,cAAc,GAAG,oBAAoB,CAAC;iBAC5D;gBAED,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;oBAC1B,IAAI,EAAE,gBAAgB;oBACtB,GAAG,EAAE,eAAe;oBACpB,WAAW,EAAE,oBAAoB,GAAG,IAAI;iBAC3C,CAAC,CAAC,IAAI,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE;YAClB,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,UAAU,GAAG,CAAC,CAAC,WAAW,CAAC;iBAC1B,QAAQ,CAAC,2BAA2B,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBAE5C,kBAAkB;gBAClB,IAAI,SAAS,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAEpD,+BAA+B;gBAC/B,IAAI,MAAM,GAAG,CAAC,CAAC,cAAc,GAAG,UAAU,GAAG,YAAY,CAAC;qBACrD,MAAM,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,UAAU,CAAC,GAAG,SAAS,CAAC,CAAC;qBAC7D,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAEzB,iBAAiB;gBACjB,IAAI,SAAS,GAAG,CAAC,CAAC,+BAA+B,GAAG,UAAU,GAAG,IAAI,CAAC;qBACjE,SAAS,CAAC,MAAM,CAAC;qBACjB,KAAK,CAAC;oBACH,IAAI,gBAAgB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;oBAC/B,IAAI,iBAAiB,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtD,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;oBAC1D,IAAI,YAAY,CAAC,UAAU,IAAI,OAAO,EAAE;wBACpC,OAAO;qBACV;oBAED,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBAC3G,CAAC,CAAC,CAAC;gBAEP,2BAA2B;gBAC3B,IAAI,KAAK,CAAC,UAAU,IAAI,QAAQ,EAAE;oBAC9B,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;iBACxC;gBAED,6BAA6B;gBAC7B,IAAI,KAAK,CAAC,UAAU,IAAI,OAAO,EAAE;oBAC7B,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;iBAC1C;aACJ;YAED,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE;YACpB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,SAAS,CAAC;iBAChC,QAAQ,CAAC,0BAA0B,CAAC;iBACpC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;iBAC9B,IAAI,EAAE,CAAC;QAChB,CAAC;QAED;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,aAAa;YACzC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,8CAA8C;YAC9C,CAAC,CAAC,SAAS,CAAC;iBACP,QAAQ,CAAC,8BAA8B,CAAC;iBACxC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,kCAAkC;iBAClG,SAAS,CAAC,UAAU,SAAS;gBAC1B,SAAS,CAAC,cAAc,EAAE,CAAC;gBAC3B,SAAS,CAAC,eAAe,EAAE,CAAC;gBAE5B,IAAI,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;gBAExD,oCAAoC;gBACpC,IAAI,iBAAiB,GAAG,aAAa,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;gBACvF,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;oBAC3B,OAAO;iBACV;gBAED,+CAA+C;gBAC/C,IAAI,kBAAkB,GAAG,EAAE,CAAC,CAAC,oDAAoD;gBACjF,IAAI,CAAC,kBAAkB,GAAG;oBACtB,uBAAuB,EAAE,aAAa,CAAC,UAAU,EAAE;oBACnD,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,aAAa,CAAC,UAAU,EAAE,GAAG,iBAAiB,CAAC,UAAU,EAAE,GAAG,kBAAkB;oBAC1F,WAAW,EAAE,SAAS,CAAC,KAAK;oBAC5B,UAAU,EAAE,cAAc,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACrG,UAAU,EAAE,cAAc,OAAO,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;iBACxG,CAAC;gBAEF,8CAA8C;gBAC9C,IAAI,iBAAiB,GAAG,UAAU,SAAS;oBACvC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;wBAC1B,OAAO;qBACV;oBAED,IAAI,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC;oBACpI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,UAAU,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;gBACvF,CAAC,CAAC;gBAEF,wDAAwD;gBACxD,IAAI,eAAe,GAAG,UAAU,OAAO;oBACnC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;wBAC1B,OAAO;qBACV;oBAED,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;oBACnD,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;oBAE/C,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;oBAE9B,gCAAgC;oBAChC,IAAI,YAAY,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC;oBACvE,IAAI,uBAAuB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,GAAG,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;oBACxL,IAAI,oBAAoB,GAAG,iBAAiB,CAAC,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,GAAG,uBAAuB,CAAC,CAAC;oBAExI,6BAA6B;oBAC7B,IAAI,mBAAmB,GAAG,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;oBACnH,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,uBAAuB,GAAG,mBAAmB,CAAC,CAAC;oBACtF,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,EAAE,oBAAoB,GAAG,mBAAmB,CAAC,CAAC;oBAEvF,qCAAqC;oBACrC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC,CAAC;oBACzE,iBAAiB,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC,CAAC;oBAEjF,6BAA6B;oBAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAE9B,iBAAiB;oBACjB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAE/B,0BAA0B;oBAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;wBAClC,IAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC9B;gBACL,CAAC,CAAC;gBAEF,0BAA0B;gBAC1B,IAAI,CAAC,iBAAiB;qBACjB,IAAI,EAAE;qBACN,GAAG,CAAC;oBACD,GAAG,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,mBAAmB,CAAC,GAAG,CAAC,GAAG,IAAI;oBAClE,IAAI,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,IAAI;oBACzD,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG,IAAI;iBAC9C,CAAC,CAAC;gBAEP,aAAa;gBACb,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;gBACjD,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACX,CAAC;QAED;kFAC0E;QAC1E,sBAAsB,EAAE;YAEpB,0BAA0B;YAC1B,IAAI,oBAAoB,GAAG,IAAI,CAAC,OAAO;iBAClC,IAAI,CAAC,wCAAwC,CAAC;iBAC9C,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;iBAC3B,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAExB,mBAAmB;YACnB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;YAEtE,uCAAuC;YACvC,IAAI,iBAAiB,GAAG,CAAC,CAAC;YAC1B,WAAW,CAAC,IAAI,CAAC;gBACb,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpB,IAAI,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;oBACtB,iBAAiB,IAAI,KAAK,CAAC,UAAU,EAAE,CAAC;iBAC3C;YACL,CAAC,CAAC,CAAC;YAEH,gCAAgC;YAChC,IAAI,YAAY,GAAG,EAAE,CAAC;YACtB,IAAI,uBAAuB,GAAG,KAAK,GAAG,oBAAoB,CAAC,MAAM,CAAC;YAClE,WAAW,CAAC,IAAI,CAAC;gBACb,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpB,IAAI,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;oBACtB,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACxC,IAAI,cAAc,GAAG,KAAK,CAAC,UAAU,EAAE,GAAG,uBAAuB,GAAG,iBAAiB,CAAC;oBACtF,YAAY,CAAC,SAAS,CAAC,GAAG,cAAc,CAAC;iBAC5C;YACL,CAAC,CAAC,CAAC;YAEH,0BAA0B;YAC1B,WAAW,CAAC,IAAI,CAAC;gBACb,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpB,IAAI,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;oBACtB,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACxC,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC;iBACvG;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED;;;kFAG0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,aAAa,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC,IAAI,CAAC;gBAC1D,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpB,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACxC,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACjD,IAAI,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC;gBAChE,IAAI,YAAY,GAAG,SAAS,GAAG,GAAG,GAAG,eAAe,GAAG,GAAG,GAAG,WAAW,CAAC;gBACzE,aAAa,GAAG,aAAa,GAAG,YAAY,GAAG,GAAG,CAAC;YACvD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1F,CAAC;QAED;kFAC0E;QAC1E,mBAAmB,EAAE;YACjB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YAC9D,IAAI,CAAC,oBAAoB,EAAE;gBACvB,OAAO;aACV;YAED,IAAI,cAAc,GAAG,EAAE,CAAC;YACxB,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,UAAU,GAAG,EAAE,YAAY;gBAC/D,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACvC,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAI,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACtC,cAAc,CAAC,SAAS,CAAC,GAAG;oBACxB,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC;oBAC7B,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;iBAC3B,CAAC;YACN,CAAC,CAAC,CAAC;YAEH,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;YAC3E,WAAW,CAAC,IAAI,CAAC;gBACb,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACpB,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACxC,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC3C,IAAI,cAAc,CAAC,SAAS,CAAC,EAAE;oBAC3B,IAAI,KAAK,CAAC,UAAU,IAAI,OAAO,EAAE;wBAC7B,IAAI,CAAC,+BAA+B,CAAC,SAAS,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,CAAC;qBAC/F;oBAED,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC;iBACnI;YACL,CAAC,CAAC,CAAC;QACP,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAGX;;0EAE0E;AAC1E,CAAC,UAAU,CAAC;IAER,kCAAkC;IAClC,IAAI,IAAI,GAAG;QACP,oBAAoB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB;KACpE,CAAC;IAEF,mBAAmB;IACnB,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QAEnC;;kFAE0E;QAC1E,OAAO,EAAE;YACL,oBAAoB,EAAE,KAAK;SAC9B;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,cAAc,EAAE,UAAU,IAAI,EAAE,YAAY,EAAE,MAAM;YAChD,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,8DAA8D;YAC9D,IAAI,YAAY,CAAC,aAAa,IAAI,SAAS,EAAE;gBACzC,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;aAC3D;YAED,8BAA8B;YAC9B,YAAY,CAAC,eAAe,GAAG,CAAC,YAAY,CAAC,eAAe,IAAI,KAAK,CAAC,CAAC;YAEvE,mEAAmE;YACnE,IAAI,YAAY,CAAC,eAAe,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;gBAC9D,YAAY,CAAC,cAAc,GAAG;oBAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC/B,CAAC,CAAC;aACL;YAED,gEAAgE;YAChE,IAAI,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE;gBACnC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC;oBACnC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;aACN;YAED,iEAAiE;YACjE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE;gBACvB,IAAI,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;gBACpE,IAAI,oBAAoB,GAAG,CAAC,CAAC,SAAS,CAAC;qBAClC,QAAQ,CAAC,8BAA8B,CAAC;qBACxC,QAAQ,CAAC,eAAe,CAAC,CAAC;gBAC/B,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC;gBACzD,oBAAoB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,oBAAoB,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE;oBAC1C,IAAI,MAAM,EAAE;wBACR,MAAM,CAAC;4BACF,UAAU,EAAE,oBAAoB;yBACpC,CAAC,CAAC;qBACN;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,eAAe,EAAE,UAAU,IAAI,EAAE,MAAM;YACnC,IAAI,IAAI,GAAG,IAAI,CAAC;YAEhB,IAAI,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,EAAE;gBACd,IAAI,MAAM,EAAE;oBACR,MAAM,EAAE,CAAC;iBACZ;gBAED,OAAO;aACV;YAED,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YACzC,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE;gBACxB,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC9B,WAAW,CAAC,MAAM,EAAE,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACzB,IAAI,MAAM,EAAE;oBACR,MAAM,EAAE,CAAC;iBACZ;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED;kFAC0E;QAC1E,cAAc,EAAE,UAAU,IAAI;YAC1B,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;QACnD,CAAC;QAED;kFAC0E;QAC1E,WAAW,EAAE,UAAU,IAAI;YACvB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC;QAED;kFAC0E;QAC1E,YAAY,EAAE,UAAU,IAAI;YACxB,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;gBAC3B,SAAS,CAAC,IAAI,EAAE,CAAC;aACpB;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;QAED;kFAC0E;QAC1E,aAAa,EAAE,UAAU,IAAI;YACzB,IAAI,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;gBAC1B,SAAS,CAAC,IAAI,EAAE,CAAC;aACpB;QACL,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,oBAAoB,EAAE,UAAU,KAAK,EAAE,MAAM;YACzC,kBAAkB;YAElB,IAAI,MAAM,IAAI,SAAS,EAAE;gBACrB,KAAK,CAAC,IAAI,CAAC;oBACP,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;oBACnB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtC,IAAI,SAAS,EAAE;wBACX,mKAAmK;wBACnK,SAAS,CAAC,MAAM,EAAE,CAAC;qBACtB;gBACL,CAAC,CAAC,CAAC;aACN;YAED,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrD,CAAC;QAED;;kFAE0E;QAE1E;kFAC0E;QAC1E,eAAe,EAAE,UAAU,IAAI;YAC3B,IAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;YAC5D,IAAI,SAAS,GAAG,CAAC,CAAC,WAAW,CAAC;iBACzB,QAAQ,CAAC,kBAAkB,CAAC;iBAC5B,MAAM,CAAC,eAAe,GAAG,gBAAgB,GAAG,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;YACjC,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,OAAO,SAAS,CAAC;QACrB,CAAC;KAEJ,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC","sourcesContent":["/// <reference path=\"./jquery.jTable.d.ts\" />\r\n/* \r\n\r\njTable 2.4.0\r\nhttp://www.jtable.org\r\n\r\n---------------------------------------------------------------------------\r\n\r\nCopyright (C) 2011-2014 by Halil İbrahim Kalkan (http://www.halilibrahimkalkan.com)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n*/\r\n\r\n/************************************************************************\r\n* CORE jTable module                                                    *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    var unloadingPage;\r\n    \r\n    $(window).on('beforeunload', function () {\r\n        unloadingPage = true;\r\n    });\r\n    $(window).on('unload', function () {\r\n        unloadingPage = false;\r\n    });\r\n\r\n    $.widget(\"hik.jtable\", {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n\r\n            //Options\r\n            actions: {},\r\n            fields: {},\r\n            animationsEnabled: true,\r\n            defaultDateFormat: 'yy-mm-dd',\r\n            dialogShowEffect: 'fade',\r\n            dialogHideEffect: 'fade',\r\n            showCloseButton: false,\r\n            loadingAnimationDelay: 500,\r\n            saveUserPreferences: true,\r\n            jqueryuiTheme: false,\r\n            unAuthorizedRequestRedirectUrl: null,\r\n\r\n            ajaxSettings: {\r\n                type: 'POST',\r\n                dataType: 'json'\r\n            },\r\n\r\n            toolbar: {\r\n                hoverAnimation: true,\r\n                hoverAnimationDuration: 60,\r\n                hoverAnimationEasing: undefined,\r\n                items: []\r\n            },\r\n\r\n            //Events\r\n            closeRequested: function (event, data) { },\r\n            formCreated: function (event, data) { },\r\n            formSubmitting: function (event, data) { },\r\n            formClosed: function (event, data) { },\r\n            loadingRecords: function (event, data) { },\r\n            recordsLoaded: function (event, data) { },\r\n            rowInserted: function (event, data) { },\r\n            rowsRemoved: function (event, data) { },\r\n\r\n            //Localization\r\n            messages: {\r\n                serverCommunicationError: 'An error occured while communicating to the server.',\r\n                loadingMessage: 'Loading records...',\r\n                noDataAvailable: 'No data available!',\r\n                areYouSure: 'Are you sure?',\r\n                save: 'Save',\r\n                saving: 'Saving',\r\n                cancel: 'Cancel',\r\n                error: 'Error',\r\n                close: 'Close',\r\n                cannotLoadOptionsFor: 'Can not load options for field {0}'\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _$mainContainer: null, //Reference to the main container of all elements that are created by this plug-in (jQuery object)\r\n\r\n        _$titleDiv: null, //Reference to the title div (jQuery object)\r\n        _$toolbarDiv: null, //Reference to the toolbar div (jQuery object)\r\n\r\n        _$table: null, //Reference to the main <table> (jQuery object)\r\n        _$tableBody: null, //Reference to <body> in the table (jQuery object)\r\n        _$tableRows: null, //Array of all <tr> in the table (except \"no data\" row) (jQuery object array)\r\n\r\n        _$busyDiv: null, //Reference to the div that is used to block UI while busy (jQuery object)\r\n        _$busyMessageDiv: null, //Reference to the div that is used to show some message when UI is blocked (jQuery object)\r\n        _$errorDialogDiv: null, //Reference to the error dialog div (jQuery object)\r\n\r\n        _columnList: null, //Name of all data columns in the table (select column and command columns are not included) (string array)\r\n        _fieldList: null, //Name of all fields of a record (defined in fields option) (string array)\r\n        _keyField: null, //Name of the key field of a record (that is defined as 'key: true' in the fields option) (string)\r\n\r\n        _firstDataColumnOffset: 0, //Start index of first record field in table columns (some columns can be placed before first data column, such as select checkbox column) (integer)\r\n        _lastPostData: null, //Last posted data on load method (object)\r\n\r\n        _cache: null, //General purpose cache dictionary (object)\r\n\r\n        /************************************************************************\r\n        * CONSTRUCTOR AND INITIALIZATION METHODS                                *\r\n        *************************************************************************/\r\n\r\n        /* Contructor.\r\n        *************************************************************************/\r\n        _create: function () {\r\n\r\n            //Initialization\r\n            this._normalizeFieldsOptions();\r\n            this._initializeFields();\r\n            this._createFieldAndColumnList();\r\n\r\n            //Creating DOM elements\r\n            this._createMainContainer();\r\n            this._createTableTitle();\r\n            this._createToolBar();\r\n            this._createTable();\r\n            this._createBusyPanel();\r\n            this._createErrorDialogDiv();\r\n            this._addNoDataRow();\r\n\r\n            this._cookieKeyPrefix = this._generateCookieKeyPrefix();            \r\n        },\r\n\r\n        /* Normalizes some options for all fields (sets default values).\r\n        *************************************************************************/\r\n        _normalizeFieldsOptions: function () {\r\n            var self = this;\r\n            $.each(self.options.fields, function (fieldName, props) {\r\n                self._normalizeFieldOptions(fieldName, props);\r\n            });\r\n        },\r\n\r\n        /* Normalizes some options for a field (sets default values).\r\n        *************************************************************************/\r\n        _normalizeFieldOptions: function (fieldName, props) {\r\n            if (props.listClass == undefined) {\r\n                props.listClass = '';\r\n            }\r\n            if (props.inputClass == undefined) {\r\n                props.inputClass = '';\r\n            }\r\n\r\n            //Convert dependsOn to array if it's a comma seperated lists\r\n            if (props.dependsOn && $.type(props.dependsOn) === 'string') {\r\n                var dependsOnArray = props.dependsOn.split(',');\r\n                props.dependsOn = [];\r\n                for (var i = 0; i < dependsOnArray.length; i++) {\r\n                    props.dependsOn.push($.trim(dependsOnArray[i]));\r\n                }\r\n            }\r\n        },\r\n\r\n        /* Intializes some private variables.\r\n        *************************************************************************/\r\n        _initializeFields: function () {\r\n            this._lastPostData = {};\r\n            this._$tableRows = [];\r\n            this._columnList = [];\r\n            this._fieldList = [];\r\n            this._cache = [];\r\n        },\r\n\r\n        /* Fills _fieldList, _columnList arrays and sets _keyField variable.\r\n        *************************************************************************/\r\n        _createFieldAndColumnList: function () {\r\n            var self = this;\r\n\r\n            $.each(self.options.fields, function (name, props) {\r\n\r\n                //Add field to the field list\r\n                self._fieldList.push(name);\r\n\r\n                //Check if this field is the key field\r\n                if (props.key == true) {\r\n                    self._keyField = name;\r\n                }\r\n\r\n                //Add field to column list if it is shown in the table\r\n                if (props.list != false && props.type != 'hidden') {\r\n                    self._columnList.push(name);\r\n                }\r\n            });\r\n        },\r\n\r\n        /* Creates the main container div.\r\n        *************************************************************************/\r\n        _createMainContainer: function () {\r\n            this._$mainContainer = $('<div />')\r\n                .addClass('jtable-main-container')\r\n                .appendTo(this.element);\r\n\r\n            this._jqueryuiThemeAddClass(this._$mainContainer, 'ui-widget');\r\n        },\r\n\r\n        /* Creates title of the table if a title supplied in options.\r\n        *************************************************************************/\r\n        _createTableTitle: function () {\r\n            var self = this;\r\n\r\n            if (!self.options.title) {\r\n                return;\r\n            }\r\n\r\n            var $titleDiv = $('<div />')\r\n                .addClass('jtable-title')\r\n                .appendTo(self._$mainContainer);\r\n\r\n            self._jqueryuiThemeAddClass($titleDiv, 'ui-widget-header');\r\n\r\n            $('<div />')\r\n                .addClass('jtable-title-text')\r\n                .appendTo($titleDiv)\r\n                .append(self.options.title);\r\n\r\n            if (self.options.showCloseButton) {\r\n\r\n                var $textSpan = $('<span />')\r\n                    .html(self.options.messages.close);\r\n\r\n                $('<button></button>')\r\n                    .addClass('jtable-command-button jtable-close-button')\r\n                    .attr('title', self.options.messages.close)\r\n                    .append($textSpan)\r\n                    .appendTo($titleDiv)\r\n                    .click(function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        self._onCloseRequested();\r\n                    });\r\n            }\r\n\r\n            self._$titleDiv = $titleDiv;\r\n        },\r\n\r\n        /* Creates the table.\r\n        *************************************************************************/\r\n        _createTable: function () {\r\n            this._$table = $('<table></table>')\r\n                .addClass('jtable')\r\n                .appendTo(this._$mainContainer);\r\n\r\n            if (this.options.tableId) {\r\n                this._$table.attr('id', this.options.tableId);\r\n            }\r\n\r\n            this._jqueryuiThemeAddClass(this._$table, 'ui-widget-content');\r\n\r\n            this._createTableHead();\r\n            this._createTableBody();\r\n        },\r\n\r\n        /* Creates header (all column headers) of the table.\r\n        *************************************************************************/\r\n        _createTableHead: function () {\r\n            var $thead = $('<thead></thead>')\r\n                .appendTo(this._$table);\r\n\r\n            this._addRowToTableHead($thead);\r\n        },\r\n\r\n        /* Adds tr element to given thead element\r\n        *************************************************************************/\r\n        _addRowToTableHead: function ($thead) {\r\n            var $tr = $('<tr></tr>')\r\n                .appendTo($thead);\r\n\r\n            this._addColumnsToHeaderRow($tr);\r\n        },\r\n\r\n        /* Adds column header cells to given tr element.\r\n        *************************************************************************/\r\n        _addColumnsToHeaderRow: function ($tr) {\r\n            for (var i = 0; i < this._columnList.length; i++) {\r\n                var fieldName = this._columnList[i];\r\n                var $headerCell = this._createHeaderCellForField(fieldName, this.options.fields[fieldName]);\r\n                $headerCell.appendTo($tr);\r\n            }\r\n        },\r\n\r\n        /* Creates a header cell for given field.\r\n        *  Returns th jQuery object.\r\n        *************************************************************************/\r\n        _createHeaderCellForField: function (fieldName, field) {\r\n            field.width = field.width || '10%'; //default column width: 10%.\r\n\r\n            var $headerTextSpan = $('<span />')\r\n                .addClass('jtable-column-header-text')\r\n                .html(field.title);\r\n\r\n            var $headerContainerDiv = $('<div />')\r\n                .addClass('jtable-column-header-container')\r\n                .append($headerTextSpan);\r\n\r\n            var $th = $('<th></th>')\r\n                .addClass('jtable-column-header')\r\n                .addClass(field.listClass)\r\n                .css('width', field.width)\r\n                .data('fieldName', fieldName)\r\n                .append($headerContainerDiv);\r\n\r\n            this._jqueryuiThemeAddClass($th, 'ui-state-default');\r\n\r\n            return $th;\r\n        },\r\n\r\n        /* Creates an empty header cell that can be used as command column headers.\r\n        *************************************************************************/\r\n        _createEmptyCommandHeader: function () {\r\n            var $th = $('<th></th>')\r\n                .addClass('jtable-command-column-header')\r\n                .css('width', '1%');\r\n\r\n            this._jqueryuiThemeAddClass($th, 'ui-state-default');\r\n\r\n            return $th;\r\n        },\r\n\r\n        /* Creates tbody tag and adds to the table.\r\n        *************************************************************************/\r\n        _createTableBody: function () {\r\n            this._$tableBody = $('<tbody></tbody>').appendTo(this._$table);\r\n        },\r\n\r\n        /* Creates a div to block UI while jTable is busy.\r\n        *************************************************************************/\r\n        _createBusyPanel: function () {\r\n            this._$busyMessageDiv = $('<div />').addClass('jtable-busy-message').prependTo(this._$mainContainer);\r\n            this._$busyDiv = $('<div />').addClass('jtable-busy-panel-background').prependTo(this._$mainContainer);\r\n            this._jqueryuiThemeAddClass(this._$busyMessageDiv, 'ui-widget-header');\r\n            this._hideBusy();\r\n        },\r\n\r\n        /* Creates and prepares error dialog div.\r\n        *************************************************************************/\r\n        _createErrorDialogDiv: function () {\r\n            var self = this;\r\n\r\n            self._$errorDialogDiv = $('<div></div>').appendTo(self._$mainContainer);\r\n            self._$errorDialogDiv.dialog({\r\n                autoOpen: false,\r\n                show: self.options.dialogShowEffect,\r\n                hide: self.options.dialogHideEffect,\r\n                modal: true,\r\n                title: self.options.messages.error,\r\n                buttons: [{\r\n                    text: self.options.messages.close,\r\n                    click: function () {\r\n                        self._$errorDialogDiv.dialog('close');\r\n                    }\r\n                }]\r\n            });\r\n        },\r\n\r\n        /************************************************************************\r\n        * PUBLIC METHODS                                                        *\r\n        *************************************************************************/\r\n\r\n        /* Loads data using AJAX call, clears table and fills with new data.\r\n        *************************************************************************/\r\n        load: function (postData, completeCallback) {\r\n            this._lastPostData = postData;\r\n            this._reloadTable(completeCallback);\r\n        },\r\n\r\n        /* Refreshes (re-loads) table data with last postData.\r\n        *************************************************************************/\r\n        reload: function (completeCallback) {\r\n            this._reloadTable(completeCallback);\r\n        },\r\n\r\n        /* Gets a jQuery row object according to given record key\r\n        *************************************************************************/\r\n        getRowByKey: function (key) {\r\n            for (var i = 0; i < this._$tableRows.length; i++) {\r\n                if (key == this._getKeyValueOfRecord(this._$tableRows[i].data('record'))) {\r\n                    return this._$tableRows[i];\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /* Completely removes the table from it's container.\r\n        *************************************************************************/\r\n        destroy: function () {\r\n            this.element.empty();\r\n            $.Widget.prototype.destroy.call(this);\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Used to change options dynamically after initialization.\r\n        *************************************************************************/\r\n        _setOption: function (key, value) {\r\n\r\n        },\r\n\r\n        /* LOADING RECORDS  *****************************************************/\r\n\r\n        /* Performs an AJAX call to reload data of the table.\r\n        *************************************************************************/\r\n        _reloadTable: function (completeCallback) {\r\n            var self = this;\r\n\r\n            var completeReload = function(data) {\r\n                self._hideBusy();\r\n\r\n                //Show the error message if server returns error\r\n                if (data.Result != 'OK') {\r\n                    self._showError(data.Message);\r\n                    return;\r\n                }\r\n\r\n                //Re-generate table rows\r\n                self._removeAllRows('reloading');\r\n                self._addRecordsToTable(data.Records);\r\n\r\n                self._onRecordsLoaded(data);\r\n\r\n                //Call complete callback\r\n                if (completeCallback) {\r\n                    completeCallback();\r\n                }\r\n            };\r\n\r\n            self._showBusy(self.options.messages.loadingMessage, self.options.loadingAnimationDelay); //Disable table since it's busy\r\n            self._onLoadingRecords();\r\n\r\n            //listAction may be a function, check if it is\r\n            if ($.isFunction(self.options.actions.listAction)) {\r\n\r\n                //Execute the function\r\n                var funcResult = self.options.actions.listAction(self._lastPostData, self._createJtParamsForLoading());\r\n\r\n                //Check if result is a jQuery Deferred object\r\n                if (self._isDeferredObject(funcResult)) {\r\n                    funcResult.done(function(data) {\r\n                        completeReload(data);\r\n                    }).fail(function() {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                    }).always(function() {\r\n                        self._hideBusy();\r\n                    });\r\n                } else { //assume it's the data we're loading\r\n                    completeReload(funcResult);\r\n                }\r\n\r\n            } else { //assume listAction as URL string.\r\n\r\n                //Generate URL (with query string parameters) to load records\r\n                var loadUrl = self._createRecordLoadUrl();\r\n\r\n                //Load data from server using AJAX\r\n                self._ajax({\r\n                    url: loadUrl,\r\n                    data: self._lastPostData,\r\n                    success: function (data) {\r\n                        completeReload(data);\r\n                    },\r\n                    error: function () {\r\n                        self._hideBusy();\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                    }\r\n                });\r\n\r\n            }\r\n        },\r\n\r\n        /* Creates URL to load records.\r\n        *************************************************************************/\r\n        _createRecordLoadUrl: function () {\r\n            return this.options.actions.listAction;\r\n        },\r\n\r\n        _createJtParamsForLoading: function() {\r\n            return {\r\n                //Empty as default, paging, sorting or other extensions can override this method to add additional params to load request\r\n            };\r\n        },\r\n\r\n        /* TABLE MANIPULATION METHODS *******************************************/\r\n\r\n        /* Creates a row from given record\r\n        *************************************************************************/\r\n        _createRowFromRecord: function (record) {\r\n            var $tr = $('<tr></tr>')\r\n                .addClass('jtable-data-row')\r\n                .attr('data-record-key', this._getKeyValueOfRecord(record))\r\n                .data('record', record);\r\n\r\n            this._addCellsToRowUsingRecord($tr);\r\n            return $tr;\r\n        },\r\n\r\n        /* Adds all cells to given row.\r\n        *************************************************************************/\r\n        _addCellsToRowUsingRecord: function ($row) {\r\n            var record = $row.data('record');\r\n            for (var i = 0; i < this._columnList.length; i++) {\r\n                this._createCellForRecordField(record, this._columnList[i])\r\n                    .appendTo($row);\r\n            }\r\n        },\r\n\r\n        /* Create a cell for given field.\r\n        *************************************************************************/\r\n        _createCellForRecordField: function (record, fieldName) {\r\n            return $('<td></td>')\r\n                .addClass(this.options.fields[fieldName].listClass)\r\n                .append((this._getDisplayTextForRecordField(record, fieldName)));\r\n        },\r\n\r\n        /* Adds a list of records to the table.\r\n        *************************************************************************/\r\n        _addRecordsToTable: function (records) {\r\n            var self = this;\r\n\r\n            $.each(records, function (index, record) {\r\n                self._addRow(self._createRowFromRecord(record));\r\n            });\r\n\r\n            self._refreshRowStyles();\r\n        },\r\n\r\n        /* Adds a single row to the table.\r\n        * NOTE: THIS METHOD IS DEPRECATED AND WILL BE REMOVED FROM FEATURE RELEASES.\r\n        * USE _addRow METHOD.\r\n        *************************************************************************/\r\n        _addRowToTable: function ($tableRow, index, isNewRow, animationsEnabled) {\r\n            var options:{[key:string]:any}= {\r\n                index: this._normalizeNumber(index, 0, this._$tableRows.length, this._$tableRows.length)\r\n            };\r\n\r\n            if (isNewRow == true) {\r\n                options.isNewRow = true;\r\n            }\r\n\r\n            if (animationsEnabled == false) {\r\n                options.animationsEnabled = false;\r\n            }\r\n\r\n            this._addRow($tableRow, options);\r\n        },\r\n\r\n        /* Adds a single row to the table.\r\n        *************************************************************************/\r\n        _addRow: function ($row, options) {\r\n            //Set defaults\r\n            options = $.extend({\r\n                index: this._$tableRows.length,\r\n                isNewRow: false,\r\n                animationsEnabled: true\r\n            }, options);\r\n\r\n            //Remove 'no data' row if this is first row\r\n            if (this._$tableRows.length <= 0) {\r\n                this._removeNoDataRow();\r\n            }\r\n\r\n            //Add new row to the table according to it's index\r\n            options.index = this._normalizeNumber(options.index, 0, this._$tableRows.length, this._$tableRows.length);\r\n            if (options.index == this._$tableRows.length) {\r\n                //add as last row\r\n                this._$tableBody.append($row);\r\n                this._$tableRows.push($row);\r\n            } else if (options.index == 0) {\r\n                //add as first row\r\n                this._$tableBody.prepend($row);\r\n                this._$tableRows.unshift($row);\r\n            } else {\r\n                //insert to specified index\r\n                this._$tableRows[options.index - 1].after($row);\r\n                this._$tableRows.splice(options.index, 0, $row);\r\n            }\r\n\r\n            this._onRowInserted($row, options.isNewRow);\r\n\r\n            //Show animation if needed\r\n            if (options.isNewRow) {\r\n                this._refreshRowStyles();\r\n                if (this.options.animationsEnabled && options.animationsEnabled) {\r\n                    this._showNewRowAnimation($row);\r\n                }\r\n            }\r\n        },\r\n\r\n        /* Shows created animation for a table row\r\n        * TODO: Make this animation cofigurable and changable\r\n        *************************************************************************/\r\n        _showNewRowAnimation: function ($tableRow) {\r\n            var className = 'jtable-row-created';\r\n            if (this.options.jqueryuiTheme) {\r\n                className = className + ' ui-state-highlight';\r\n            }\r\n\r\n            $tableRow.addClass(className, 'slow', '', function () {\r\n                $tableRow.removeClass(className, 5000);\r\n            });\r\n        },\r\n\r\n        /* Removes a row or rows (jQuery selection) from table.\r\n        *************************************************************************/\r\n        _removeRowsFromTable: function ($rows, reason) {\r\n            var self = this;\r\n\r\n            //Check if any row specified\r\n            if ($rows.length <= 0) {\r\n                return;\r\n            }\r\n\r\n            //remove from DOM\r\n            $rows.addClass('jtable-row-removed').remove();\r\n\r\n            //remove from _$tableRows array\r\n            $rows.each(function () {\r\n                var index = self._findRowIndex($(this));\r\n                if (index >= 0) {\r\n                    self._$tableRows.splice(index, 1);\r\n                }\r\n            });\r\n\r\n            self._onRowsRemoved($rows, reason);\r\n\r\n            //Add 'no data' row if all rows removed from table\r\n            if (self._$tableRows.length == 0) {\r\n                self._addNoDataRow();\r\n            }\r\n\r\n            self._refreshRowStyles();\r\n        },\r\n\r\n        /* Finds index of a row in table.\r\n        *************************************************************************/\r\n        _findRowIndex: function ($row) {\r\n            return this._findIndexInArray($row, this._$tableRows, function ($row1, $row2) {\r\n                return $row1.data('record') == $row2.data('record');\r\n            });\r\n        },\r\n\r\n        /* Removes all rows in the table and adds 'no data' row.\r\n        *************************************************************************/\r\n        _removeAllRows: function (reason) {\r\n            //If no rows does exists, do nothing\r\n            if (this._$tableRows.length <= 0) {\r\n                return;\r\n            }\r\n\r\n            //Select all rows (to pass it on raising _onRowsRemoved event)\r\n            var $rows = this._$tableBody.find('tr.jtable-data-row');\r\n\r\n            //Remove all rows from DOM and the _$tableRows array\r\n            this._$tableBody.empty();\r\n            this._$tableRows = [];\r\n\r\n            this._onRowsRemoved($rows, reason);\r\n\r\n            //Add 'no data' row since we removed all rows\r\n            this._addNoDataRow();\r\n        },\r\n\r\n        /* Adds \"no data available\" row to the table.\r\n        *************************************************************************/\r\n        _addNoDataRow: function () {\r\n            if (this._$tableBody.find('>tr.jtable-no-data-row').length > 0) {\r\n                return;\r\n            }\r\n\r\n            var $tr = $('<tr></tr>')\r\n                .addClass('jtable-no-data-row')\r\n                .appendTo(this._$tableBody);\r\n\r\n            var totalColumnCount = this._$table.find('thead th').length;\r\n            $('<td></td>')\r\n                .attr('colspan', totalColumnCount)\r\n                .html(this.options.messages.noDataAvailable)\r\n                .appendTo($tr);\r\n        },\r\n\r\n        /* Removes \"no data available\" row from the table.\r\n        *************************************************************************/\r\n        _removeNoDataRow: function () {\r\n            this._$tableBody.find('.jtable-no-data-row').remove();\r\n        },\r\n\r\n        /* Refreshes styles of all rows in the table\r\n        *************************************************************************/\r\n        _refreshRowStyles: function () {\r\n            for (var i = 0; i < this._$tableRows.length; i++) {\r\n                if (i % 2 == 0) {\r\n                    this._$tableRows[i].addClass('jtable-row-even');\r\n                } else {\r\n                    this._$tableRows[i].removeClass('jtable-row-even');\r\n                }\r\n            }\r\n        },\r\n\r\n        /* RENDERING FIELD VALUES ***********************************************/\r\n\r\n        /* Gets text for a field of a record according to it's type.\r\n        *************************************************************************/\r\n        _getDisplayTextForRecordField: function (record, fieldName) {\r\n            var field = this.options.fields[fieldName];\r\n            var fieldValue = record[fieldName];\r\n\r\n            //if this is a custom field, call display function\r\n            if (field.display) {\r\n                return field.display({ record: record });\r\n            }\r\n\r\n            if (field.type == 'date') {\r\n                return this._getDisplayTextForDateRecordField(field, fieldValue);\r\n            } else if (field.type == 'checkbox') {\r\n                return this._getCheckBoxTextForFieldByValue(fieldName, fieldValue);\r\n            } else if (field.options) { //combobox or radio button list since there are options.\r\n                var options = this._getOptionsForField(fieldName, {\r\n                    record: record,\r\n                    value: fieldValue,\r\n                    source: 'list',\r\n                    dependedValues: this._createDependedValuesUsingRecord(record, field.dependsOn)\r\n                });\r\n                return this._findOptionByValue(options, fieldValue).DisplayText;\r\n            } else { //other types\r\n                return fieldValue;\r\n            }\r\n        },\r\n\r\n        /* Creates and returns an object that's properties are depended values of a record.\r\n        *************************************************************************/\r\n        _createDependedValuesUsingRecord: function (record, dependsOn) {\r\n            if (!dependsOn) {\r\n                return {};\r\n            }\r\n\r\n            var dependedValues = {};\r\n            for (var i = 0; i < dependsOn.length; i++) {\r\n                dependedValues[dependsOn[i]] = record[dependsOn[i]];\r\n            }\r\n\r\n            return dependedValues;\r\n        },\r\n\r\n        /* Finds an option object by given value.\r\n        *************************************************************************/\r\n        _findOptionByValue: function (options, value) {\r\n            for (var i = 0; i < options.length; i++) {\r\n                if (options[i].Value == value) {\r\n                    return options[i];\r\n                }\r\n            }\r\n\r\n            return {}; //no option found\r\n        },\r\n\r\n        /* Gets text for a date field.\r\n        *************************************************************************/\r\n        _getDisplayTextForDateRecordField: function (field, fieldValue) {\r\n            if (!fieldValue) {\r\n                return '';\r\n            }\r\n\r\n            var displayFormat = field.displayFormat || this.options.defaultDateFormat;\r\n            var date = this._parseDate(fieldValue);\r\n            return $.datepicker.formatDate(displayFormat, date);\r\n        },\r\n\r\n        /* Gets options for a field according to user preferences.\r\n        *************************************************************************/\r\n        _getOptionsForField: function (fieldName, funcParams) {\r\n            var field = this.options.fields[fieldName];\r\n            var optionsSource = field.options;\r\n\r\n            if ($.isFunction(optionsSource)) {\r\n                //prepare parameter to the function\r\n                funcParams = $.extend(true, {\r\n                    _cacheCleared: false,\r\n                    dependedValues: {},\r\n                    clearCache: function () {\r\n                        this._cacheCleared = true;\r\n                    }\r\n                }, funcParams);\r\n\r\n                //call function and get actual options source\r\n                optionsSource = optionsSource(funcParams);\r\n            }\r\n\r\n            var options;\r\n\r\n            //Build options according to it's source type\r\n            if (typeof optionsSource == 'string') { //It is an Url to download options\r\n                var cacheKey = 'options_' + fieldName + '_' + optionsSource; //create a unique cache key\r\n                if (funcParams._cacheCleared || (!this._cache[cacheKey])) {\r\n                    //if user calls clearCache() or options are not found in the cache, download options\r\n                    this._cache[cacheKey] = this._buildOptionsFromArray(this._downloadOptions(fieldName, optionsSource));\r\n                    this._sortFieldOptions(this._cache[cacheKey], field.optionsSorting);\r\n                } else {\r\n                    //found on cache..\r\n                    //if this method (_getOptionsForField) is called to get option for a specific value (on funcParams.source == 'list')\r\n                    //and this value is not in cached options, we need to re-download options to get the unfound (probably new) option.\r\n                    if (funcParams.value != undefined) {\r\n                        var optionForValue = this._findOptionByValue(this._cache[cacheKey], funcParams.value);\r\n                        if (optionForValue.DisplayText == undefined) { //this value is not in cached options...\r\n                            this._cache[cacheKey] = this._buildOptionsFromArray(this._downloadOptions(fieldName, optionsSource));\r\n                            this._sortFieldOptions(this._cache[cacheKey], field.optionsSorting);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                options = this._cache[cacheKey];\r\n            } else if (jQuery.isArray(optionsSource)) { //It is an array of options\r\n                options = this._buildOptionsFromArray(optionsSource);\r\n                this._sortFieldOptions(options, field.optionsSorting);\r\n            } else { //It is an object that it's properties are options\r\n                options = this._buildOptionsArrayFromObject(optionsSource);\r\n                this._sortFieldOptions(options, field.optionsSorting);\r\n            }\r\n\r\n            return options;\r\n        },\r\n\r\n        /* Download options for a field from server.\r\n        *************************************************************************/\r\n        _downloadOptions: function (fieldName, url) {\r\n            var self = this;\r\n            var options = [];\r\n\r\n            self._ajax({\r\n                url: url,\r\n                async: false,\r\n                success: function (data) {\r\n                    if (data.Result != 'OK') {\r\n                        self._showError(data.Message);\r\n                        return;\r\n                    }\r\n\r\n                    options = data.Options;\r\n                },\r\n                error: function () {\r\n                    var errMessage = self._formatString(self.options.messages.cannotLoadOptionsFor, fieldName);\r\n                    self._showError(errMessage);\r\n                }\r\n            });\r\n\r\n            return options;\r\n        },\r\n\r\n        /* Sorts given options according to sorting parameter.\r\n        *  sorting can be: 'value', 'value-desc', 'text' or 'text-desc'.\r\n        *************************************************************************/\r\n        _sortFieldOptions: function (options, sorting) {\r\n\r\n            if ((!options) || (!options.length) || (!sorting)) {\r\n                return;\r\n            }\r\n\r\n            //Determine using value of text\r\n            var dataSelector;\r\n            if (sorting.indexOf('value') == 0) {\r\n                dataSelector = function (option) {\r\n                    return option.Value;\r\n                };\r\n            } else { //assume as text\r\n                dataSelector = function (option) {\r\n                    return option.DisplayText;\r\n                };\r\n            }\r\n\r\n            var compareFunc;\r\n            if ($.type(dataSelector(options[0])) == 'string') {\r\n                compareFunc = function (option1, option2) {\r\n                    return dataSelector(option1).localeCompare(dataSelector(option2));\r\n                };\r\n            } else { //asuume as numeric\r\n                compareFunc = function (option1, option2) {\r\n                    return dataSelector(option1) - dataSelector(option2);\r\n                };\r\n            }\r\n\r\n            if (sorting.indexOf('desc') > 0) {\r\n                options.sort(function (a, b) {\r\n                    return compareFunc(b, a);\r\n                });\r\n            } else { //assume as asc\r\n                options.sort(function (a, b) {\r\n                    return compareFunc(a, b);\r\n                });\r\n            }\r\n        },\r\n\r\n        /* Creates an array of options from given object.\r\n        *************************************************************************/\r\n        _buildOptionsArrayFromObject: function (options) {\r\n            var list = [];\r\n\r\n            $.each(options, function (propName, propValue) {\r\n                list.push({\r\n                    Value: propName,\r\n                    DisplayText: propValue\r\n                });\r\n            });\r\n\r\n            return list;\r\n        },\r\n\r\n        /* Creates array of options from giving options array.\r\n        *************************************************************************/\r\n        _buildOptionsFromArray: function (optionsArray) {\r\n            var list = [];\r\n\r\n            for (var i = 0; i < optionsArray.length; i++) {\r\n                if ($.isPlainObject(optionsArray[i])) {\r\n                    list.push(optionsArray[i]);\r\n                } else { //assumed as primitive type (int, string...)\r\n                    list.push({\r\n                        Value: optionsArray[i],\r\n                        DisplayText: optionsArray[i]\r\n                    });\r\n                }\r\n            }\r\n\r\n            return list;\r\n        },\r\n\r\n        /* Parses given date string to a javascript Date object.\r\n        *  Given string must be formatted one of the samples shown below:\r\n        *  /Date(1320259705710)/\r\n        *  2011-01-01 20:32:42 (YYYY-MM-DD HH:MM:SS)\r\n        *  2011-01-01 (YYYY-MM-DD)\r\n        *************************************************************************/\r\n        _parseDate: function (dateString) {\r\n            if (dateString.indexOf('Date') >= 0) { //Format: /Date(1320259705710)/\r\n                return new Date(\r\n                    parseInt(dateString.substr(6), 10)\r\n                );\r\n            } else if (dateString.length == 10) { //Format: 2011-01-01\r\n                return new Date(\r\n                    parseInt(dateString.substr(0, 4), 10),\r\n                    parseInt(dateString.substr(5, 2), 10) - 1,\r\n                    parseInt(dateString.substr(8, 2), 10)\r\n                );\r\n            } else if (dateString.length == 19) { //Format: 2011-01-01 20:32:42\r\n                return new Date(\r\n                    parseInt(dateString.substr(0, 4), 10),\r\n                    parseInt(dateString.substr(5, 2), 10) - 1,\r\n                    parseInt(dateString.substr(8, 2, 10)),\r\n                    parseInt(dateString.substr(11, 2), 10),\r\n                    parseInt(dateString.substr(14, 2), 10),\r\n                    parseInt(dateString.substr(17, 2), 10)\r\n                );\r\n            } else {\r\n                this._logWarn('Given date is not properly formatted: ' + dateString);\r\n                return 'format error!';\r\n            }\r\n        },\r\n\r\n        /* TOOL BAR *************************************************************/\r\n\r\n        /* Creates the toolbar.\r\n        *************************************************************************/\r\n        _createToolBar: function () {\r\n            this._$toolbarDiv = $('<div />')\r\n            .addClass('jtable-toolbar')\r\n            .appendTo(this._$titleDiv);\r\n\r\n            for (var i = 0; i < this.options.toolbar.items.length; i++) {\r\n                this._addToolBarItem(this.options.toolbar.items[i]);\r\n            }\r\n        },\r\n\r\n        /* Adds a new item to the toolbar.\r\n        *************************************************************************/\r\n        _addToolBarItem: function (item) {\r\n\r\n            //Check if item is valid\r\n            if ((item == undefined) || (item.text == undefined && item.icon == undefined)) {\r\n                this._logWarn('Can not add tool bar item since it is not valid!');\r\n                this._logWarn(item);\r\n                return null;\r\n            }\r\n\r\n            var $toolBarItem = $('<span></span>')\r\n                .addClass('jtable-toolbar-item')\r\n                .appendTo(this._$toolbarDiv);\r\n\r\n            this._jqueryuiThemeAddClass($toolBarItem, 'ui-widget ui-state-default ui-corner-all', 'ui-state-hover');\r\n\r\n            //cssClass property\r\n            if (item.cssClass) {\r\n                $toolBarItem\r\n                    .addClass(item.cssClass);\r\n            }\r\n\r\n            //tooltip property\r\n            if (item.tooltip) {\r\n                $toolBarItem\r\n                    .attr('title', item.tooltip);\r\n            }\r\n\r\n            //icon property\r\n            if (item.icon) {\r\n                var $icon = $('<span class=\"jtable-toolbar-item-icon\"></span>').appendTo($toolBarItem);\r\n                if (item.icon === true) {\r\n                    //do nothing\r\n                } else if ($.type(item.icon === 'string')) {\r\n                    $icon.css('background', 'url(\"' + item.icon + '\")');\r\n                }\r\n            }\r\n\r\n            //text property\r\n            if (item.text) {\r\n                $('<span class=\"\"></span>')\r\n                    .html(item.text)\r\n                    .addClass('jtable-toolbar-item-text').appendTo($toolBarItem);\r\n            }\r\n\r\n            //click event\r\n            if (item.click) {\r\n                $toolBarItem.click(function () {\r\n                    item.click();\r\n                });\r\n            }\r\n\r\n            //set hover animation parameters\r\n            var hoverAnimationDuration = undefined;\r\n            var hoverAnimationEasing = undefined;\r\n            if (this.options.toolbar.hoverAnimation) {\r\n                hoverAnimationDuration = this.options.toolbar.hoverAnimationDuration;\r\n                hoverAnimationEasing = this.options.toolbar.hoverAnimationEasing;\r\n            }\r\n\r\n            //change class on hover\r\n            $toolBarItem.hover(function () {\r\n                $toolBarItem.addClass('jtable-toolbar-item-hover', hoverAnimationDuration, hoverAnimationEasing);\r\n            }, function () {\r\n                $toolBarItem.removeClass('jtable-toolbar-item-hover', hoverAnimationDuration, hoverAnimationEasing);\r\n            });\r\n\r\n            return $toolBarItem;\r\n        },\r\n\r\n        /* ERROR DIALOG *********************************************************/\r\n\r\n        /* Shows error message dialog with given message.\r\n        *************************************************************************/\r\n        _showError: function (message) {\r\n            this._$errorDialogDiv.html(message).dialog('open');\r\n        },\r\n\r\n        /* BUSY PANEL ***********************************************************/\r\n\r\n        /* Shows busy indicator and blocks table UI.\r\n        * TODO: Make this cofigurable and changable\r\n        *************************************************************************/\r\n        _setBusyTimer: null,\r\n        _showBusy: function (message, delay) {\r\n            var self = this;  //\r\n\r\n            //Show a transparent overlay to prevent clicking to the table\r\n            self._$busyDiv\r\n                .width(self._$mainContainer.width())\r\n                .height(self._$mainContainer.height())\r\n                .addClass('jtable-busy-panel-background-invisible')\r\n                .show();\r\n\r\n            var makeVisible = function () {\r\n                self._$busyDiv.removeClass('jtable-busy-panel-background-invisible');\r\n                self._$busyMessageDiv.html(message).show();\r\n            };\r\n\r\n            if (delay) {\r\n                if (self._setBusyTimer) {\r\n                    return;\r\n                }\r\n\r\n                self._setBusyTimer = setTimeout(makeVisible, delay);\r\n            } else {\r\n                makeVisible();\r\n            }\r\n        },\r\n\r\n        /* Hides busy indicator and unblocks table UI.\r\n        *************************************************************************/\r\n        _hideBusy: function () {\r\n            clearTimeout(this._setBusyTimer);\r\n            this._setBusyTimer = null;\r\n            this._$busyDiv.hide();\r\n            this._$busyMessageDiv.html('').hide();\r\n        },\r\n\r\n        /* Returns true if jTable is busy.\r\n        *************************************************************************/\r\n        _isBusy: function () {\r\n            return this._$busyMessageDiv.is(':visible');\r\n        },\r\n\r\n        /* Adds jQueryUI class to an item.\r\n        *************************************************************************/\r\n        _jqueryuiThemeAddClass: function ($elm, className, hoverClassName) {\r\n            if (!this.options.jqueryuiTheme) {\r\n                return;\r\n            }\r\n\r\n            $elm.addClass(className);\r\n\r\n            if (hoverClassName) {\r\n                $elm.hover(function () {\r\n                    $elm.addClass(hoverClassName);\r\n                }, function () {\r\n                    $elm.removeClass(hoverClassName);\r\n                });\r\n            }\r\n        },\r\n\r\n        /* COMMON METHODS *******************************************************/\r\n\r\n        /* Performs an AJAX call to specified URL.\r\n        * THIS METHOD IS DEPRECATED AND WILL BE REMOVED FROM FEATURE RELEASES.\r\n        * USE _ajax METHOD.\r\n        *************************************************************************/\r\n        _performAjaxCall: function (url, postData, async, success, error) {\r\n            this._ajax({\r\n                url: url,\r\n                data: postData,\r\n                async: async,\r\n                success: success,\r\n                error: error\r\n            });\r\n        },\r\n\r\n        _unAuthorizedRequestHandler: function() {\r\n            if (this.options.unAuthorizedRequestRedirectUrl) {\r\n                location.href = this.options.unAuthorizedRequestRedirectUrl;\r\n            } else {\r\n                location.reload(true);\r\n            }\r\n        },\r\n\r\n        /* This method is used to perform AJAX calls in jTable instead of direct\r\n        * usage of jQuery.ajax method.\r\n        *************************************************************************/\r\n        _ajax: function (options) {\r\n            var self = this;\r\n\r\n            //Handlers for HTTP status codes\r\n            var opts:{[key:string]:any} = {\r\n                statusCode: {\r\n                    401: function () { //Unauthorized\r\n                        self._unAuthorizedRequestHandler();\r\n                    }\r\n                }\r\n            };\r\n\r\n            opts = $.extend(opts, this.options.ajaxSettings, options);\r\n\r\n            //Override success\r\n            opts.success = function (data) {\r\n                //Checking for Authorization error\r\n                if (data && data.UnAuthorizedRequest == true) {\r\n                    self._unAuthorizedRequestHandler();\r\n                }\r\n\r\n                if (options.success) {\r\n                    options.success(data);\r\n                }\r\n            };\r\n\r\n            //Override error\r\n            opts.error = function (jqXHR, textStatus, errorThrown) {\r\n                if (unloadingPage) {\r\n                    jqXHR.abort();\r\n                    return;\r\n                }\r\n                \r\n                if (options.error) {\r\n                    options.error(arguments);\r\n                }\r\n            };\r\n\r\n            //Override complete\r\n            opts.complete = function () {\r\n                if (options.complete) {\r\n                    options.complete();\r\n                }\r\n            };\r\n\r\n            $.ajax(opts);\r\n        },\r\n\r\n        /* Gets value of key field of a record.\r\n        *************************************************************************/\r\n        _getKeyValueOfRecord: function (record) {\r\n            return record[this._keyField];\r\n        },\r\n\r\n        /************************************************************************\r\n        * COOKIE                                                                *\r\n        *************************************************************************/\r\n\r\n        /* Sets a cookie with given key.\r\n        *************************************************************************/\r\n        _setCookie: function (key, value) {\r\n            key = this._cookieKeyPrefix + key;\r\n\r\n            var expireDate = new Date();\r\n            expireDate.setDate(expireDate.getDate() + 30);\r\n            document.cookie = encodeURIComponent(key) + '=' + encodeURIComponent(value) + \"; expires=\" + expireDate.toUTCString();\r\n        },\r\n\r\n        /* Gets a cookie with given key.\r\n        *************************************************************************/\r\n        _getCookie: function (key) {\r\n            key = this._cookieKeyPrefix + key;\r\n\r\n            var equalities = document.cookie.split('; ');\r\n            for (var i = 0; i < equalities.length; i++) {\r\n                if (!equalities[i]) {\r\n                    continue;\r\n                }\r\n\r\n                var splitted = equalities[i].split('=');\r\n                if (splitted.length != 2) {\r\n                    continue;\r\n                }\r\n\r\n                if (decodeURIComponent(splitted[0]) === key) {\r\n                    return decodeURIComponent(splitted[1] || '');\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /* Generates a hash key to be prefix for all cookies for this jtable instance.\r\n        *************************************************************************/\r\n        _generateCookieKeyPrefix: function () {\r\n\r\n            var simpleHash = function (value) {\r\n                var hash = 0;\r\n                if (value.length == 0) {\r\n                    return hash;\r\n                }\r\n\r\n                for (var i = 0; i < value.length; i++) {\r\n                    var ch = value.charCodeAt(i);\r\n                    hash = ((hash << 5) - hash) + ch;\r\n                    hash = hash & hash;\r\n                }\r\n\r\n                return hash;\r\n            };\r\n\r\n            var strToHash = '';\r\n            if (this.options.tableId) {\r\n                strToHash = strToHash + this.options.tableId + '#';\r\n            }\r\n\r\n            strToHash = strToHash + this._columnList.join('$') + '#c' + this._$table.find('thead th').length;\r\n            return 'jtable#' + simpleHash(strToHash);\r\n        },\r\n\r\n        /************************************************************************\r\n        * EVENT RAISING METHODS                                                 *\r\n        *************************************************************************/\r\n\r\n        _onLoadingRecords: function () {\r\n            this._trigger(\"loadingRecords\", null, {});\r\n        },\r\n\r\n        _onRecordsLoaded: function (data) {\r\n            this._trigger(\"recordsLoaded\", null, { records: data.Records, serverResponse: data });\r\n        },\r\n\r\n        _onRowInserted: function ($row, isNewRow) {\r\n            this._trigger(\"rowInserted\", null, { row: $row, record: $row.data('record'), isNewRow: isNewRow });\r\n        },\r\n\r\n        _onRowsRemoved: function ($rows, reason) {\r\n            this._trigger(\"rowsRemoved\", null, { rows: $rows, reason: reason });\r\n        },\r\n\r\n        _onCloseRequested: function () {\r\n            this._trigger(\"closeRequested\", null, {});\r\n        }\r\n\r\n    });\r\n\r\n}(jQuery));\r\n\r\n\r\n/************************************************************************\r\n* Some UTULITY methods used by jTable                                   *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /* Gets property value of an object recursively.\r\n        *************************************************************************/\r\n        _getPropertyOfObject: function (obj, propName) {\r\n            if (propName.indexOf('.') < 0) {\r\n                return obj[propName];\r\n            } else {\r\n                var preDot = propName.substring(0, propName.indexOf('.'));\r\n                var postDot = propName.substring(propName.indexOf('.') + 1);\r\n                return this._getPropertyOfObject(obj[preDot], postDot);\r\n            }\r\n        },\r\n\r\n        /* Sets property value of an object recursively.\r\n        *************************************************************************/\r\n        _setPropertyOfObject: function (obj, propName, value) {\r\n            if (propName.indexOf('.') < 0) {\r\n                obj[propName] = value;\r\n            } else {\r\n                var preDot = propName.substring(0, propName.indexOf('.'));\r\n                var postDot = propName.substring(propName.indexOf('.') + 1);\r\n                this._setPropertyOfObject(obj[preDot], postDot, value);\r\n            }\r\n        },\r\n\r\n        /* Inserts a value to an array if it does not exists in the array.\r\n        *************************************************************************/\r\n        _insertToArrayIfDoesNotExists: function (array, value) {\r\n            if ($.inArray(value, array) < 0) {\r\n                array.push(value);\r\n            }\r\n        },\r\n\r\n        /* Finds index of an element in an array according to given comparision function\r\n        *************************************************************************/\r\n        _findIndexInArray: function (value, array, compareFunc) {\r\n\r\n            //If not defined, use default comparision\r\n            if (!compareFunc) {\r\n                compareFunc = function (a, b) {\r\n                    return a == b;\r\n                };\r\n            }\r\n\r\n            for (var i = 0; i < array.length; i++) {\r\n                if (compareFunc(value, array[i])) {\r\n                    return i;\r\n                }\r\n            }\r\n\r\n            return -1;\r\n        },\r\n\r\n        /* Normalizes a number between given bounds or sets to a defaultValue\r\n        *  if it is undefined\r\n        *************************************************************************/\r\n        _normalizeNumber: function (number, min, max, defaultValue) {\r\n            if (number == undefined || number == null || isNaN(number)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            if (number < min) {\r\n                return min;\r\n            }\r\n\r\n            if (number > max) {\r\n                return max;\r\n            }\r\n\r\n            return number;\r\n        },\r\n\r\n        /* Formats a string just like string.format in c#.\r\n        *  Example:\r\n        *  _formatString('Hello {0}','Halil') = 'Hello Halil'\r\n        *************************************************************************/\r\n        _formatString: function () {\r\n            if (arguments.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var str = arguments[0];\r\n            for (var i = 1; i < arguments.length; i++) {\r\n                var placeHolder = '{' + (i - 1) + '}';\r\n                str = str.replace(placeHolder, arguments[i]);\r\n            }\r\n\r\n            return str;\r\n        },\r\n\r\n        /* Checks if given object is a jQuery Deferred object.\r\n         */\r\n        _isDeferredObject: function (obj) {\r\n            return obj.then && obj.done && obj.fail;\r\n        },\r\n\r\n        //Logging methods ////////////////////////////////////////////////////////\r\n\r\n        _logDebug: function (text) {\r\n            if (!window.console) {\r\n                return;\r\n            }\r\n\r\n            console.log('jTable DEBUG: ' + text);\r\n        },\r\n\r\n        _logInfo: function (text) {\r\n            if (!window.console) {\r\n                return;\r\n            }\r\n\r\n            console.log('jTable INFO: ' + text);\r\n        },\r\n\r\n        _logWarn: function (text) {\r\n            if (!window.console) {\r\n                return;\r\n            }\r\n\r\n            console.log('jTable WARNING: ' + text);\r\n        },\r\n\r\n        _logError: function (text) {\r\n            if (!window.console) {\r\n                return;\r\n            }\r\n\r\n            console.log('jTable ERROR: ' + text);\r\n        }\r\n\r\n    });\r\n\r\n    /* Fix for array.indexOf method in IE7.\r\n     * This code is taken from http://www.tutorialspoint.com/javascript/array_indexof.htm */\r\n    if (!Array.prototype.indexOf) {\r\n        Array.prototype.indexOf = function (elt) {\r\n            var len = this.length;\r\n            var from = Number(arguments[1]) || 0;\r\n            from = (from < 0)\r\n                 ? Math.ceil(from)\r\n                 : Math.floor(from);\r\n            if (from < 0)\r\n                from += len;\r\n            for (; from < len; from++) {\r\n                if (from in this &&\r\n                    this[from] === elt)\r\n                    return from;\r\n            }\r\n            return -1;\r\n        };\r\n    }\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* FORMS extension for jTable (base for edit/create forms)               *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Submits a form asynchronously using AJAX.\r\n        *  This method is needed, since form submitting logic can be overrided\r\n        *  by extensions.\r\n        *************************************************************************/\r\n        _submitFormUsingAjax: function (url, formData, success, error) {\r\n            this._ajax({\r\n                url: url,\r\n                data: formData,\r\n                success: success,\r\n                error: error\r\n            });\r\n        },\r\n\r\n        /* Creates label for an input element.\r\n        *************************************************************************/\r\n        _createInputLabelForRecordField: function (fieldName) {\r\n            //TODO: May create label tag instead of a div.\r\n            return $('<div />')\r\n                .addClass('jtable-input-label')\r\n                .html(this.options.fields[fieldName].inputTitle || this.options.fields[fieldName].title);\r\n        },\r\n\r\n        /* Creates an input element according to field type.\r\n        *************************************************************************/\r\n        _createInputForRecordField: function (funcParams) {\r\n            var fieldName = funcParams.fieldName,\r\n                value = funcParams.value,\r\n                record = funcParams.record,\r\n                formType = funcParams.formType,\r\n                form = funcParams.form;\r\n\r\n            //Get the field\r\n            var field = this.options.fields[fieldName];\r\n\r\n            //If value if not supplied, use defaultValue of the field\r\n            if (value == undefined || value == null) {\r\n                value = field.defaultValue;\r\n            }\r\n\r\n            //Use custom function if supplied\r\n            if (field.input) {\r\n                var $input = $(field.input({\r\n                    value: value,\r\n                    record: record,\r\n                    formType: formType,\r\n                    form: form\r\n                }));\r\n\r\n                //Add id attribute if does not exists\r\n                if (!$input.attr('id')) {\r\n                    $input.attr('id', 'Edit-' + fieldName);\r\n                }\r\n\r\n                //Wrap input element with div\r\n                return $('<div />')\r\n                    .addClass('jtable-input jtable-custom-input')\r\n                    .append($input);\r\n            }\r\n\r\n            //Create input according to field type\r\n            if (field.type == 'date') {\r\n                return this._createDateInputForField(field, fieldName, value);\r\n            } else if (field.type == 'textarea') {\r\n                return this._createTextAreaForField(field, fieldName, value);\r\n            } else if (field.type == 'password') {\r\n                return this._createPasswordInputForField(field, fieldName, value);\r\n            } else if (field.type == 'checkbox') {\r\n                return this._createCheckboxForField(field, fieldName, value);\r\n            } else if (field.options) {\r\n                if (field.type == 'radiobutton') {\r\n                    return this._createRadioButtonListForField(field, fieldName, value, record, formType);\r\n                } else {\r\n                    return this._createDropDownListForField(field, fieldName, value, record, formType, form);\r\n                }\r\n            } else {\r\n                return this._createTextInputForField(field, fieldName, value);\r\n            }\r\n        },\r\n\r\n        //Creates a hidden input element with given name and value.\r\n        _createInputForHidden: function (fieldName, value) {\r\n            if (value == undefined) {\r\n                value = \"\";\r\n            }\r\n\r\n            return $('<input type=\"hidden\" name=\"' + fieldName + '\" id=\"Edit-' + fieldName + '\"></input>')\r\n                .val(value);\r\n        },\r\n\r\n        /* Creates a date input for a field.\r\n        *************************************************************************/\r\n        _createDateInputForField: function (field, fieldName, value) {\r\n            var $input = $('<input class=\"' + field.inputClass + '\" id=\"Edit-' + fieldName + '\" type=\"text\" name=\"' + fieldName + '\"></input>');\r\n            if(value != undefined) {\r\n                $input.val(value);\r\n            }\r\n            \r\n            var displayFormat = field.displayFormat || this.options.defaultDateFormat;\r\n            $input.datepicker({ dateFormat: displayFormat });\r\n            return $('<div />')\r\n                .addClass('jtable-input jtable-date-input')\r\n                .append($input);\r\n        },\r\n\r\n        /* Creates a textarea element for a field.\r\n        *************************************************************************/\r\n        _createTextAreaForField: function (field, fieldName, value) {\r\n            var $textArea = $('<textarea class=\"' + field.inputClass + '\" id=\"Edit-' + fieldName + '\" name=\"' + fieldName + '\"></textarea>');\r\n            if (value != undefined) {\r\n                $textArea.val(value);\r\n            }\r\n            \r\n            return $('<div />')\r\n                .addClass('jtable-input jtable-textarea-input')\r\n                .append($textArea);\r\n        },\r\n\r\n        /* Creates a standart textbox for a field.\r\n        *************************************************************************/\r\n        _createTextInputForField: function (field, fieldName, value) {\r\n            var $input = $('<input class=\"' + field.inputClass + '\" id=\"Edit-' + fieldName + '\" type=\"text\" name=\"' + fieldName + '\"></input>');\r\n            if (value != undefined) {\r\n                $input.val(value);\r\n            }\r\n            \r\n            return $('<div />')\r\n                .addClass('jtable-input jtable-text-input')\r\n                .append($input);\r\n        },\r\n\r\n        /* Creates a password input for a field.\r\n        *************************************************************************/\r\n        _createPasswordInputForField: function (field, fieldName, value) {\r\n            var $input = $('<input class=\"' + field.inputClass + '\" id=\"Edit-' + fieldName + '\" type=\"password\" name=\"' + fieldName + '\"></input>');\r\n            if (value != undefined) {\r\n                $input.val(value);\r\n            }\r\n            \r\n            return $('<div />')\r\n                .addClass('jtable-input jtable-password-input')\r\n                .append($input);\r\n        },\r\n\r\n        /* Creates a checkboxfor a field.\r\n        *************************************************************************/\r\n        _createCheckboxForField: function (field, fieldName, value) {\r\n            var self = this;\r\n\r\n            //If value is undefined, get unchecked state's value\r\n            if (value == undefined) {\r\n                value = self._getCheckBoxPropertiesForFieldByState(fieldName, false).Value;\r\n            }\r\n\r\n            //Create a container div\r\n            var $containerDiv = $('<div />')\r\n                .addClass('jtable-input jtable-checkbox-input');\r\n\r\n            //Create checkbox and check if needed\r\n            var $checkBox = $('<input class=\"' + field.inputClass + '\" id=\"Edit-' + fieldName + '\" type=\"checkbox\" name=\"' + fieldName + '\" />')\r\n                .appendTo($containerDiv);\r\n            if (value != undefined) {\r\n                $checkBox.val(value);\r\n            }\r\n\r\n            //Create display text of checkbox for current state\r\n            var $textSpan = $('<span>' + (field.formText || self._getCheckBoxTextForFieldByValue(fieldName, value)) + '</span>')\r\n                .appendTo($containerDiv);\r\n\r\n            //Check the checkbox if it's value is checked-value\r\n            if (self._getIsCheckBoxSelectedForFieldByValue(fieldName, value)) {\r\n                $checkBox.attr('checked', 'checked');\r\n            }\r\n\r\n            //This method sets checkbox's value and text according to state of the checkbox\r\n            var refreshCheckBoxValueAndText = function () {\r\n                var checkboxProps = self._getCheckBoxPropertiesForFieldByState(fieldName, $checkBox.is(':checked'));\r\n                $checkBox.attr('value', checkboxProps.Value);\r\n                $textSpan.html(field.formText || checkboxProps.DisplayText);\r\n            };\r\n\r\n            //Register to click event to change display text when state of checkbox is changed.\r\n            $checkBox.click(function () {\r\n                refreshCheckBoxValueAndText();\r\n            });\r\n\r\n            //Change checkbox state when clicked to text\r\n            if (field.setOnTextClick != false) {\r\n                $textSpan\r\n                    .addClass('jtable-option-text-clickable')\r\n                    .click(function () {\r\n                        if ($checkBox.is(':checked')) {\r\n                            $checkBox.attr('checked', \"false\");\r\n                        } else {\r\n                            $checkBox.attr('checked', \"true\");\r\n                        }\r\n\r\n                        refreshCheckBoxValueAndText();\r\n                    });\r\n            }\r\n\r\n            return $containerDiv;\r\n        },\r\n\r\n        /* Creates a drop down list (combobox) input element for a field.\r\n        *************************************************************************/\r\n        _createDropDownListForField: function (field, fieldName, value, record, source, form) {\r\n\r\n            //Create a container div\r\n            var $containerDiv = $('<div />')\r\n                .addClass('jtable-input jtable-dropdown-input');\r\n\r\n            //Create select element\r\n            var $select = $('<select class=\"' + field.inputClass + '\" id=\"Edit-' + fieldName + '\" name=\"' + fieldName + '\"></select>')\r\n                .appendTo($containerDiv);\r\n\r\n            //add options\r\n            var options = this._getOptionsForField(fieldName, {\r\n                record: record,\r\n                source: source,\r\n                form: form,\r\n                dependedValues: this._createDependedValuesUsingForm(form, field.dependsOn)\r\n            });\r\n\r\n            this._fillDropDownListWithOptions($select, options, value);\r\n\r\n            return $containerDiv;\r\n        },\r\n        \r\n        /* Fills a dropdown list with given options.\r\n        *************************************************************************/\r\n        _fillDropDownListWithOptions: function ($select, options, value) {\r\n            $select.empty();\r\n            for (var i = 0; i < options.length; i++) {\r\n                $('<option' + (options[i].Value == value ? ' selected=\"selected\"' : '') + '>' + options[i].DisplayText + '</option>')\r\n                    .val(options[i].Value)\r\n                    .appendTo($select);\r\n            }\r\n        },\r\n\r\n        /* Creates depended values object from given form.\r\n        *************************************************************************/\r\n        _createDependedValuesUsingForm: function ($form, dependsOn) {\r\n            if (!dependsOn) {\r\n                return {};\r\n            }\r\n\r\n            var dependedValues = {};\r\n\r\n            for (var i = 0; i < dependsOn.length; i++) {\r\n                var dependedField = dependsOn[i];\r\n\r\n                var $dependsOn = $form.find('select[name=' + dependedField + ']');\r\n                if ($dependsOn.length <= 0) {\r\n                    continue;\r\n                }\r\n\r\n                dependedValues[dependedField] = $dependsOn.val();\r\n            }\r\n\r\n\r\n            return dependedValues;\r\n        },\r\n\r\n        /* Creates a radio button list for a field.\r\n        *************************************************************************/\r\n        _createRadioButtonListForField: function (field, fieldName, value, record, source) {\r\n            var $containerDiv = $('<div />')\r\n                .addClass('jtable-input jtable-radiobuttonlist-input');\r\n\r\n            var options = this._getOptionsForField(fieldName, {\r\n                record: record,\r\n                source: source\r\n            });\r\n\r\n            $.each(options, function(i:number, option) {\r\n                var $radioButtonDiv = $('<div class=\"\"></div>')\r\n                    .addClass('jtable-radio-input')\r\n                    .appendTo($containerDiv);\r\n\r\n                var $radioButton = $('<input type=\"radio\" id=\"Edit-' + fieldName + '-' + i + '\" class=\"' + field.inputClass + '\" name=\"' + fieldName + '\"' + ((option.Value == (value + '')) ? ' checked=\"true\"' : '') + ' />')\r\n                    .val(option.Value)\r\n                    .appendTo($radioButtonDiv);\r\n\r\n                var $textSpan = $('<span></span>')\r\n                    .html(option.DisplayText)\r\n                    .appendTo($radioButtonDiv);\r\n\r\n                if (field.setOnTextClick != false) {\r\n                    $textSpan\r\n                        .addClass('jtable-option-text-clickable')\r\n                        .click(function () {\r\n                            if (!$radioButton.is(':checked')) {\r\n                                $radioButton.attr('checked', \"true\");\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n\r\n            return $containerDiv;\r\n        },\r\n\r\n        /* Gets display text for a checkbox field.\r\n        *************************************************************************/\r\n        _getCheckBoxTextForFieldByValue: function (fieldName, value) {\r\n            return this.options.fields[fieldName].values[value];\r\n        },\r\n\r\n        /* Returns true if given field's value must be checked state.\r\n        *************************************************************************/\r\n        _getIsCheckBoxSelectedForFieldByValue: function (fieldName, value) {\r\n            return (this._createCheckBoxStateArrayForFieldWithCaching(fieldName)[1].Value.toString() == value.toString());\r\n        },\r\n\r\n        /* Gets an object for a checkbox field that has Value and DisplayText\r\n        *  properties.\r\n        *************************************************************************/\r\n        _getCheckBoxPropertiesForFieldByState: function (fieldName, checked) {\r\n            return this._createCheckBoxStateArrayForFieldWithCaching(fieldName)[(checked ? 1 : 0)];\r\n        },\r\n\r\n        /* Calls _createCheckBoxStateArrayForField with caching.\r\n        *************************************************************************/\r\n        _createCheckBoxStateArrayForFieldWithCaching: function (fieldName) {\r\n            var cacheKey = 'checkbox_' + fieldName;\r\n            if (!this._cache[cacheKey]) {\r\n\r\n                this._cache[cacheKey] = this._createCheckBoxStateArrayForField(fieldName);\r\n            }\r\n\r\n            return this._cache[cacheKey];\r\n        },\r\n\r\n        /* Creates a two element array of objects for states of a checkbox field.\r\n        *  First element for unchecked state, second for checked state.\r\n        *  Each object has two properties: Value and DisplayText\r\n        *************************************************************************/\r\n        _createCheckBoxStateArrayForField: function (fieldName) {\r\n            var stateArray = [];\r\n            var currentIndex = 0;\r\n            $.each(this.options.fields[fieldName].values, function (propName, propValue) {\r\n                if (currentIndex++ < 2) {\r\n                    stateArray.push({ 'Value': propName, 'DisplayText': propValue });\r\n                }\r\n            });\r\n\r\n            return stateArray;\r\n        },\r\n\r\n        /* Searches a form for dependend dropdowns and makes them cascaded.\r\n        */\r\n        _makeCascadeDropDowns: function ($form, record, source) {\r\n            var self = this;\r\n\r\n            $form.find('select') //for each combobox\r\n                .each(function () {\r\n                    var $thisDropdown = $(this);\r\n\r\n                    //get field name\r\n                    var fieldName = $thisDropdown.attr('name');\r\n                    if (!fieldName) {\r\n                        return;\r\n                    }\r\n\r\n                    var field = self.options.fields[fieldName];\r\n                    \r\n                    //check if this combobox depends on others\r\n                    if (!field.dependsOn) {\r\n                        return;\r\n                    }\r\n\r\n                    //for each dependency\r\n                    $.each(field.dependsOn, function (index, dependsOnField) {\r\n                        //find the depended combobox\r\n                        var $dependsOnDropdown = $form.find('select[name=' + dependsOnField + ']');\r\n                        //when depended combobox changes\r\n                        $dependsOnDropdown.change(function () {\r\n\r\n                            //Refresh options\r\n                            var funcParams = {\r\n                                record: record,\r\n                                source: source,\r\n                                form: $form,\r\n                                dependedValues: {}\r\n                            };\r\n                            funcParams.dependedValues = self._createDependedValuesUsingForm($form, field.dependsOn);\r\n                            var options = self._getOptionsForField(fieldName, funcParams);\r\n\r\n                            //Fill combobox with new options\r\n                            self._fillDropDownListWithOptions($thisDropdown, options, undefined);\r\n\r\n                            //Thigger change event to refresh multi cascade dropdowns.\r\n                            $thisDropdown.change();\r\n                        });\r\n                    });\r\n                });\r\n        },\r\n\r\n        /* Updates values of a record from given form\r\n        *************************************************************************/\r\n        _updateRecordValuesFromForm: function (record, $form) {\r\n            for (var i = 0; i < this._fieldList.length; i++) {\r\n                var fieldName = this._fieldList[i];\r\n                var field = this.options.fields[fieldName];\r\n\r\n                //Do not update non-editable fields\r\n                if (field.edit == false) {\r\n                    continue;\r\n                }\r\n\r\n                //Get field name and the input element of this field in the form\r\n                var $inputElement = $form.find('[name=\"' + fieldName + '\"]');\r\n                if ($inputElement.length <= 0) {\r\n                    continue;\r\n                }\r\n\r\n                //Update field in record according to it's type\r\n                if (field.type == 'date') {\r\n                    var dateVal = $inputElement.val();\r\n                    if (dateVal) {\r\n                        var displayFormat = field.displayFormat || this.options.defaultDateFormat;\r\n                        try {\r\n                            var date = $.datepicker.parseDate(displayFormat, dateVal);\r\n                            record[fieldName] = '/Date(' + date.getTime() + ')/';\r\n                        } catch (e) {\r\n                            //TODO: Handle incorrect/different date formats\r\n                            this._logWarn('Date format is incorrect for field ' + fieldName + ': ' + dateVal);\r\n                            record[fieldName] = undefined;\r\n                        }\r\n                    } else {\r\n                        this._logDebug('Date is empty for ' + fieldName);\r\n                        record[fieldName] = undefined; //TODO: undefined, null or empty string?\r\n                    }\r\n                } else if (field.options && field.type == 'radiobutton') {\r\n                    var $checkedElement = $inputElement.filter(':checked');\r\n                    if ($checkedElement.length) {\r\n                        record[fieldName] = $checkedElement.val();\r\n                    } else {\r\n                        record[fieldName] = undefined;\r\n                    }\r\n                } else {\r\n                    record[fieldName] = $inputElement.val();\r\n                }\r\n            }\r\n        },\r\n\r\n        /* Sets enabled/disabled state of a dialog button.\r\n        *************************************************************************/\r\n        _setEnabledOfDialogButton: function ($button, enabled, buttonText) {\r\n            if (!$button) {\r\n                return;\r\n            }\r\n\r\n            if (enabled != false) {\r\n                $button\r\n                    .removeAttr('disabled')\r\n                    .removeClass('ui-state-disabled');\r\n            } else {\r\n                $button\r\n                    .attr('disabled', 'disabled')\r\n                    .addClass('ui-state-disabled');\r\n            }\r\n\r\n            if (buttonText) {\r\n                $button\r\n                    .find('span')\r\n                    .text(buttonText);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* CREATE RECORD extension for jTable                                    *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        _create: $.hik.jtable.prototype._create\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n\r\n            //Events\r\n            recordAdded: function (event, data) { },\r\n\r\n            //Localization\r\n            messages: {\r\n                addNewRecord: 'Add new record'\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _$addRecordDiv: null, //Reference to the adding new record dialog div (jQuery object)\r\n\r\n        /************************************************************************\r\n        * CONSTRUCTOR                                                           *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to do create-specific constructions.\r\n        *************************************************************************/\r\n        _create: function () {\r\n            base._create.apply(this, arguments);\r\n\r\n            if (!this.options.actions.createAction) {\r\n                return;\r\n            }\r\n\r\n            this._createAddRecordDialogDiv();\r\n        },\r\n\r\n        /* Creates and prepares add new record dialog div\r\n        *************************************************************************/\r\n        _createAddRecordDialogDiv: function () {\r\n            var self = this;\r\n\r\n            //Create a div for dialog and add to container element\r\n            self._$addRecordDiv = $('<div />')\r\n                .appendTo(self._$mainContainer);\r\n\r\n            //Prepare dialog\r\n            self._$addRecordDiv.dialog({\r\n                autoOpen: false,\r\n                show: self.options.dialogShowEffect,\r\n                hide: self.options.dialogHideEffect,\r\n                width: 'auto',\r\n                minWidth: '300',\r\n                modal: true,\r\n                title: self.options.messages.addNewRecord,\r\n                buttons:\r\n                        [{ //Cancel button\r\n                            text: self.options.messages.cancel,\r\n                            click: function () {\r\n                                self._$addRecordDiv.dialog('close');\r\n                            }\r\n                        }, { //Save button\r\n                            id: 'AddRecordDialogSaveButton',\r\n                            text: self.options.messages.save,\r\n                            click: function () {\r\n                                self._onSaveClickedOnCreateForm();\r\n                            }\r\n                        }],\r\n                close: function () {\r\n                    var $addRecordForm = self._$addRecordDiv.find('form').first();\r\n                    var $saveButton = self._$addRecordDiv.parent().find('#AddRecordDialogSaveButton');\r\n                    self._trigger(\"formClosed\", null, { form: $addRecordForm, formType: 'create' });\r\n                    self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    $addRecordForm.remove();\r\n                }\r\n            });\r\n\r\n            if (self.options.addRecordButton) {\r\n                //If user supplied a button, bind the click event to show dialog form\r\n                self.options.addRecordButton.click(function (e) {\r\n                    e.preventDefault();\r\n                    self._showAddRecordForm();\r\n                });\r\n            } else {\r\n                //If user did not supplied a button, create a 'add record button' toolbar item.\r\n                self._addToolBarItem({\r\n                    icon: true,\r\n                    cssClass: 'jtable-toolbar-item-add-record',\r\n                    text: self.options.messages.addNewRecord,\r\n                    click: function () {\r\n                        self._showAddRecordForm();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _onSaveClickedOnCreateForm: function () {\r\n            var self = this;\r\n\r\n            var $saveButton = self._$addRecordDiv.parent().find('#AddRecordDialogSaveButton');\r\n            var $addRecordForm = self._$addRecordDiv.find('form');\r\n\r\n            if (self._trigger(\"formSubmitting\", null, { form: $addRecordForm, formType: 'create' }) != false) {\r\n                self._setEnabledOfDialogButton($saveButton, false, self.options.messages.saving);\r\n                self._saveAddRecordForm($addRecordForm, $saveButton);\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PUBLIC METHODS                                                        *\r\n        *************************************************************************/\r\n\r\n        /* Shows add new record dialog form.\r\n        *************************************************************************/\r\n        showCreateForm: function () {\r\n            this._showAddRecordForm();\r\n        },\r\n\r\n        /* Adds a new record to the table (optionally to the server also)\r\n        *************************************************************************/\r\n        addRecord: function (options) {\r\n            var self = this;\r\n            options = $.extend({\r\n                clientOnly: false,\r\n                animationsEnabled: self.options.animationsEnabled,\r\n                success: function () { },\r\n                error: function () { }\r\n            }, options);\r\n\r\n            if (!options.record) {\r\n                self._logWarn('options parameter in addRecord method must contain a record property.');\r\n                return;\r\n            }\r\n\r\n            if (options.clientOnly) {\r\n                self._addRow(\r\n                    self._createRowFromRecord(options.record), {\r\n                        isNewRow: true,\r\n                        animationsEnabled: options.animationsEnabled\r\n                    });\r\n\r\n                options.success();\r\n                return;\r\n            }\r\n\r\n            var completeAddRecord = function (data) {\r\n                if (data.Result != 'OK') {\r\n                    self._showError(data.Message);\r\n                    options.error(data);\r\n                    return;\r\n                }\r\n\r\n                if (!data.Record) {\r\n                    self._logError('Server must return the created Record object.');\r\n                    options.error(data);\r\n                    return;\r\n                }\r\n\r\n                self._onRecordAdded(data);\r\n                self._addRow(\r\n                    self._createRowFromRecord(data.Record), {\r\n                        isNewRow: true,\r\n                        animationsEnabled: options.animationsEnabled\r\n                    });\r\n\r\n                options.success(data);\r\n            };\r\n\r\n            //createAction may be a function, check if it is\r\n            if (!options.url && $.isFunction(self.options.actions.createAction)) {\r\n\r\n                //Execute the function\r\n                var funcResult = self.options.actions.createAction($.param(options.record));\r\n\r\n                //Check if result is a jQuery Deferred object\r\n                if (self._isDeferredObject(funcResult)) {\r\n                    //Wait promise\r\n                    funcResult.done(function (data) {\r\n                        completeAddRecord(data);\r\n                    }).fail(function () {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        options.error();\r\n                    });\r\n                } else { //assume it returned the creation result\r\n                    completeAddRecord(funcResult);\r\n                }\r\n\r\n            } else { //Assume it's a URL string\r\n\r\n                //Make an Ajax call to create record\r\n                self._submitFormUsingAjax(\r\n                    options.url || self.options.actions.createAction,\r\n                    $.param(options.record),\r\n                    function (data) {\r\n                        completeAddRecord(data);\r\n                    },\r\n                    function () {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        options.error();\r\n                    });\r\n\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Shows add new record dialog form.\r\n        *************************************************************************/\r\n        _showAddRecordForm: function () {\r\n            var self = this;\r\n\r\n            //Create add new record form\r\n            var $addRecordForm = $('<form id=\"jtable-create-form\" class=\"jtable-dialog-form jtable-create-form\"></form>');\r\n\r\n            //Create input elements\r\n            for (var i = 0; i < self._fieldList.length; i++) {\r\n\r\n                var fieldName = self._fieldList[i];\r\n                var field = self.options.fields[fieldName];\r\n\r\n                //Do not create input for fields that is key and not specially marked as creatable\r\n                if (field.key == true && field.create != true) {\r\n                    continue;\r\n                }\r\n\r\n                //Do not create input for fields that are not creatable\r\n                if (field.create == false) {\r\n                    continue;\r\n                }\r\n\r\n                if (field.type == 'hidden') {\r\n                    $addRecordForm.append(self._createInputForHidden(fieldName, field.defaultValue));\r\n                    continue;\r\n                }\r\n\r\n                //Create a container div for this input field and add to form\r\n                var $fieldContainer = $('<div />')\r\n                    .addClass('jtable-input-field-container')\r\n                    .appendTo($addRecordForm);\r\n\r\n                //Create a label for input\r\n                $fieldContainer.append(self._createInputLabelForRecordField(fieldName));\r\n\r\n                //Create input element\r\n                $fieldContainer.append(\r\n                    self._createInputForRecordField({\r\n                        fieldName: fieldName,\r\n                        formType: 'create',\r\n                        form: $addRecordForm\r\n                    }));\r\n            }\r\n\r\n            self._makeCascadeDropDowns($addRecordForm, undefined, 'create');\r\n\r\n            $addRecordForm.submit(function () {\r\n                self._onSaveClickedOnCreateForm();\r\n                return false;\r\n            });\r\n\r\n            //Open the form\r\n            self._$addRecordDiv.append($addRecordForm).dialog('open');\r\n            self._trigger(\"formCreated\", null, { form: $addRecordForm, formType: 'create' });\r\n        },\r\n\r\n        /* Saves new added record to the server and updates table.\r\n        *************************************************************************/\r\n        _saveAddRecordForm: function ($addRecordForm, $saveButton) {\r\n            var self = this;\r\n\r\n            var completeAddRecord = function (data) {\r\n                if (data.Result != 'OK') {\r\n                    self._showError(data.Message);\r\n                    self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    return;\r\n                }\r\n\r\n                if (!data.Record) {\r\n                    self._logError('Server must return the created Record object.');\r\n                    self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    return;\r\n                }\r\n\r\n                self._onRecordAdded(data);\r\n                self._addRow(\r\n                    self._createRowFromRecord(data.Record), {\r\n                        isNewRow: true\r\n                    });\r\n                self._$addRecordDiv.dialog(\"close\");\r\n            };\r\n\r\n            $addRecordForm.data('submitting', true); //TODO: Why it's used, can remove? Check it.\r\n\r\n            //createAction may be a function, check if it is\r\n            if ($.isFunction(self.options.actions.createAction)) {\r\n\r\n                //Execute the function\r\n                var funcResult = self.options.actions.createAction($addRecordForm.serialize());\r\n\r\n                //Check if result is a jQuery Deferred object\r\n                if (self._isDeferredObject(funcResult)) {\r\n                    //Wait promise\r\n                    funcResult.done(function (data) {\r\n                        completeAddRecord(data);\r\n                    }).fail(function () {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    });\r\n                } else { //assume it returned the creation result\r\n                    completeAddRecord(funcResult);\r\n                }\r\n\r\n            } else { //Assume it's a URL string\r\n\r\n                //Make an Ajax call to create record\r\n                self._submitFormUsingAjax(\r\n                    self.options.actions.createAction,\r\n                    $addRecordForm.serialize(),\r\n                    function (data) {\r\n                        completeAddRecord(data);\r\n                    },\r\n                    function () {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    });\r\n            }\r\n        },\r\n\r\n        _onRecordAdded: function (data) {\r\n            this._trigger(\"recordAdded\", null, { record: data.Record, serverResponse: data });\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* EDIT RECORD extension for jTable                                      *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        _create: $.hik.jtable.prototype._create,\r\n        _addColumnsToHeaderRow: $.hik.jtable.prototype._addColumnsToHeaderRow,\r\n        _addCellsToRowUsingRecord: $.hik.jtable.prototype._addCellsToRowUsingRecord\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n\r\n            //Events\r\n            recordUpdated: function (event, data) { },\r\n            rowUpdated: function (event, data) { },\r\n\r\n            //Localization\r\n            messages: {\r\n                editRecord: 'Edit Record'\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _$editDiv: null, //Reference to the editing dialog div (jQuery object)\r\n        _$editingRow: null, //Reference to currently editing row (jQuery object)\r\n\r\n        /************************************************************************\r\n        * CONSTRUCTOR AND INITIALIZATION METHODS                                *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to do editing-specific constructions.\r\n        *************************************************************************/\r\n        _create: function () {\r\n            base._create.apply(this, arguments);\r\n            \r\n            if (!this.options.actions.updateAction) {\r\n                return;\r\n            }\r\n            \r\n            this._createEditDialogDiv();\r\n        },\r\n\r\n        /* Creates and prepares edit dialog div\r\n        *************************************************************************/\r\n        _createEditDialogDiv: function () {\r\n            var self = this;\r\n\r\n            //Create a div for dialog and add to container element\r\n            self._$editDiv = $('<div></div>')\r\n                .appendTo(self._$mainContainer);\r\n\r\n            //Prepare dialog\r\n            self._$editDiv.dialog({\r\n                autoOpen: false,\r\n                show: self.options.dialogShowEffect,\r\n                hide: self.options.dialogHideEffect,\r\n                width: 'auto',\r\n                minWidth: '300',\r\n                modal: true,\r\n                title: self.options.messages.editRecord,\r\n                buttons:\r\n                        [{  //cancel button\r\n                            text: self.options.messages.cancel,\r\n                            click: function () {\r\n                                self._$editDiv.dialog('close');\r\n                            }\r\n                        }, { //save button\r\n                            id: 'EditDialogSaveButton',\r\n                            text: self.options.messages.save,\r\n                            click: function () {\r\n                                self._onSaveClickedOnEditForm();\r\n                            }\r\n                        }],\r\n                close: function () {\r\n                    var $editForm = self._$editDiv.find('form:first');\r\n                    var $saveButton = self._$editDiv.parent().find('#EditDialogSaveButton');\r\n                    self._trigger(\"formClosed\", null, { form: $editForm, formType: 'edit', row: self._$editingRow });\r\n                    self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    $editForm.remove();\r\n                }\r\n            });\r\n        },\r\n\r\n        /* Saves editing form to server.\r\n        *************************************************************************/\r\n        _onSaveClickedOnEditForm: function () {\r\n            var self = this;\r\n            \r\n            //row maybe removed by another source, if so, do nothing\r\n            if (self._$editingRow.hasClass('jtable-row-removed')) {\r\n                self._$editDiv.dialog('close');\r\n                return;\r\n            }\r\n\r\n            var $saveButton = self._$editDiv.parent().find('#EditDialogSaveButton');\r\n            var $editForm = self._$editDiv.find('form');\r\n            if (self._trigger(\"formSubmitting\", null, { form: $editForm, formType: 'edit', row: self._$editingRow }) != false) {\r\n                self._setEnabledOfDialogButton($saveButton, false, self.options.messages.saving);\r\n                self._saveEditForm($editForm, $saveButton);\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PUBLIC METHODS                                                        *\r\n        *************************************************************************/\r\n\r\n        /* Updates a record on the table (optionally on the server also)\r\n        *************************************************************************/\r\n        updateRecord: function (options) {\r\n            var self = this;\r\n            options = $.extend({\r\n                clientOnly: false,\r\n                animationsEnabled: self.options.animationsEnabled,\r\n                success: function () { },\r\n                error: function () { }\r\n            }, options);\r\n\r\n            if (!options.record) {\r\n                self._logWarn('options parameter in updateRecord method must contain a record property.');\r\n                return;\r\n            }\r\n\r\n            var key = self._getKeyValueOfRecord(options.record);\r\n            if (key == undefined || key == null) {\r\n                self._logWarn('options parameter in updateRecord method must contain a record that contains the key field property.');\r\n                return;\r\n            }\r\n\r\n            var $updatingRow = self.getRowByKey(key);\r\n            if ($updatingRow == null) {\r\n                self._logWarn('Can not found any row by key \"' + key + '\" on the table. Updating row must be visible on the table.');\r\n                return;\r\n            }\r\n\r\n            if (options.clientOnly) {\r\n                $.extend($updatingRow.data('record'), options.record);\r\n                self._updateRowTexts($updatingRow);\r\n                self._onRecordUpdated($updatingRow, null);\r\n                if (options.animationsEnabled) {\r\n                    self._showUpdateAnimationForRow($updatingRow);\r\n                }\r\n\r\n                options.success();\r\n                return;\r\n            }\r\n\r\n            var completeEdit = function (data) {\r\n                if (data.Result != 'OK') {\r\n                    self._showError(data.Message);\r\n                    options.error(data);\r\n                    return;\r\n                }\r\n\r\n                $.extend($updatingRow.data('record'), options.record);\r\n                self._updateRecordValuesFromServerResponse($updatingRow.data('record'), data);\r\n\r\n                self._updateRowTexts($updatingRow);\r\n                self._onRecordUpdated($updatingRow, data);\r\n                if (options.animationsEnabled) {\r\n                    self._showUpdateAnimationForRow($updatingRow);\r\n                }\r\n\r\n                options.success(data);\r\n            };\r\n\r\n            //updateAction may be a function, check if it is\r\n            if (!options.url && $.isFunction(self.options.actions.updateAction)) {\r\n\r\n                //Execute the function\r\n                var funcResult = self.options.actions.updateAction($.param(options.record));\r\n\r\n                //Check if result is a jQuery Deferred object\r\n                if (self._isDeferredObject(funcResult)) {\r\n                    //Wait promise\r\n                    funcResult.done(function (data) {\r\n                        completeEdit(data);\r\n                    }).fail(function () {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        options.error();\r\n                    });\r\n                } else { //assume it returned the creation result\r\n                    completeEdit(funcResult);\r\n                }\r\n\r\n            } else { //Assume it's a URL string\r\n\r\n                //Make an Ajax call to create record\r\n                self._submitFormUsingAjax(\r\n                    options.url || self.options.actions.updateAction,\r\n                    $.param(options.record),\r\n                    function (data) {\r\n                        completeEdit(data);\r\n                    },\r\n                    function () {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        options.error();\r\n                    });\r\n\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * OVERRIDED METHODS                                                     *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to add a 'editing column cell' to header row.\r\n        *************************************************************************/\r\n        _addColumnsToHeaderRow: function ($tr) {\r\n            base._addColumnsToHeaderRow.apply(this, arguments);\r\n            if (this.options.actions.updateAction != undefined) {\r\n                $tr.append(this._createEmptyCommandHeader());\r\n            }\r\n        },\r\n\r\n        /* Overrides base method to add a 'edit command cell' to a row.\r\n        *************************************************************************/\r\n        _addCellsToRowUsingRecord: function ($row) {\r\n            var self = this;\r\n            base._addCellsToRowUsingRecord.apply(this, arguments);\r\n\r\n            if (self.options.actions.updateAction != undefined) {\r\n                var $span = $('<span></span>').html(self.options.messages.editRecord);\r\n                var $button = $('<button title=\"' + self.options.messages.editRecord + '\"></button>')\r\n                    .addClass('jtable-command-button jtable-edit-command-button')\r\n                    .append($span)\r\n                    .click(function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        self._showEditForm($row);\r\n                    });\r\n                $('<td></td>')\r\n                    .addClass('jtable-command-column')\r\n                    .append($button)\r\n                    .appendTo($row);\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Shows edit form for a row.\r\n        *************************************************************************/\r\n        _showEditForm: function ($tableRow) {\r\n            var self = this;\r\n            var record = $tableRow.data('record');\r\n\r\n            //Create edit form\r\n            var $editForm = $('<form id=\"jtable-edit-form\" class=\"jtable-dialog-form jtable-edit-form\"></form>');\r\n\r\n            //Create input fields\r\n            for (var i = 0; i < self._fieldList.length; i++) {\r\n\r\n                var fieldName = self._fieldList[i];\r\n                var field = self.options.fields[fieldName];\r\n                var fieldValue = record[fieldName];\r\n\r\n                if (field.key == true) {\r\n                    if (field.edit != true) {\r\n                        //Create hidden field for key\r\n                        $editForm.append(self._createInputForHidden(fieldName, fieldValue));\r\n                        continue;\r\n                    } else {\r\n                        //Create a special hidden field for key (since key is be editable)\r\n                        $editForm.append(self._createInputForHidden('jtRecordKey', fieldValue));\r\n                    }\r\n                }\r\n\r\n                //Do not create element for non-editable fields\r\n                if (field.edit == false) {\r\n                    continue;\r\n                }\r\n\r\n                //Hidden field\r\n                if (field.type == 'hidden') {\r\n                    $editForm.append(self._createInputForHidden(fieldName, fieldValue));\r\n                    continue;\r\n                }\r\n\r\n                //Create a container div for this input field and add to form\r\n                var $fieldContainer = $('<div class=\"jtable-input-field-container\"></div>').appendTo($editForm);\r\n\r\n                //Create a label for input\r\n                $fieldContainer.append(self._createInputLabelForRecordField(fieldName));\r\n\r\n                //Create input element with it's current value\r\n                var currentValue = self._getValueForRecordField(record, fieldName);\r\n                $fieldContainer.append(\r\n                    self._createInputForRecordField({\r\n                        fieldName: fieldName,\r\n                        value: currentValue,\r\n                        record: record,\r\n                        formType: 'edit',\r\n                        form: $editForm\r\n                    }));\r\n            }\r\n            \r\n            self._makeCascadeDropDowns($editForm, record, 'edit');\r\n\r\n            $editForm.submit(function () {\r\n                self._onSaveClickedOnEditForm();\r\n                return false;\r\n            });\r\n\r\n            //Open dialog\r\n            self._$editingRow = $tableRow;\r\n            self._$editDiv.append($editForm).dialog('open');\r\n            self._trigger(\"formCreated\", null, { form: $editForm, formType: 'edit', record: record, row: $tableRow });\r\n        },\r\n\r\n        /* Saves editing form to the server and updates the record on the table.\r\n        *************************************************************************/\r\n        _saveEditForm: function ($editForm, $saveButton) {\r\n            var self = this;\r\n            \r\n            var completeEdit = function (data) {\r\n                if (data.Result != 'OK') {\r\n                    self._showError(data.Message);\r\n                    self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    return;\r\n                }\r\n\r\n                var record = self._$editingRow.data('record');\r\n\r\n                self._updateRecordValuesFromForm(record, $editForm);\r\n                self._updateRecordValuesFromServerResponse(record, data);\r\n                self._updateRowTexts(self._$editingRow);\r\n\r\n                self._$editingRow.attr('data-record-key', self._getKeyValueOfRecord(record));\r\n\r\n                self._onRecordUpdated(self._$editingRow, data);\r\n\r\n                if (self.options.animationsEnabled) {\r\n                    self._showUpdateAnimationForRow(self._$editingRow);\r\n                }\r\n\r\n                self._$editDiv.dialog(\"close\");\r\n            };\r\n\r\n\r\n            //updateAction may be a function, check if it is\r\n            if ($.isFunction(self.options.actions.updateAction)) {\r\n\r\n                //Execute the function\r\n                var funcResult = self.options.actions.updateAction($editForm.serialize());\r\n\r\n                //Check if result is a jQuery Deferred object\r\n                if (self._isDeferredObject(funcResult)) {\r\n                    //Wait promise\r\n                    funcResult.done(function (data) {\r\n                        completeEdit(data);\r\n                    }).fail(function () {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    });\r\n                } else { //assume it returned the creation result\r\n                    completeEdit(funcResult);\r\n                }\r\n\r\n            } else { //Assume it's a URL string\r\n\r\n                //Make an Ajax call to update record\r\n                self._submitFormUsingAjax(\r\n                    self.options.actions.updateAction,\r\n                    $editForm.serialize(),\r\n                    function(data) {\r\n                        completeEdit(data);\r\n                    },\r\n                    function() {\r\n                        self._showError(self.options.messages.serverCommunicationError);\r\n                        self._setEnabledOfDialogButton($saveButton, true, self.options.messages.save);\r\n                    });\r\n            }\r\n\r\n        },\r\n\r\n        /* This method ensures updating of current record with server response,\r\n        * if server sends a Record object as response to updateAction.\r\n        *************************************************************************/\r\n        _updateRecordValuesFromServerResponse: function (record, serverResponse) {\r\n            if (!serverResponse || !serverResponse.Record) {\r\n                return;\r\n            }\r\n\r\n            $.extend(true, record, serverResponse.Record);\r\n        },\r\n\r\n        /* Gets text for a field of a record according to it's type.\r\n        *************************************************************************/\r\n        _getValueForRecordField: function (record, fieldName) {\r\n            var field = this.options.fields[fieldName];\r\n            var fieldValue = record[fieldName];\r\n            if (field.type == 'date') {\r\n                return this._getDisplayTextForDateRecordField(field, fieldValue);\r\n            } else {\r\n                return fieldValue;\r\n            }\r\n        },\r\n\r\n        /* Updates cells of a table row's text values from row's record values.\r\n        *************************************************************************/\r\n        _updateRowTexts: function ($tableRow) {\r\n            var record = $tableRow.data('record');\r\n            var $columns = $tableRow.find('td');\r\n            for (var i = 0; i < this._columnList.length; i++) {\r\n                var displayItem = this._getDisplayTextForRecordField(record, this._columnList[i]);\r\n                if ((displayItem != \"\") && (displayItem == 0)) displayItem = \"0\";\r\n                $columns.eq(this._firstDataColumnOffset + i).html(displayItem || '');\r\n            }\r\n\r\n            this._onRowUpdated($tableRow);\r\n        },\r\n\r\n        /* Shows 'updated' animation for a table row.\r\n        *************************************************************************/\r\n        _showUpdateAnimationForRow: function ($tableRow) {\r\n            var className = 'jtable-row-updated';\r\n            if (this.options.jqueryuiTheme) {\r\n                className = className + ' ui-state-highlight';\r\n            }\r\n\r\n            $tableRow.stop(true, true).addClass(className, 'slow', '', function () {\r\n                $tableRow.removeClass(className, 5000);\r\n            });\r\n        },\r\n\r\n        /************************************************************************\r\n        * EVENT RAISING METHODS                                                 *\r\n        *************************************************************************/\r\n\r\n        _onRowUpdated: function ($row) {\r\n            this._trigger(\"rowUpdated\", null, { row: $row, record: $row.data('record') });\r\n        },\r\n\r\n        _onRecordUpdated: function ($row, data) {\r\n            this._trigger(\"recordUpdated\", null, { record: $row.data('record'), row: $row, serverResponse: data });\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* DELETION extension for jTable                                         *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        _create: $.hik.jtable.prototype._create,\r\n        _addColumnsToHeaderRow: $.hik.jtable.prototype._addColumnsToHeaderRow,\r\n        _addCellsToRowUsingRecord: $.hik.jtable.prototype._addCellsToRowUsingRecord\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n\r\n            //Options\r\n            deleteConfirmation: true,\r\n\r\n            //Events\r\n            recordDeleted: function (event, data) { },\r\n\r\n            //Localization\r\n            messages: {\r\n                deleteConfirmation: 'This record will be deleted. Are you sure?',\r\n                deleteText: 'Delete',\r\n                deleting: 'Deleting',\r\n                canNotDeletedRecords: 'Can not delete {0} of {1} records!',\r\n                deleteProggress: 'Deleting {0} of {1} records, processing...'\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _$deleteRecordDiv: null, //Reference to the adding new record dialog div (jQuery object)\r\n        _$deletingRow: null, //Reference to currently deleting row (jQuery object)\r\n\r\n        /************************************************************************\r\n        * CONSTRUCTOR                                                           *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to do deletion-specific constructions.\r\n        *************************************************************************/\r\n        _create: function () {\r\n            base._create.apply(this, arguments);\r\n            this._createDeleteDialogDiv();\r\n        },\r\n\r\n        /* Creates and prepares delete record confirmation dialog div.\r\n        *************************************************************************/\r\n        _createDeleteDialogDiv: function () {\r\n            var self = this;\r\n\r\n            //Check if deleteAction is supplied\r\n            if (!self.options.actions.deleteAction) {\r\n                return;\r\n            }\r\n\r\n            //Create div element for delete confirmation dialog\r\n            self._$deleteRecordDiv = $('<div><p><span class=\"ui-icon ui-icon-alert\" style=\"float:left; margin:0 7px 20px 0;\"></span><span class=\"jtable-delete-confirm-message\"></span></p></div>').appendTo(self._$mainContainer);\r\n\r\n            //Prepare dialog\r\n            self._$deleteRecordDiv.dialog({\r\n                autoOpen: false,\r\n                show: self.options.dialogShowEffect,\r\n                hide: self.options.dialogHideEffect,\r\n                modal: true,\r\n                title: self.options.messages.areYouSure,\r\n                buttons:\r\n                        [{  //cancel button\r\n                            text: self.options.messages.cancel,\r\n                            click: function () {\r\n                                self._$deleteRecordDiv.dialog(\"close\");\r\n                            }\r\n                        }, {//delete button\r\n                            id: 'DeleteDialogButton',\r\n                            text: self.options.messages.deleteText,\r\n                            click: function () {\r\n\r\n                                //row maybe removed by another source, if so, do nothing\r\n                                if (self._$deletingRow.hasClass('jtable-row-removed')) {\r\n                                    self._$deleteRecordDiv.dialog('close');\r\n                                    return;\r\n                                }\r\n\r\n                                var $deleteButton = self._$deleteRecordDiv.parent().find('#DeleteDialogButton');\r\n                                self._setEnabledOfDialogButton($deleteButton, false, self.options.messages.deleting);\r\n                                self._deleteRecordFromServer(\r\n                                    self._$deletingRow,\r\n                                    function () {\r\n                                        self._removeRowsFromTableWithAnimation(self._$deletingRow);\r\n                                        self._$deleteRecordDiv.dialog('close');\r\n                                    },\r\n                                    function (message) { //error\r\n                                        self._showError(message);\r\n                                        self._setEnabledOfDialogButton($deleteButton, true, self.options.messages.deleteText);\r\n                                    }\r\n                                );\r\n                            }\r\n                        }],\r\n                close: function () {\r\n                    var $deleteButton = self._$deleteRecordDiv.parent().find('#DeleteDialogButton');\r\n                    self._setEnabledOfDialogButton($deleteButton, true, self.options.messages.deleteText);\r\n                }\r\n            });\r\n        },\r\n\r\n        /************************************************************************\r\n        * PUBLIC METHODS                                                        *\r\n        *************************************************************************/\r\n\r\n        /* This method is used to delete one or more rows from server and the table.\r\n        *************************************************************************/\r\n        deleteRows: function ($rows) {\r\n            var self = this;\r\n\r\n            if ($rows.length <= 0) {\r\n                self._logWarn('No rows specified to jTable deleteRows method.');\r\n                return;\r\n            }\r\n\r\n            if (self._isBusy()) {\r\n                self._logWarn('Can not delete rows since jTable is busy!');\r\n                return;\r\n            }\r\n\r\n            //Deleting just one row\r\n            if ($rows.length == 1) {\r\n                self._deleteRecordFromServer(\r\n                    $rows,\r\n                    function () { //success\r\n                        self._removeRowsFromTableWithAnimation($rows);\r\n                    },\r\n                    function (message) { //error\r\n                        self._showError(message);\r\n                    }\r\n                );\r\n\r\n                return;\r\n            }\r\n\r\n            //Deleting multiple rows\r\n            self._showBusy(self._formatString(self.options.messages.deleteProggress, 0, $rows.length));\r\n\r\n            //This method checks if deleting of all records is completed\r\n            var completedCount = 0;\r\n            var isCompleted = function () {\r\n                return (completedCount >= $rows.length);\r\n            };\r\n\r\n            //This method is called when deleting of all records completed\r\n            var completed = function () {\r\n                var $deletedRows = $rows.filter('.jtable-row-ready-to-remove');\r\n                if ($deletedRows.length < $rows.length) {\r\n                    self._showError(self._formatString(self.options.messages.canNotDeletedRecords, $rows.length - $deletedRows.length, $rows.length));\r\n                }\r\n\r\n                if ($deletedRows.length > 0) {\r\n                    self._removeRowsFromTableWithAnimation($deletedRows);\r\n                }\r\n\r\n                self._hideBusy();\r\n            };\r\n\r\n            //Delete all rows\r\n            var deletedCount = 0;\r\n            $rows.each(function () {\r\n                var $row = $(this);\r\n                self._deleteRecordFromServer(\r\n                    $row,\r\n                    function () { //success\r\n                        ++deletedCount; ++completedCount;\r\n                        $row.addClass('jtable-row-ready-to-remove');\r\n                        self._showBusy(self._formatString(self.options.messages.deleteProggress, deletedCount, $rows.length));\r\n                        if (isCompleted()) {\r\n                            completed();\r\n                        }\r\n                    },\r\n                    function () { //error\r\n                        ++completedCount;\r\n                        if (isCompleted()) {\r\n                            completed();\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n        },\r\n\r\n        /* Deletes a record from the table (optionally from the server also).\r\n        *************************************************************************/\r\n        deleteRecord: function (options) {\r\n            var self = this;\r\n            options = $.extend({\r\n                clientOnly: false,\r\n                animationsEnabled: self.options.animationsEnabled,\r\n                url: self.options.actions.deleteAction,\r\n                success: function () { },\r\n                error: function () { }\r\n            }, options);\r\n\r\n            if (options.key == undefined) {\r\n                self._logWarn('options parameter in deleteRecord method must contain a key property.');\r\n                return;\r\n            }\r\n\r\n            var $deletingRow = self.getRowByKey(options.key);\r\n            if ($deletingRow == null) {\r\n                self._logWarn('Can not found any row by key: ' + options.key);\r\n                return;\r\n            }\r\n\r\n            if (options.clientOnly) {\r\n                self._removeRowsFromTableWithAnimation($deletingRow, options.animationsEnabled);\r\n                options.success();\r\n                return;\r\n            }\r\n\r\n            self._deleteRecordFromServer(\r\n                    $deletingRow,\r\n                    function (data) { //success\r\n                        self._removeRowsFromTableWithAnimation($deletingRow, options.animationsEnabled);\r\n                        options.success(data);\r\n                    },\r\n                    function (message) { //error\r\n                        self._showError(message);\r\n                        options.error(message);\r\n                    },\r\n                    options.url\r\n                );\r\n        },\r\n\r\n        /************************************************************************\r\n        * OVERRIDED METHODS                                                     *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to add a 'deletion column cell' to header row.\r\n        *************************************************************************/\r\n        _addColumnsToHeaderRow: function ($tr) {\r\n            base._addColumnsToHeaderRow.apply(this, arguments);\r\n            if (this.options.actions.deleteAction != undefined) {\r\n                $tr.append(this._createEmptyCommandHeader());\r\n            }\r\n        },\r\n\r\n        /* Overrides base method to add a 'delete command cell' to a row.\r\n        *************************************************************************/\r\n        _addCellsToRowUsingRecord: function ($row) {\r\n            base._addCellsToRowUsingRecord.apply(this, arguments);\r\n\r\n            var self = this;\r\n            if (self.options.actions.deleteAction != undefined) {\r\n                var $span = $('<span></span>').html(self.options.messages.deleteText);\r\n                var $button = $('<button title=\"' + self.options.messages.deleteText + '\"></button>')\r\n                    .addClass('jtable-command-button jtable-delete-command-button')\r\n                    .append($span)\r\n                    .click(function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        self._deleteButtonClickedForRow($row);\r\n                    });\r\n                $('<td></td>')\r\n                    .addClass('jtable-command-column')\r\n                    .append($button)\r\n                    .appendTo($row);\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* This method is called when user clicks delete button on a row.\r\n        *************************************************************************/\r\n        _deleteButtonClickedForRow: function ($row) {\r\n            var self = this;\r\n\r\n            var deleteConfirm;\r\n            var deleteConfirmMessage = self.options.messages.deleteConfirmation;\r\n\r\n            //If options.deleteConfirmation is function then call it\r\n            if ($.isFunction(self.options.deleteConfirmation)) {\r\n                var data = { row: $row, record: $row.data('record'), deleteConfirm: true, deleteConfirmMessage: deleteConfirmMessage, cancel: false, cancelMessage: null };\r\n                self.options.deleteConfirmation(data);\r\n\r\n                //If delete progress is cancelled\r\n                if (data.cancel) {\r\n\r\n                    //If a canlellation reason is specified\r\n                    if (data.cancelMessage) {\r\n                        self._showError(data.cancelMessage); //TODO: show warning/stop message instead of error (also show warning/error ui icon)!\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                deleteConfirmMessage = data.deleteConfirmMessage;\r\n                deleteConfirm = data.deleteConfirm;\r\n            } else {\r\n                deleteConfirm = self.options.deleteConfirmation;\r\n            }\r\n\r\n            if (deleteConfirm != false) {\r\n                //Confirmation\r\n                self._$deleteRecordDiv.find('.jtable-delete-confirm-message').html(deleteConfirmMessage);\r\n                self._showDeleteDialog($row);\r\n            } else {\r\n                //No confirmation\r\n                self._deleteRecordFromServer(\r\n                    $row,\r\n                    function () { //success\r\n                        self._removeRowsFromTableWithAnimation($row);\r\n                    },\r\n                    function (message) { //error\r\n                        self._showError(message);\r\n                    }\r\n                );\r\n            }\r\n        },\r\n\r\n        /* Shows delete comfirmation dialog.\r\n        *************************************************************************/\r\n        _showDeleteDialog: function ($row) {\r\n            this._$deletingRow = $row;\r\n            this._$deleteRecordDiv.dialog('open');\r\n        },\r\n\r\n        /* Performs an ajax call to server to delete record\r\n        *  and removes row of the record from table if ajax call success.\r\n        *************************************************************************/\r\n        _deleteRecordFromServer: function ($row, success, error, url) {\r\n            var self = this;\r\n\r\n            var completeDelete = function(data) {\r\n                if (data.Result != 'OK') {\r\n                    $row.data('deleting', false);\r\n                    if (error) {\r\n                        error(data.Message);\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                self._trigger(\"recordDeleted\", null, { record: $row.data('record'), row: $row, serverResponse: data });\r\n\r\n                if (success) {\r\n                    success(data);\r\n                }\r\n            };\r\n\r\n            //Check if it is already being deleted right now\r\n            if ($row.data('deleting') == true) {\r\n                return;\r\n            }\r\n\r\n            $row.data('deleting', true);\r\n\r\n            var postData = {};\r\n            postData[self._keyField] = self._getKeyValueOfRecord($row.data('record'));\r\n            \r\n            //deleteAction may be a function, check if it is\r\n            if (!url && $.isFunction(self.options.actions.deleteAction)) {\r\n\r\n                //Execute the function\r\n                var funcResult = self.options.actions.deleteAction(postData);\r\n\r\n                //Check if result is a jQuery Deferred object\r\n                if (self._isDeferredObject(funcResult)) {\r\n                    //Wait promise\r\n                    funcResult.done(function (data) {\r\n                        completeDelete(data);\r\n                    }).fail(function () {\r\n                        $row.data('deleting', false);\r\n                        if (error) {\r\n                            error(self.options.messages.serverCommunicationError);\r\n                        }\r\n                    });\r\n                } else { //assume it returned the deletion result\r\n                    completeDelete(funcResult);\r\n                }\r\n\r\n            } else { //Assume it's a URL string\r\n                //Make ajax call to delete the record from server\r\n                this._ajax({\r\n                    url: (url || self.options.actions.deleteAction),\r\n                    data: postData,\r\n                    success: function (data) {\r\n                        completeDelete(data);\r\n                    },\r\n                    error: function () {\r\n                        $row.data('deleting', false);\r\n                        if (error) {\r\n                            error(self.options.messages.serverCommunicationError);\r\n                        }\r\n                    }\r\n                });\r\n\r\n            }\r\n        },\r\n\r\n        /* Removes a row from table after a 'deleting' animation.\r\n        *************************************************************************/\r\n        _removeRowsFromTableWithAnimation: function ($rows, animationsEnabled) {\r\n            var self = this;\r\n\r\n            if (animationsEnabled == undefined) {\r\n                animationsEnabled = self.options.animationsEnabled;\r\n            }\r\n\r\n            if (animationsEnabled) {\r\n                var className = 'jtable-row-deleting';\r\n                if (this.options.jqueryuiTheme) {\r\n                    className = className + ' ui-state-disabled';\r\n                }\r\n\r\n                //Stop current animation (if does exists) and begin 'deleting' animation.\r\n                $rows.stop(true, true).addClass(className, 'slow', '').promise().done(function () {\r\n                    self._removeRowsFromTable($rows, 'deleted');\r\n                });\r\n            } else {\r\n                self._removeRowsFromTable($rows, 'deleted');\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* SELECTING extension for jTable                                        *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        _create: $.hik.jtable.prototype._create,\r\n        _addColumnsToHeaderRow: $.hik.jtable.prototype._addColumnsToHeaderRow,\r\n        _addCellsToRowUsingRecord: $.hik.jtable.prototype._addCellsToRowUsingRecord,\r\n        _onLoadingRecords: $.hik.jtable.prototype._onLoadingRecords,\r\n        _onRecordsLoaded: $.hik.jtable.prototype._onRecordsLoaded,\r\n        _onRowsRemoved: $.hik.jtable.prototype._onRowsRemoved\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n\r\n            //Options\r\n            selecting: false,\r\n            multiselect: false,\r\n            selectingCheckboxes: false,\r\n            selectOnRowClick: true,\r\n\r\n            //Events\r\n            selectionChanged: function (event, data) { }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _selectedRecordIdsBeforeLoad: null, //This array is used to store selected row Id's to restore them after a page refresh (string array).\r\n        _$selectAllCheckbox: null, //Reference to the 'select/deselect all' checkbox (jQuery object)\r\n        _shiftKeyDown: false, //True, if shift key is currently down.\r\n\r\n        /************************************************************************\r\n        * CONSTRUCTOR                                                           *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to do selecting-specific constructions.\r\n        *************************************************************************/\r\n        _create: function () {\r\n            if (this.options.selecting && this.options.selectingCheckboxes) {\r\n                ++this._firstDataColumnOffset;\r\n                this._bindKeyboardEvents();\r\n            }\r\n\r\n            //Call base method\r\n            base._create.apply(this, arguments);\r\n        },\r\n\r\n        /* Registers to keyboard events those are needed for selection\r\n        *************************************************************************/\r\n        _bindKeyboardEvents: function () {\r\n            var self = this;\r\n            //Register to events to set _shiftKeyDown value\r\n            $(document)\r\n                .keydown(function (event) {\r\n                    switch (event.which) {\r\n                        case 16:\r\n                            self._shiftKeyDown = true;\r\n                            break;\r\n                    }\r\n                })\r\n                .keyup(function (event) {\r\n                    switch (event.which) {\r\n                        case 16:\r\n                            self._shiftKeyDown = false;\r\n                            break;\r\n                    }\r\n                });\r\n        },\r\n\r\n        /************************************************************************\r\n        * PUBLIC METHODS                                                        *\r\n        *************************************************************************/\r\n\r\n        /* Gets jQuery selection for currently selected rows.\r\n        *************************************************************************/\r\n        selectedRows: function () {\r\n            return this._getSelectedRows();\r\n        },\r\n\r\n        /* Makes row/rows 'selected'.\r\n        *************************************************************************/\r\n        selectRows: function ($rows) {\r\n            this._selectRows($rows);\r\n            this._onSelectionChanged(); //TODO: trigger only if selected rows changes?\r\n        },\r\n\r\n        /************************************************************************\r\n        * OVERRIDED METHODS                                                     *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to add a 'select column' to header row.\r\n        *************************************************************************/\r\n        _addColumnsToHeaderRow: function ($tr) {\r\n            if (this.options.selecting && this.options.selectingCheckboxes) {\r\n                if (this.options.multiselect) {\r\n                    $tr.append(this._createSelectAllHeader());\r\n                } else {\r\n                    $tr.append(this._createEmptyCommandHeader());\r\n                }\r\n            }\r\n\r\n            base._addColumnsToHeaderRow.apply(this, arguments);\r\n        },\r\n\r\n        /* Overrides base method to add a 'delete command cell' to a row.\r\n        *************************************************************************/\r\n        _addCellsToRowUsingRecord: function ($row) {\r\n            if (this.options.selecting) {\r\n                this._makeRowSelectable($row);\r\n            }\r\n\r\n            base._addCellsToRowUsingRecord.apply(this, arguments);\r\n        },\r\n\r\n        /* Overrides base event to store selection list\r\n        *************************************************************************/\r\n        _onLoadingRecords: function () {\r\n            if (this.options.selecting) {\r\n                this._storeSelectionList();\r\n            }\r\n\r\n            base._onLoadingRecords.apply(this, arguments);\r\n        },\r\n\r\n        /* Overrides base event to restore selection list\r\n        *************************************************************************/\r\n        _onRecordsLoaded: function () {\r\n            if (this.options.selecting) {\r\n                this._restoreSelectionList();\r\n            }\r\n\r\n            base._onRecordsLoaded.apply(this, arguments);\r\n        },\r\n\r\n        /* Overrides base event to check is any selected row is being removed.\r\n        *************************************************************************/\r\n        _onRowsRemoved: function ($rows, reason) {\r\n            if (this.options.selecting && (reason != 'reloading') && ($rows.filter('.jtable-row-selected').length > 0)) {\r\n                this._onSelectionChanged();\r\n            }\r\n\r\n            base._onRowsRemoved.apply(this, arguments);\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Creates a header column to select/deselect all rows.\r\n        *************************************************************************/\r\n        _createSelectAllHeader: function () {\r\n            var self = this;\r\n\r\n            var $columnHeader = $('<th class=\"\"></th>')\r\n                .addClass('jtable-command-column-header jtable-column-header-selecting');\r\n            this._jqueryuiThemeAddClass($columnHeader, 'ui-state-default');\r\n\r\n            var $headerContainer = $('<div />')\r\n                .addClass('jtable-column-header-container')\r\n                .appendTo($columnHeader);\r\n\r\n            self._$selectAllCheckbox = $('<input type=\"checkbox\" />')\r\n                .appendTo($headerContainer)\r\n                .click(function () {\r\n                    if (self._$tableRows.length <= 0) {\r\n                        self._$selectAllCheckbox.attr('checked', false);\r\n                        return;\r\n                    }\r\n\r\n                    var allRows = self._$tableBody.find('>tr.jtable-data-row');\r\n                    if (self._$selectAllCheckbox.is(':checked')) {\r\n                        self._selectRows(allRows);\r\n                    } else {\r\n                        self._deselectRows(allRows);\r\n                    }\r\n\r\n                    self._onSelectionChanged();\r\n                });\r\n\r\n            return $columnHeader;\r\n        },\r\n\r\n        /* Stores Id's of currently selected records to _selectedRecordIdsBeforeLoad.\r\n        *************************************************************************/\r\n        _storeSelectionList: function () {\r\n            var self = this;\r\n\r\n            if (!self.options.selecting) {\r\n                return;\r\n            }\r\n\r\n            self._selectedRecordIdsBeforeLoad = [];\r\n            self._getSelectedRows().each(function () {\r\n                self._selectedRecordIdsBeforeLoad.push(self._getKeyValueOfRecord($(this).data('record')));\r\n            });\r\n        },\r\n\r\n        /* Selects rows whose Id is in _selectedRecordIdsBeforeLoad;\r\n        *************************************************************************/\r\n        _restoreSelectionList: function () {\r\n            var self = this;\r\n\r\n            if (!self.options.selecting) {\r\n                return;\r\n            }\r\n\r\n            var selectedRowCount = 0;\r\n            for (var i = 0; i < self._$tableRows.length; ++i) {\r\n                var recordId = self._getKeyValueOfRecord(self._$tableRows[i].data('record'));\r\n                if ($.inArray(recordId, self._selectedRecordIdsBeforeLoad) > -1) {\r\n                    self._selectRows(self._$tableRows[i]);\r\n                    ++selectedRowCount;\r\n                }\r\n            }\r\n\r\n            if (self._selectedRecordIdsBeforeLoad.length > 0 && self._selectedRecordIdsBeforeLoad.length != selectedRowCount) {\r\n                self._onSelectionChanged();\r\n            }\r\n\r\n            self._selectedRecordIdsBeforeLoad = [];\r\n            self._refreshSelectAllCheckboxState();\r\n        },\r\n\r\n        /* Gets all selected rows.\r\n        *************************************************************************/\r\n        _getSelectedRows: function () {\r\n            return this._$tableBody\r\n                .find('>tr.jtable-row-selected');\r\n        },\r\n\r\n        /* Adds selectable feature to a row.\r\n        *************************************************************************/\r\n        _makeRowSelectable: function ($row) {\r\n            var self = this;\r\n\r\n            //Select/deselect on row click\r\n            if (self.options.selectOnRowClick) {\r\n                $row.click(function () {\r\n                    self._invertRowSelection($row);\r\n                });\r\n            }\r\n\r\n            //'select/deselect' checkbox column\r\n            if (self.options.selectingCheckboxes) {\r\n                var $cell = $('<td></td>').addClass('jtable-selecting-column');\r\n                var $selectCheckbox = $('<input type=\"checkbox\" />').appendTo($cell);\r\n                if (!self.options.selectOnRowClick) {\r\n                    $selectCheckbox.click(function () {\r\n                        self._invertRowSelection($row);\r\n                    });\r\n                }\r\n\r\n                $row.append($cell);\r\n            }\r\n        },\r\n\r\n        /* Inverts selection state of a single row.\r\n        *************************************************************************/\r\n        _invertRowSelection: function ($row) {\r\n            if ($row.hasClass('jtable-row-selected')) {\r\n                this._deselectRows($row);\r\n            } else {\r\n                //Shift key?\r\n                if (this._shiftKeyDown) {\r\n                    var rowIndex = this._findRowIndex($row);\r\n                    //try to select row and above rows until first selected row\r\n                    var beforeIndex = this._findFirstSelectedRowIndexBeforeIndex(rowIndex) + 1;\r\n                    if (beforeIndex > 0 && beforeIndex < rowIndex) {\r\n                        this._selectRows(this._$tableBody.find('tr').slice(beforeIndex, rowIndex + 1));\r\n                    } else {\r\n                        //try to select row and below rows until first selected row\r\n                        var afterIndex = this._findFirstSelectedRowIndexAfterIndex(rowIndex) - 1;\r\n                        if (afterIndex > rowIndex) {\r\n                            this._selectRows(this._$tableBody.find('tr').slice(rowIndex, afterIndex + 1));\r\n                        } else {\r\n                            //just select this row\r\n                            this._selectRows($row);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._selectRows($row);\r\n                }\r\n            }\r\n\r\n            this._onSelectionChanged();\r\n        },\r\n\r\n        /* Search for a selected row (that is before given row index) to up and returns it's index \r\n        *************************************************************************/\r\n        _findFirstSelectedRowIndexBeforeIndex: function (rowIndex) {\r\n            for (var i = rowIndex - 1; i >= 0; --i) {\r\n                if (this._$tableRows[i].hasClass('jtable-row-selected')) {\r\n                    return i;\r\n                }\r\n            }\r\n\r\n            return -1;\r\n        },\r\n\r\n        /* Search for a selected row (that is after given row index) to down and returns it's index \r\n        *************************************************************************/\r\n        _findFirstSelectedRowIndexAfterIndex: function (rowIndex) {\r\n            for (var i = rowIndex + 1; i < this._$tableRows.length; ++i) {\r\n                if (this._$tableRows[i].hasClass('jtable-row-selected')) {\r\n                    return i;\r\n                }\r\n            }\r\n\r\n            return -1;\r\n        },\r\n\r\n        /* Makes row/rows 'selected'.\r\n        *************************************************************************/\r\n        _selectRows: function ($rows) {\r\n            if (!this.options.multiselect) {\r\n                this._deselectRows(this._getSelectedRows());\r\n            }\r\n\r\n            $rows.addClass('jtable-row-selected');\r\n            this._jqueryuiThemeAddClass($rows, 'ui-state-highlight');\r\n\r\n            if (this.options.selectingCheckboxes) {\r\n                $rows.find('>td.jtable-selecting-column >input').prop('checked', true);\r\n            }\r\n\r\n            this._refreshSelectAllCheckboxState();\r\n        },\r\n\r\n        /* Makes row/rows 'non selected'.\r\n        *************************************************************************/\r\n        _deselectRows: function ($rows) {\r\n            $rows.removeClass('jtable-row-selected ui-state-highlight');\r\n            if (this.options.selectingCheckboxes) {\r\n                $rows.find('>td.jtable-selecting-column >input').prop('checked', false);\r\n            }\r\n\r\n            this._refreshSelectAllCheckboxState();\r\n        },\r\n\r\n        /* Updates state of the 'select/deselect' all checkbox according to count of selected rows.\r\n        *************************************************************************/\r\n        _refreshSelectAllCheckboxState: function () {\r\n            if (!this.options.selectingCheckboxes || !this.options.multiselect) {\r\n                return;\r\n            }\r\n\r\n            var totalRowCount = this._$tableRows.length;\r\n            var selectedRowCount = this._getSelectedRows().length;\r\n\r\n            if (selectedRowCount == 0) {\r\n                this._$selectAllCheckbox.prop('indeterminate', false);\r\n                this._$selectAllCheckbox.attr('checked', false);\r\n            } else if (selectedRowCount == totalRowCount) {\r\n                this._$selectAllCheckbox.prop('indeterminate', false);\r\n                this._$selectAllCheckbox.attr('checked', true);\r\n            } else {\r\n                this._$selectAllCheckbox.attr('checked', false);\r\n                this._$selectAllCheckbox.prop('indeterminate', true);\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * EVENT RAISING METHODS                                                 *\r\n        *************************************************************************/\r\n\r\n        _onSelectionChanged: function () {\r\n            this._trigger(\"selectionChanged\", null, {});\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* PAGING extension for jTable                                           *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        load: $.hik.jtable.prototype.load,\r\n        _create: $.hik.jtable.prototype._create,\r\n        _setOption: $.hik.jtable.prototype._setOption,\r\n        _createRecordLoadUrl: $.hik.jtable.prototype._createRecordLoadUrl,\r\n        _createJtParamsForLoading: $.hik.jtable.prototype._createJtParamsForLoading,\r\n        _addRowToTable: $.hik.jtable.prototype._addRowToTable,\r\n        _addRow: $.hik.jtable.prototype._addRow,\r\n        _removeRowsFromTable: $.hik.jtable.prototype._removeRowsFromTable,\r\n        _onRecordsLoaded: $.hik.jtable.prototype._onRecordsLoaded\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n            paging: false,\r\n            pageList: 'normal', //possible values: 'minimal', 'normal'\r\n            pageSize: 10,\r\n            pageSizes: [10, 25, 50, 100, 250, 500],\r\n            pageSizeChangeArea: true,\r\n            gotoPageArea: 'combobox', //possible values: 'textbox', 'combobox', 'none'\r\n\r\n            messages: {\r\n                pagingInfo: 'Showing {0}-{1} of {2}',\r\n                pageSizeChangeLabel: 'Row count',\r\n                gotoPageLabel: 'Go to page'\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _$bottomPanel: null, //Reference to the panel at the bottom of the table (jQuery object)\r\n        _$pagingListArea: null, //Reference to the page list area in to bottom panel (jQuery object)\r\n        _$pageSizeChangeArea: null, //Reference to the page size change area in to bottom panel (jQuery object)\r\n        _$pageInfoSpan: null, //Reference to the paging info area in to bottom panel (jQuery object)\r\n        _$gotoPageArea: null, //Reference to 'Go to page' input area in to bottom panel (jQuery object)\r\n        _$gotoPageInput: null, //Reference to 'Go to page' input in to bottom panel (jQuery object)\r\n        _totalRecordCount: 0, //Total count of records on all pages\r\n        _currentPageNo: 1, //Current page number\r\n\r\n        /************************************************************************\r\n        * CONSTRUCTOR AND INITIALIZING METHODS                                  *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to do paging-specific constructions.\r\n        *************************************************************************/\r\n        _create: function() {\r\n            base._create.apply(this, arguments);\r\n            if (this.options.paging) {\r\n                this._loadPagingSettings();\r\n                this._createBottomPanel();\r\n                this._createPageListArea();\r\n                this._createGotoPageInput();\r\n                this._createPageSizeSelection();\r\n            }\r\n        },\r\n\r\n        /* Loads user preferences for paging.\r\n        *************************************************************************/\r\n        _loadPagingSettings: function() {\r\n            if (!this.options.saveUserPreferences) {\r\n                return;\r\n            }\r\n\r\n            var pageSize = this._getCookie('page-size');\r\n            if (pageSize) {\r\n                this.options.pageSize = this._normalizeNumber(pageSize, 1, 1000000, this.options.pageSize);\r\n            }\r\n        },\r\n\r\n        /* Creates bottom panel and adds to the page.\r\n        *************************************************************************/\r\n        _createBottomPanel: function() {\r\n            this._$bottomPanel = $('<div />')\r\n                .addClass('jtable-bottom-panel')\r\n                .insertAfter(this._$table);\r\n\r\n            this._jqueryuiThemeAddClass(this._$bottomPanel, 'ui-state-default');\r\n\r\n            $('<div />').addClass('jtable-left-area').appendTo(this._$bottomPanel);\r\n            $('<div />').addClass('jtable-right-area').appendTo(this._$bottomPanel);\r\n        },\r\n\r\n        /* Creates page list area.\r\n        *************************************************************************/\r\n        _createPageListArea: function() {\r\n            this._$pagingListArea = $('<span></span>')\r\n                .addClass('jtable-page-list')\r\n                .appendTo(this._$bottomPanel.find('.jtable-left-area'));\r\n\r\n            this._$pageInfoSpan = $('<span></span>')\r\n                .addClass('jtable-page-info')\r\n                .appendTo(this._$bottomPanel.find('.jtable-right-area'));\r\n        },\r\n\r\n        /* Creates page list change area.\r\n        *************************************************************************/\r\n        _createPageSizeSelection: function() {\r\n            var self = this;\r\n\r\n            if (!self.options.pageSizeChangeArea) {\r\n                return;\r\n            }\r\n\r\n            //Add current page size to page sizes list if not contains it\r\n            if (self._findIndexInArray(self.options.pageSize, self.options.pageSizes) < 0) {\r\n                self.options.pageSizes.push(parseInt(self.options.pageSize));\r\n                self.options.pageSizes.sort(function(a, b) { return a - b; });\r\n            }\r\n\r\n            //Add a span to contain page size change items\r\n            self._$pageSizeChangeArea = $('<span></span>')\r\n                .addClass('jtable-page-size-change')\r\n                .appendTo(self._$bottomPanel.find('.jtable-left-area'));\r\n\r\n            //Page size label\r\n            self._$pageSizeChangeArea.append('<span>' + self.options.messages.pageSizeChangeLabel + ': </span>');\r\n\r\n            //Page size change combobox\r\n            var $pageSizeChangeCombobox = $('<select></select>').appendTo(self._$pageSizeChangeArea);\r\n\r\n            //Add page sizes to the combobox\r\n            for (var i = 0; i < self.options.pageSizes.length; i++) {\r\n                $pageSizeChangeCombobox.append('<option value=\"' + self.options.pageSizes[i] + '\">' + self.options.pageSizes[i] + '</option>');\r\n            }\r\n\r\n            //Select current page size\r\n            $pageSizeChangeCombobox.val(self.options.pageSize);\r\n\r\n            //Change page size on combobox change\r\n            $pageSizeChangeCombobox.change(function() {\r\n                self._changePageSize(parseInt($(this).val()as any));\r\n            });\r\n        },\r\n\r\n        /* Creates go to page area.\r\n        *************************************************************************/\r\n        _createGotoPageInput: function() {\r\n            var self = this;\r\n\r\n            if (!self.options.gotoPageArea || self.options.gotoPageArea == 'none') {\r\n                return;\r\n            }\r\n\r\n            //Add a span to contain goto page items\r\n            this._$gotoPageArea = $('<span></span>')\r\n                .addClass('jtable-goto-page')\r\n                .appendTo(self._$bottomPanel.find('.jtable-left-area'));\r\n\r\n            //Goto page label\r\n            this._$gotoPageArea.append('<span>' + self.options.messages.gotoPageLabel + ': </span>');\r\n\r\n            //Goto page input\r\n            if (self.options.gotoPageArea == 'combobox') {\r\n\r\n                self._$gotoPageInput = $('<select></select>')\r\n                    .appendTo(this._$gotoPageArea)\r\n                    .data('pageCount', 1)\r\n                    .change(function() {\r\n                        self._changePage(parseInt($(this).val() as any));\r\n                    });\r\n                self._$gotoPageInput.append('<option value=\"1\">1</option>');\r\n\r\n            } else { //textbox\r\n\r\n                self._$gotoPageInput = $('<input type=\"text\" maxlength=\"10\" value=\"' + self._currentPageNo + '\" />')\r\n                    .appendTo(this._$gotoPageArea)\r\n                    .keypress(function(event) {\r\n                        if (event.which == 13) { //enter\r\n                            event.preventDefault();\r\n                            self._changePage(parseInt(self._$gotoPageInput.val()));\r\n                        } else if (event.which == 43) { // +\r\n                            event.preventDefault();\r\n                            self._changePage(parseInt(self._$gotoPageInput.val()) + 1);\r\n                        } else if (event.which == 45) { // -\r\n                            event.preventDefault();\r\n                            self._changePage(parseInt(self._$gotoPageInput.val()) - 1);\r\n                        } else {\r\n                            //Allow only digits\r\n                            var isValid = (\r\n                                (47 < event.keyCode && event.keyCode < 58 && event.shiftKey == false && event.altKey == false)\r\n                                    || (event.keyCode == 8)\r\n                                    || (event.keyCode == 9)\r\n                            );\r\n\r\n                            if (!isValid) {\r\n                                event.preventDefault();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n            }\r\n        },\r\n\r\n        /* Refreshes the 'go to page' input.\r\n        *************************************************************************/\r\n        _refreshGotoPageInput: function() {\r\n            if (!this.options.gotoPageArea || this.options.gotoPageArea == 'none') {\r\n                return;\r\n            }\r\n\r\n            if (this._totalRecordCount <= 0) {\r\n                this._$gotoPageArea.hide();\r\n            } else {\r\n                this._$gotoPageArea.show();\r\n            }\r\n\r\n            if (this.options.gotoPageArea == 'combobox') {\r\n                var oldPageCount = this._$gotoPageInput.data('pageCount');\r\n                var currentPageCount = this._calculatePageCount();\r\n                if (oldPageCount != currentPageCount) {\r\n                    this._$gotoPageInput.empty();\r\n\r\n                    //Skip some pages is there are too many pages\r\n                    var pageStep = 1;\r\n                    if (currentPageCount > 10000) {\r\n                        pageStep = 100;\r\n                    } else if (currentPageCount > 5000) {\r\n                        pageStep = 10;\r\n                    } else if (currentPageCount > 2000) {\r\n                        pageStep = 5;\r\n                    } else if (currentPageCount > 1000) {\r\n                        pageStep = 2;\r\n                    }\r\n\r\n                    for (var i = pageStep; i <= currentPageCount; i += pageStep) {\r\n                        this._$gotoPageInput.append('<option value=\"' + i + '\">' + i + '</option>');\r\n                    }\r\n\r\n                    this._$gotoPageInput.data('pageCount', currentPageCount);\r\n                }\r\n            }\r\n\r\n            //same for 'textbox' and 'combobox'\r\n            this._$gotoPageInput.val(this._currentPageNo);\r\n        },\r\n\r\n        /************************************************************************\r\n        * OVERRIDED METHODS                                                     *\r\n        *************************************************************************/\r\n\r\n        /* Overrides load method to set current page to 1.\r\n        *************************************************************************/\r\n        load: function() {\r\n            this._currentPageNo = 1;\r\n\r\n            base.load.apply(this, arguments);\r\n        },\r\n\r\n        /* Used to change options dynamically after initialization.\r\n        *************************************************************************/\r\n        _setOption: function(key, value) {\r\n            base._setOption.apply(this, arguments);\r\n\r\n            if (key == 'pageSize') {\r\n                this._changePageSize(parseInt(value));\r\n            }\r\n        },\r\n\r\n        /* Changes current page size with given value.\r\n        *************************************************************************/\r\n        _changePageSize: function(pageSize) {\r\n            if (pageSize == this.options.pageSize) {\r\n                return;\r\n            }\r\n\r\n            this.options.pageSize = pageSize;\r\n\r\n            //Normalize current page\r\n            var pageCount = this._calculatePageCount();\r\n            if (this._currentPageNo > pageCount) {\r\n                this._currentPageNo = pageCount;\r\n            }\r\n            if (this._currentPageNo <= 0) {\r\n                this._currentPageNo = 1;\r\n            }\r\n\r\n            //if user sets one of the options on the combobox, then select it.\r\n            var $pageSizeChangeCombobox = this._$bottomPanel.find('.jtable-page-size-change select');\r\n            if ($pageSizeChangeCombobox.length > 0) {\r\n                if (parseInt($pageSizeChangeCombobox.val()) != pageSize) {\r\n                    var selectedOption = $pageSizeChangeCombobox.find('option[value=' + pageSize + ']');\r\n                    if (selectedOption.length > 0) {\r\n                        $pageSizeChangeCombobox.val(pageSize);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._savePagingSettings();\r\n            this._reloadTable();\r\n        },\r\n\r\n        /* Saves user preferences for paging\r\n        *************************************************************************/\r\n        _savePagingSettings: function() {\r\n            if (!this.options.saveUserPreferences) {\r\n                return;\r\n            }\r\n\r\n            this._setCookie('page-size', this.options.pageSize);\r\n        },\r\n\r\n        /* Overrides _createRecordLoadUrl method to add paging info to URL.\r\n        *************************************************************************/\r\n        _createRecordLoadUrl: function() {\r\n            var loadUrl = base._createRecordLoadUrl.apply(this, arguments);\r\n            loadUrl = this._addPagingInfoToUrl(loadUrl, this._currentPageNo);\r\n            return loadUrl;\r\n        },\r\n\r\n        /* Overrides _createJtParamsForLoading method to add paging parameters to jtParams object.\r\n        *************************************************************************/\r\n        _createJtParamsForLoading: function () {\r\n            var jtParams = base._createJtParamsForLoading.apply(this, arguments);\r\n            \r\n            if (this.options.paging) {\r\n                jtParams.jtStartIndex = (this._currentPageNo - 1) * this.options.pageSize;\r\n                jtParams.jtPageSize = this.options.pageSize;\r\n            }\r\n\r\n            return jtParams;\r\n        },\r\n\r\n        /* Overrides _addRowToTable method to re-load table when a new row is created.\r\n        * NOTE: THIS METHOD IS DEPRECATED AND WILL BE REMOVED FROM FEATURE RELEASES.\r\n        * USE _addRow METHOD.\r\n        *************************************************************************/\r\n        _addRowToTable: function ($tableRow, index, isNewRow) {\r\n            if (isNewRow && this.options.paging) {\r\n                this._reloadTable();\r\n                return;\r\n            }\r\n\r\n            base._addRowToTable.apply(this, arguments);\r\n        },\r\n\r\n        /* Overrides _addRow method to re-load table when a new row is created.\r\n        *************************************************************************/\r\n        _addRow: function ($row, options) {\r\n            if (options && options.isNewRow && this.options.paging) {\r\n                this._reloadTable();\r\n                return;\r\n            }\r\n\r\n            base._addRow.apply(this, arguments);\r\n        },\r\n\r\n        /* Overrides _removeRowsFromTable method to re-load table when a row is removed from table.\r\n        *************************************************************************/\r\n        _removeRowsFromTable: function ($rows, reason) {\r\n            base._removeRowsFromTable.apply(this, arguments);\r\n\r\n            if (this.options.paging) {\r\n                if (this._$tableRows.length <= 0 && this._currentPageNo > 1) {\r\n                    --this._currentPageNo;\r\n                }\r\n\r\n                this._reloadTable();\r\n            }\r\n        },\r\n\r\n        /* Overrides _onRecordsLoaded method to to do paging specific tasks.\r\n        *************************************************************************/\r\n        _onRecordsLoaded: function (data) {\r\n            if (this.options.paging) {\r\n                this._totalRecordCount = data.TotalRecordCount;\r\n                this._createPagingList();\r\n                this._createPagingInfo();\r\n                this._refreshGotoPageInput();\r\n            }\r\n\r\n            base._onRecordsLoaded.apply(this, arguments);\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Adds jtStartIndex and jtPageSize parameters to a URL as query string.\r\n        *************************************************************************/\r\n        _addPagingInfoToUrl: function (url, pageNumber) {\r\n            if (!this.options.paging) {\r\n                return url;\r\n            }\r\n\r\n            var jtStartIndex = (pageNumber - 1) * this.options.pageSize;\r\n            var jtPageSize = this.options.pageSize;\r\n\r\n            return (url + (url.indexOf('?') < 0 ? '?' : '&') + 'jtStartIndex=' + jtStartIndex + '&jtPageSize=' + jtPageSize);\r\n        },\r\n\r\n        /* Creates and shows the page list.\r\n        *************************************************************************/\r\n        _createPagingList: function () {\r\n            if (this.options.pageSize <= 0) {\r\n                return;\r\n            }\r\n\r\n            this._$pagingListArea.empty();\r\n            if (this._totalRecordCount <= 0) {\r\n                return;\r\n            }\r\n\r\n            var pageCount = this._calculatePageCount();\r\n\r\n            this._createFirstAndPreviousPageButtons();\r\n            if (this.options.pageList == 'normal') {\r\n                this._createPageNumberButtons(this._calculatePageNumbers(pageCount));\r\n            }\r\n            this._createLastAndNextPageButtons(pageCount);\r\n            this._bindClickEventsToPageNumberButtons();\r\n        },\r\n\r\n        /* Creates and shows previous and first page links.\r\n        *************************************************************************/\r\n        _createFirstAndPreviousPageButtons: function () {\r\n            var $first = $('<span></span>')\r\n                .addClass('jtable-page-number-first')\r\n                .html('&lt&lt')\r\n                .data('pageNumber', 1)\r\n                .appendTo(this._$pagingListArea);\r\n\r\n            var $previous = $('<span></span>')\r\n                .addClass('jtable-page-number-previous')\r\n                .html('&lt')\r\n                .data('pageNumber', this._currentPageNo - 1)\r\n                .appendTo(this._$pagingListArea);\r\n\r\n            this._jqueryuiThemeAddClass($first, 'ui-button ui-state-default', 'ui-state-hover');\r\n            this._jqueryuiThemeAddClass($previous, 'ui-button ui-state-default', 'ui-state-hover');\r\n\r\n            if (this._currentPageNo <= 1) {\r\n                $first.addClass('jtable-page-number-disabled');\r\n                $previous.addClass('jtable-page-number-disabled');\r\n                this._jqueryuiThemeAddClass($first, 'ui-state-disabled');\r\n                this._jqueryuiThemeAddClass($previous, 'ui-state-disabled');\r\n            }\r\n        },\r\n\r\n        /* Creates and shows next and last page links.\r\n        *************************************************************************/\r\n        _createLastAndNextPageButtons: function (pageCount) {\r\n            var $next = $('<span></span>')\r\n                .addClass('jtable-page-number-next')\r\n                .html('&gt')\r\n                .data('pageNumber', this._currentPageNo + 1)\r\n                .appendTo(this._$pagingListArea);\r\n            var $last = $('<span></span>')\r\n                .addClass('jtable-page-number-last')\r\n                .html('&gt&gt')\r\n                .data('pageNumber', pageCount)\r\n                .appendTo(this._$pagingListArea);\r\n\r\n            this._jqueryuiThemeAddClass($next, 'ui-button ui-state-default', 'ui-state-hover');\r\n            this._jqueryuiThemeAddClass($last, 'ui-button ui-state-default', 'ui-state-hover');\r\n\r\n            if (this._currentPageNo >= pageCount) {\r\n                $next.addClass('jtable-page-number-disabled');\r\n                $last.addClass('jtable-page-number-disabled');\r\n                this._jqueryuiThemeAddClass($next, 'ui-state-disabled');\r\n                this._jqueryuiThemeAddClass($last, 'ui-state-disabled');\r\n            }\r\n        },\r\n\r\n        /* Creates and shows page number links for given number array.\r\n        *************************************************************************/\r\n        _createPageNumberButtons: function (pageNumbers) {\r\n            var previousNumber = 0;\r\n            for (var i = 0; i < pageNumbers.length; i++) {\r\n                //Create \"...\" between page numbers if needed\r\n                if ((pageNumbers[i] - previousNumber) > 1) {\r\n                    $('<span></span>')\r\n                        .addClass('jtable-page-number-space')\r\n                        .html('...')\r\n                        .appendTo(this._$pagingListArea);\r\n                }\r\n\r\n                this._createPageNumberButton(pageNumbers[i]);\r\n                previousNumber = pageNumbers[i];\r\n            }\r\n        },\r\n\r\n        /* Creates a page number link and adds to paging area.\r\n        *************************************************************************/\r\n        _createPageNumberButton: function (pageNumber) {\r\n            var $pageNumber = $('<span></span>')\r\n                .addClass('jtable-page-number')\r\n                .html(pageNumber)\r\n                .data('pageNumber', pageNumber)\r\n                .appendTo(this._$pagingListArea);\r\n\r\n            this._jqueryuiThemeAddClass($pageNumber, 'ui-button ui-state-default', 'ui-state-hover');\r\n            \r\n            if (this._currentPageNo == pageNumber) {\r\n                $pageNumber.addClass('jtable-page-number-active jtable-page-number-disabled');\r\n                this._jqueryuiThemeAddClass($pageNumber, 'ui-state-active');\r\n            }\r\n        },\r\n\r\n        /* Calculates total page count according to page size and total record count.\r\n        *************************************************************************/\r\n        _calculatePageCount: function () {\r\n            var pageCount = Math.floor(this._totalRecordCount / this.options.pageSize);\r\n            if (this._totalRecordCount % this.options.pageSize != 0) {\r\n                ++pageCount;\r\n            }\r\n\r\n            return pageCount;\r\n        },\r\n\r\n        /* Calculates page numbers and returns an array of these numbers.\r\n        *************************************************************************/\r\n        _calculatePageNumbers: function (pageCount) {\r\n            if (pageCount <= 4) {\r\n                //Show all pages\r\n                var pageNumbers = [];\r\n                for (var i = 1; i <= pageCount; ++i) {\r\n                    pageNumbers.push(i);\r\n                }\r\n\r\n                return pageNumbers;\r\n            } else {\r\n                //show first three, last three, current, previous and next page numbers\r\n                var shownPageNumbers = [1, 2, pageCount - 1, pageCount];\r\n                var previousPageNo = this._normalizeNumber(this._currentPageNo - 1, 1, pageCount, 1);\r\n                var nextPageNo = this._normalizeNumber(this._currentPageNo + 1, 1, pageCount, 1);\r\n\r\n                this._insertToArrayIfDoesNotExists(shownPageNumbers, previousPageNo);\r\n                this._insertToArrayIfDoesNotExists(shownPageNumbers, this._currentPageNo);\r\n                this._insertToArrayIfDoesNotExists(shownPageNumbers, nextPageNo);\r\n\r\n                shownPageNumbers.sort(function (a, b) { return a - b; });\r\n                return shownPageNumbers;\r\n            }\r\n        },\r\n\r\n        /* Creates and shows paging informations.\r\n        *************************************************************************/\r\n        _createPagingInfo: function () {\r\n            if (this._totalRecordCount <= 0) {\r\n                this._$pageInfoSpan.empty();\r\n                return;\r\n            }\r\n\r\n            var startNo = (this._currentPageNo - 1) * this.options.pageSize + 1;\r\n            var endNo = this._currentPageNo * this.options.pageSize;\r\n            endNo = this._normalizeNumber(endNo, startNo, this._totalRecordCount, 0);\r\n\r\n            if (endNo >= startNo) {\r\n                var pagingInfoMessage = this._formatString(this.options.messages.pagingInfo, startNo, endNo, this._totalRecordCount);\r\n                this._$pageInfoSpan.html(pagingInfoMessage);\r\n            }\r\n        },\r\n\r\n        /* Binds click events of all page links to change the page.\r\n        *************************************************************************/\r\n        _bindClickEventsToPageNumberButtons: function () {\r\n            var self = this;\r\n            self._$pagingListArea\r\n                .find('.jtable-page-number,.jtable-page-number-previous,.jtable-page-number-next,.jtable-page-number-first,.jtable-page-number-last')\r\n                .not('.jtable-page-number-disabled')\r\n                .click(function (e) {\r\n                    e.preventDefault();\r\n                    self._changePage($(this).data('pageNumber'));\r\n                });\r\n        },\r\n\r\n        /* Changes current page to given value.\r\n        *************************************************************************/\r\n        _changePage: function (pageNo) {\r\n            pageNo = this._normalizeNumber(pageNo, 1, this._calculatePageCount(), 1);\r\n            if (pageNo == this._currentPageNo) {\r\n                this._refreshGotoPageInput();\r\n                return;\r\n            }\r\n\r\n            this._currentPageNo = pageNo;\r\n            this._reloadTable();\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* SORTING extension for jTable                                          *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        _initializeFields: $.hik.jtable.prototype._initializeFields,\r\n        _normalizeFieldOptions: $.hik.jtable.prototype._normalizeFieldOptions,\r\n        _createHeaderCellForField: $.hik.jtable.prototype._createHeaderCellForField,\r\n        _createRecordLoadUrl: $.hik.jtable.prototype._createRecordLoadUrl,\r\n        _createJtParamsForLoading: $.hik.jtable.prototype._createJtParamsForLoading\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n            sorting: false,\r\n            multiSorting: false,\r\n            defaultSorting: ''\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _lastSorting: null, //Last sorting of the table\r\n\r\n        /************************************************************************\r\n        * OVERRIDED METHODS                                                     *\r\n        *************************************************************************/\r\n\r\n        /* Overrides base method to create sorting array.\r\n        *************************************************************************/\r\n        _initializeFields: function () {\r\n            base._initializeFields.apply(this, arguments);\r\n\r\n            this._lastSorting = [];\r\n            if (this.options.sorting) {\r\n                this._buildDefaultSortingArray();\r\n            }\r\n        },\r\n\r\n        /* Overrides _normalizeFieldOptions method to normalize sorting option for fields.\r\n        *************************************************************************/\r\n        _normalizeFieldOptions: function (fieldName, props) {\r\n            base._normalizeFieldOptions.apply(this, arguments);\r\n            props.sorting = (props.sorting != false);\r\n        },\r\n\r\n        /* Overrides _createHeaderCellForField to make columns sortable.\r\n        *************************************************************************/\r\n        _createHeaderCellForField: function (fieldName, field) {\r\n            var $headerCell = base._createHeaderCellForField.apply(this, arguments);\r\n            if (this.options.sorting && field.sorting) {\r\n                this._makeColumnSortable($headerCell, fieldName);\r\n            }\r\n\r\n            return $headerCell;\r\n        },\r\n\r\n        /* Overrides _createRecordLoadUrl to add sorting specific info to URL.\r\n        *************************************************************************/\r\n        _createRecordLoadUrl: function () {\r\n            var loadUrl = base._createRecordLoadUrl.apply(this, arguments);\r\n            loadUrl = this._addSortingInfoToUrl(loadUrl);\r\n            return loadUrl;\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Builds the sorting array according to defaultSorting string\r\n        *************************************************************************/\r\n        _buildDefaultSortingArray: function () {\r\n            var self = this;\r\n\r\n            $.each(self.options.defaultSorting.split(\",\"), function (orderIndex, orderValue) {\r\n                $.each(self.options.fields, function (fieldName, fieldProps) {\r\n                    if (fieldProps.sorting) {\r\n                        var colOffset = orderValue.indexOf(fieldName);\r\n                        if (colOffset > -1) {\r\n                            if (orderValue.toUpperCase().indexOf(' DESC', colOffset) > -1) {\r\n                                self._lastSorting.push({\r\n                                    fieldName: fieldName,\r\n                                    sortOrder: 'DESC'\r\n                                });\r\n                            } else {\r\n                                self._lastSorting.push({\r\n                                    fieldName: fieldName,\r\n                                    sortOrder: 'ASC'\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        /* Makes a column sortable.\r\n        *************************************************************************/\r\n        _makeColumnSortable: function ($columnHeader, fieldName) {\r\n            var self = this;\r\n            \r\n            $columnHeader\r\n                .addClass('jtable-column-header-sortable')\r\n                .click(function (e) {\r\n                    e.preventDefault();\r\n\r\n                    if (!self.options.multiSorting || !e.ctrlKey) {\r\n                        self._lastSorting = []; //clear previous sorting\r\n                    }\r\n                    \r\n                    self._sortTableByColumn($columnHeader);\r\n                });\r\n\r\n            //Set default sorting\r\n            $.each(this._lastSorting, function (sortIndex, sortField) {\r\n                if (sortField.fieldName == fieldName) {\r\n                    if (sortField.sortOrder == 'DESC') {\r\n                        $columnHeader.addClass('jtable-column-header-sorted-desc');\r\n                    } else {\r\n                        $columnHeader.addClass('jtable-column-header-sorted-asc');\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /* Sorts table according to a column header.\r\n        *************************************************************************/\r\n        _sortTableByColumn: function ($columnHeader) {\r\n            //Remove sorting styles from all columns except this one\r\n            if (this._lastSorting.length == 0) {\r\n                $columnHeader.siblings().removeClass('jtable-column-header-sorted-asc jtable-column-header-sorted-desc');\r\n            }\r\n\r\n            //If current sorting list includes this column, remove it from the list\r\n            for (var i = 0; i < this._lastSorting.length; i++) {\r\n                if (this._lastSorting[i].fieldName == $columnHeader.data('fieldName')) {\r\n                    this._lastSorting.splice(i--, 1);\r\n                }\r\n            }\r\n\r\n            //Sort ASC or DESC according to current sorting state\r\n            if ($columnHeader.hasClass('jtable-column-header-sorted-asc')) {\r\n                $columnHeader.removeClass('jtable-column-header-sorted-asc').addClass('jtable-column-header-sorted-desc');\r\n                this._lastSorting.push({\r\n                    'fieldName': $columnHeader.data('fieldName'),\r\n                    sortOrder: 'DESC'\r\n                });\r\n            } else {\r\n                $columnHeader.removeClass('jtable-column-header-sorted-desc').addClass('jtable-column-header-sorted-asc');\r\n                this._lastSorting.push({\r\n                    'fieldName': $columnHeader.data('fieldName'),\r\n                    sortOrder: 'ASC'\r\n                });\r\n            }\r\n\r\n            //Load current page again\r\n            this._reloadTable();\r\n        },\r\n\r\n        /* Adds jtSorting parameter to a URL as query string.\r\n        *************************************************************************/\r\n        _addSortingInfoToUrl: function (url) {\r\n            if (!this.options.sorting || this._lastSorting.length == 0) {\r\n                return url;\r\n            }\r\n\r\n            var sorting = [];\r\n            $.each(this._lastSorting, function (idx, value) {\r\n                sorting.push(value.fieldName + ' ' + value.sortOrder);\r\n            });\r\n\r\n            return (url + (url.indexOf('?') < 0 ? '?' : '&') + 'jtSorting=' + sorting.join(\",\"));\r\n        },\r\n\r\n        /* Overrides _createJtParamsForLoading method to add sorging parameters to jtParams object.\r\n        *************************************************************************/\r\n        _createJtParamsForLoading: function () {\r\n            var jtParams = base._createJtParamsForLoading.apply(this, arguments);\r\n\r\n            if (this.options.sorting && this._lastSorting.length) {\r\n                var sorting = [];\r\n                $.each(this._lastSorting, function (idx, value) {\r\n                    sorting.push(value.fieldName + ' ' + value.sortOrder);\r\n                });\r\n\r\n                jtParams.jtSorting = sorting.join(\",\");\r\n            }\r\n\r\n            return jtParams;\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n/************************************************************************\r\n* DYNAMIC COLUMNS extension for jTable                                  *\r\n* (Show/hide/resize columns)                                            *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        _create: $.hik.jtable.prototype._create,\r\n        _normalizeFieldOptions: $.hik.jtable.prototype._normalizeFieldOptions,\r\n        _createHeaderCellForField: $.hik.jtable.prototype._createHeaderCellForField,\r\n        _createCellForRecordField: $.hik.jtable.prototype._createCellForRecordField\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n\r\n        options: {\r\n            tableId: undefined,\r\n            columnResizable: true,\r\n            columnSelectable: true\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE FIELDS                                                        *\r\n        *************************************************************************/\r\n\r\n        _$columnSelectionDiv: null,\r\n        _$columnResizeBar: null,\r\n        _cookieKeyPrefix: null,\r\n        _currentResizeArgs: null,\r\n\r\n        /************************************************************************\r\n        * OVERRIDED METHODS                                                     *\r\n        *************************************************************************/\r\n\r\n        /* Overrides _addRowToTableHead method.\r\n        *************************************************************************/\r\n\r\n        _create: function () {\r\n            base._create.apply(this, arguments);\r\n\r\n            this._createColumnResizeBar();\r\n            this._createColumnSelection();\r\n\r\n            if (this.options.saveUserPreferences) {\r\n                this._loadColumnSettings();\r\n            }\r\n\r\n            this._normalizeColumnWidths();\r\n        },\r\n\r\n        /* Normalizes some options for a field (sets default values).\r\n        *************************************************************************/\r\n        _normalizeFieldOptions: function (fieldName, props) {\r\n            base._normalizeFieldOptions.apply(this, arguments);\r\n\r\n            //columnResizable\r\n            if (this.options.columnResizable) {\r\n                props.columnResizable = (props.columnResizable != false);\r\n            }\r\n\r\n            //visibility\r\n            if (!props.visibility) {\r\n                props.visibility = 'visible';\r\n            }\r\n        },\r\n\r\n        /* Overrides _createHeaderCellForField to make columns dynamic.\r\n        *************************************************************************/\r\n        _createHeaderCellForField: function (fieldName, field) {\r\n            var $headerCell = base._createHeaderCellForField.apply(this, arguments);\r\n\r\n            //Make data columns resizable except the last one\r\n            if (this.options.columnResizable && field.columnResizable && (fieldName != this._columnList[this._columnList.length - 1])) {\r\n                this._makeColumnResizable($headerCell);\r\n            }\r\n\r\n            //Hide column if needed\r\n            if (field.visibility == 'hidden') {\r\n                $headerCell.hide();\r\n            }\r\n\r\n            return $headerCell;\r\n        },\r\n\r\n        /* Overrides _createHeaderCellForField to decide show or hide a column.\r\n        *************************************************************************/\r\n        _createCellForRecordField: function (record, fieldName) {\r\n            var $column = base._createCellForRecordField.apply(this, arguments);\r\n\r\n            var field = this.options.fields[fieldName];\r\n            if (field.visibility == 'hidden') {\r\n                $column.hide();\r\n            }\r\n\r\n            return $column;\r\n        },\r\n\r\n        /************************************************************************\r\n        * PUBLIC METHODS                                                        *\r\n        *************************************************************************/\r\n\r\n        /* Changes visibility of a column.\r\n        *************************************************************************/\r\n        changeColumnVisibility: function (columnName, visibility) {\r\n            this._changeColumnVisibilityInternal(columnName, visibility);\r\n            this._normalizeColumnWidths();\r\n            if (this.options.saveUserPreferences) {\r\n                this._saveColumnSettings();\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Changes visibility of a column.\r\n        *************************************************************************/\r\n        _changeColumnVisibilityInternal: function (columnName, visibility) {\r\n            //Check if there is a column with given name\r\n            var columnIndex = this._columnList.indexOf(columnName);\r\n            if (columnIndex < 0) {\r\n                this._logWarn('Column \"' + columnName + '\" does not exist in fields!');\r\n                return;\r\n            }\r\n\r\n            //Check if visibility value is valid\r\n            if (['visible', 'hidden', 'fixed'].indexOf(visibility) < 0) {\r\n                this._logWarn('Visibility value is not valid: \"' + visibility + '\"! Options are: visible, hidden, fixed.');\r\n                return;\r\n            }\r\n\r\n            //Get the field\r\n            var field = this.options.fields[columnName];\r\n            if (field.visibility == visibility) {\r\n                return; //No action if new value is same as old one.\r\n            }\r\n\r\n            //Hide or show the column if needed\r\n            var columnIndexInTable = this._firstDataColumnOffset + columnIndex + 1;\r\n            if (field.visibility != 'hidden' && visibility == 'hidden') {\r\n                this._$table\r\n                    .find('>thead >tr >th:nth-child(' + columnIndexInTable + '),>tbody >tr >td:nth-child(' + columnIndexInTable + ')')\r\n                    .hide();\r\n            } else if (field.visibility == 'hidden' && visibility != 'hidden') {\r\n                this._$table\r\n                    .find('>thead >tr >th:nth-child(' + columnIndexInTable + '),>tbody >tr >td:nth-child(' + columnIndexInTable + ')')\r\n                    .show()\r\n                    .css('display', 'table-cell');\r\n            }\r\n\r\n            field.visibility = visibility;\r\n        },\r\n\r\n        /* Prepares dialog to change settings.\r\n        *************************************************************************/\r\n        _createColumnSelection: function () {\r\n            var self = this;\r\n\r\n            //Create a div for dialog and add to container element\r\n            this._$columnSelectionDiv = $('<div />')\r\n                .addClass('jtable-column-selection-container')\r\n                .appendTo(self._$mainContainer);\r\n            \r\n            this._$table.children('thead').bind('contextmenu', function (e) {\r\n                if (!self.options.columnSelectable) {\r\n                    return;\r\n                }\r\n                \r\n                e.preventDefault();\r\n\r\n                //Make an overlay div to disable page clicks\r\n                $('<div />')\r\n                    .addClass('jtable-contextmenu-overlay')\r\n                    .click(function () {\r\n                        $(this).remove();\r\n                        self._$columnSelectionDiv.hide();\r\n                    })\r\n                    .bind('contextmenu', function () { return false; })\r\n                    .appendTo(document.body);\r\n\r\n                self._fillColumnSelection();\r\n                \r\n                //Calculate position of column selection list and show it\r\n\r\n                var containerOffset = self._$mainContainer.offset();\r\n                var selectionDivTop = e.pageY - containerOffset.top;\r\n                var selectionDivLeft = e.pageX - containerOffset.left;\r\n                \r\n                var selectionDivMinWidth = 100; //in pixels\r\n                var containerWidth = self._$mainContainer.width();\r\n\r\n                //If user clicks right area of header of the table, show list at a little left\r\n                if ((containerWidth > selectionDivMinWidth) && (selectionDivLeft > (containerWidth - selectionDivMinWidth))) {\r\n                    selectionDivLeft = containerWidth - selectionDivMinWidth;\r\n                }\r\n\r\n                self._$columnSelectionDiv.css({\r\n                    left: selectionDivLeft,\r\n                    top: selectionDivTop,\r\n                    'min-width': selectionDivMinWidth + 'px'\r\n                }).show();\r\n            });\r\n        },\r\n        \r\n        /* Prepares content of settings dialog.\r\n        *************************************************************************/\r\n        _fillColumnSelection: function () {\r\n            var self = this;\r\n\r\n            var $columnsUl = $('<ul></ul>')\r\n                .addClass('jtable-column-select-list');\r\n            for (var i = 0; i < this._columnList.length; i++) {\r\n                var columnName = this._columnList[i];\r\n                var field = this.options.fields[columnName];\r\n\r\n                //Crete li element\r\n                var $columnLi = $('<li></li>').appendTo($columnsUl);\r\n\r\n                //Create label for the checkbox\r\n                var $label = $('<label for=\"' + columnName + '\"></label>')\r\n                    .append($('<span>' + (field.title || columnName) + '</span>'))\r\n                    .appendTo($columnLi);\r\n\r\n                //Create checkbox\r\n                var $checkbox = $('<input type=\"checkbox\" name=\"' + columnName + '\">')\r\n                    .prependTo($label)\r\n                    .click(function () {\r\n                        var $clickedCheckbox = $(this);\r\n                        var clickedColumnName = $clickedCheckbox.attr('name');\r\n                        var clickedField = self.options.fields[clickedColumnName];\r\n                        if (clickedField.visibility == 'fixed') {\r\n                            return;\r\n                        }\r\n\r\n                        self.changeColumnVisibility(clickedColumnName, $clickedCheckbox.is(':checked') ? 'visible' : 'hidden');\r\n                    });\r\n\r\n                //Check, if column if shown\r\n                if (field.visibility != 'hidden') {\r\n                    $checkbox.attr('checked', 'checked');\r\n                }\r\n\r\n                //Disable, if column is fixed\r\n                if (field.visibility == 'fixed') {\r\n                    $checkbox.attr('disabled', 'disabled');\r\n                }\r\n            }\r\n\r\n            this._$columnSelectionDiv.html($columnsUl);\r\n        },\r\n\r\n        /* creates a vertical bar that is shown while resizing columns.\r\n        *************************************************************************/\r\n        _createColumnResizeBar: function () {\r\n            this._$columnResizeBar = $('<div />')\r\n                .addClass('jtable-column-resize-bar')\r\n                .appendTo(this._$mainContainer)\r\n                .hide();\r\n        },\r\n\r\n        /* Makes a column sortable.\r\n        *************************************************************************/\r\n        _makeColumnResizable: function ($columnHeader) {\r\n            var self = this;\r\n\r\n            //Create a handler to handle mouse click event\r\n            $('<div />')\r\n                .addClass('jtable-column-resize-handler')\r\n                .appendTo($columnHeader.find('.jtable-column-header-container')) //Append the handler to the column\r\n                .mousedown(function (downevent) { //handle mousedown event for the handler\r\n                    downevent.preventDefault();\r\n                    downevent.stopPropagation();\r\n\r\n                    var mainContainerOffset = self._$mainContainer.offset();\r\n\r\n                    //Get a reference to the next column\r\n                    var $nextColumnHeader = $columnHeader.nextAll('th.jtable-column-header:visible:first');\r\n                    if (!$nextColumnHeader.length) {\r\n                        return;\r\n                    }\r\n\r\n                    //Store some information to be used on resizing\r\n                    var minimumColumnWidth = 10; //A column's width can not be smaller than 10 pixel.\r\n                    self._currentResizeArgs = {\r\n                        currentColumnStartWidth: $columnHeader.outerWidth(),\r\n                        minWidth: minimumColumnWidth,\r\n                        maxWidth: $columnHeader.outerWidth() + $nextColumnHeader.outerWidth() - minimumColumnWidth,\r\n                        mouseStartX: downevent.pageX,\r\n                        minResizeX: function () { return this.mouseStartX - (this.currentColumnStartWidth - this.minWidth); },\r\n                        maxResizeX: function () { return this.mouseStartX + (this.maxWidth - this.currentColumnStartWidth); }\r\n                    };\r\n\r\n                    //Handle mouse move event to move resizing bar\r\n                    var resizeonmousemove = function (moveevent) {\r\n                        if (!self._currentResizeArgs) {\r\n                            return;\r\n                        }\r\n\r\n                        var resizeBarX = self._normalizeNumber(moveevent.pageX, self._currentResizeArgs.minResizeX(), self._currentResizeArgs.maxResizeX());\r\n                        self._$columnResizeBar.css('left', (resizeBarX - mainContainerOffset.left) + 'px');\r\n                    };\r\n\r\n                    //Handle mouse up event to finish resizing of the column\r\n                    var resizeonmouseup = function (upevent) {\r\n                        if (!self._currentResizeArgs) {\r\n                            return;\r\n                        }\r\n\r\n                        $(document).unbind('mousemove', resizeonmousemove);\r\n                        $(document).unbind('mouseup', resizeonmouseup);\r\n\r\n                        self._$columnResizeBar.hide();\r\n\r\n                        //Calculate new widths in pixels\r\n                        var mouseChangeX = upevent.pageX - self._currentResizeArgs.mouseStartX;\r\n                        var currentColumnFinalWidth = self._normalizeNumber(self._currentResizeArgs.currentColumnStartWidth + mouseChangeX, self._currentResizeArgs.minWidth, self._currentResizeArgs.maxWidth);\r\n                        var nextColumnFinalWidth = $nextColumnHeader.outerWidth() + (self._currentResizeArgs.currentColumnStartWidth - currentColumnFinalWidth);\r\n\r\n                        //Calculate widths as percent\r\n                        var pixelToPercentRatio = $columnHeader.data('width-in-percent') / self._currentResizeArgs.currentColumnStartWidth;\r\n                        $columnHeader.data('width-in-percent', currentColumnFinalWidth * pixelToPercentRatio);\r\n                        $nextColumnHeader.data('width-in-percent', nextColumnFinalWidth * pixelToPercentRatio);\r\n\r\n                        //Set new widths to columns (resize!)\r\n                        $columnHeader.css('width', $columnHeader.data('width-in-percent') + '%');\r\n                        $nextColumnHeader.css('width', $nextColumnHeader.data('width-in-percent') + '%');\r\n\r\n                        //Normalize all column widths\r\n                        self._normalizeColumnWidths();\r\n\r\n                        //Finish resizing\r\n                        self._currentResizeArgs = null;\r\n\r\n                        //Save current preferences\r\n                        if (self.options.saveUserPreferences) {\r\n                            self._saveColumnSettings();\r\n                        }\r\n                    };\r\n\r\n                    //Show vertical resize bar\r\n                    self._$columnResizeBar\r\n                        .show()\r\n                        .css({\r\n                            top: ($columnHeader.offset().top - mainContainerOffset.top) + 'px',\r\n                            left: (downevent.pageX - mainContainerOffset.left) + 'px',\r\n                            height: (self._$table.outerHeight()) + 'px'\r\n                        });\r\n\r\n                    //Bind events\r\n                    $(document).bind('mousemove', resizeonmousemove);\r\n                    $(document).bind('mouseup', resizeonmouseup);\r\n                });\r\n        },\r\n\r\n        /* Normalizes column widths as percent for current view.\r\n        *************************************************************************/\r\n        _normalizeColumnWidths: function () {\r\n\r\n            //Set command column width\r\n            var commandColumnHeaders = this._$table\r\n                .find('>thead th.jtable-command-column-header')\r\n                .data('width-in-percent', 1)\r\n                .css('width', '1%');\r\n\r\n            //Find data columns\r\n            var headerCells = this._$table.find('>thead th.jtable-column-header');\r\n\r\n            //Calculate total width of data columns\r\n            var totalWidthInPixel = 0;\r\n            headerCells.each(function () {\r\n                var $cell = $(this);\r\n                if ($cell.is(':visible')) {\r\n                    totalWidthInPixel += $cell.outerWidth();\r\n                }\r\n            });\r\n\r\n            //Calculate width of each column\r\n            var columnWidhts = {};\r\n            var availableWidthInPercent = 100.0 - commandColumnHeaders.length;\r\n            headerCells.each(function () {\r\n                var $cell = $(this);\r\n                if ($cell.is(':visible')) {\r\n                    var fieldName = $cell.data('fieldName');\r\n                    var widthInPercent = $cell.outerWidth() * availableWidthInPercent / totalWidthInPixel;\r\n                    columnWidhts[fieldName] = widthInPercent;\r\n                }\r\n            });\r\n\r\n            //Set width of each column\r\n            headerCells.each(function () {\r\n                var $cell = $(this);\r\n                if ($cell.is(':visible')) {\r\n                    var fieldName = $cell.data('fieldName');\r\n                    $cell.data('width-in-percent', columnWidhts[fieldName]).css('width', columnWidhts[fieldName] + '%');\r\n                }\r\n            });\r\n        },\r\n\r\n        /* Saves field setting to cookie.\r\n        *  Saved setting will be a string like that:\r\n        * fieldName1=visible;23|fieldName2=hidden;17|...\r\n        *************************************************************************/\r\n        _saveColumnSettings: function () {\r\n            var self = this;\r\n            var fieldSettings = '';\r\n            this._$table.find('>thead >tr >th.jtable-column-header').each(function () {\r\n                var $cell = $(this);\r\n                var fieldName = $cell.data('fieldName');\r\n                var columnWidth = $cell.data('width-in-percent');\r\n                var fieldVisibility = self.options.fields[fieldName].visibility;\r\n                var fieldSetting = fieldName + \"=\" + fieldVisibility + ';' + columnWidth;\r\n                fieldSettings = fieldSettings + fieldSetting + '|';\r\n            });\r\n\r\n            this._setCookie('column-settings', fieldSettings.substr(0, fieldSettings.length - 1));\r\n        },\r\n\r\n        /* Loads field settings from cookie that is saved by _saveFieldSettings method.\r\n        *************************************************************************/\r\n        _loadColumnSettings: function () {\r\n            var self = this;\r\n            var columnSettingsCookie = this._getCookie('column-settings');\r\n            if (!columnSettingsCookie) {\r\n                return;\r\n            }\r\n\r\n            var columnSettings = {};\r\n            $.each(columnSettingsCookie.split('|'), function (inx, fieldSetting) {\r\n                var splitted = fieldSetting.split('=');\r\n                var fieldName = splitted[0];\r\n                var settings = splitted[1].split(';');\r\n                columnSettings[fieldName] = {\r\n                    columnVisibility: settings[0],\r\n                    columnWidth: settings[1]\r\n                };\r\n            });\r\n\r\n            var headerCells = this._$table.find('>thead >tr >th.jtable-column-header');\r\n            headerCells.each(function () {\r\n                var $cell = $(this);\r\n                var fieldName = $cell.data('fieldName');\r\n                var field = self.options.fields[fieldName];\r\n                if (columnSettings[fieldName]) {\r\n                    if (field.visibility != 'fixed') {\r\n                        self._changeColumnVisibilityInternal(fieldName, columnSettings[fieldName].columnVisibility);\r\n                    }\r\n\r\n                    $cell.data('width-in-percent', columnSettings[fieldName].columnWidth).css('width', columnSettings[fieldName].columnWidth + '%');\r\n                }\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n\r\n/************************************************************************\r\n* MASTER/CHILD tables extension for jTable                              *\r\n*************************************************************************/\r\n(function ($) {\r\n\r\n    //Reference to base object members\r\n    var base = {\r\n        _removeRowsFromTable: $.hik.jtable.prototype._removeRowsFromTable\r\n    };\r\n\r\n    //extension members\r\n    $.extend(true, $.hik.jtable.prototype, {\r\n\r\n        /************************************************************************\r\n        * DEFAULT OPTIONS / EVENTS                                              *\r\n        *************************************************************************/\r\n        options: {\r\n            openChildAsAccordion: false\r\n        },\r\n\r\n        /************************************************************************\r\n        * PUBLIC METHODS                                                        *\r\n        *************************************************************************/\r\n\r\n        /* Creates and opens a new child table for given row.\r\n        *************************************************************************/\r\n        openChildTable: function ($row, tableOptions, opened) {\r\n            var self = this;\r\n\r\n            //Apply theming as same as parent table unless explicitily set\r\n            if (tableOptions.jqueryuiTheme == undefined) {\r\n                tableOptions.jqueryuiTheme = self.options.jqueryuiTheme;\r\n            }\r\n\r\n            //Show close button as default\r\n            tableOptions.showCloseButton = (tableOptions.showCloseButton != false);\r\n\r\n            //Close child table when close button is clicked (default behavior)\r\n            if (tableOptions.showCloseButton && !tableOptions.closeRequested) {\r\n                tableOptions.closeRequested = function () {\r\n                    self.closeChildTable($row);\r\n                };\r\n            }\r\n\r\n            //If accordion style, close open child table (if it does exists)\r\n            if (self.options.openChildAsAccordion) {\r\n                $row.siblings('.jtable-data-row').each(function () {\r\n                    self.closeChildTable($(this));\r\n                });\r\n            }\r\n\r\n            //Close child table for this row and open new one for child table\r\n            self.closeChildTable($row, function () {\r\n                var $childRowColumn = self.getChildRow($row).children('td').empty();\r\n                var $childTableContainer = $('<div />')\r\n                    .addClass('jtable-child-table-container')\r\n                    .appendTo($childRowColumn);\r\n                $childRowColumn.data('childTable', $childTableContainer);\r\n                $childTableContainer.jtable(tableOptions);\r\n                self.openChildRow($row);\r\n                $childTableContainer.hide().slideDown('fast', function () {\r\n                    if (opened) {\r\n                        opened({\r\n                             childTable: $childTableContainer\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        /* Closes child table for given row.\r\n        *************************************************************************/\r\n        closeChildTable: function ($row, closed) {\r\n            var self = this;\r\n            \r\n            var $childRowColumn = this.getChildRow($row).children('td');\r\n            var $childTable = $childRowColumn.data('childTable');\r\n            if (!$childTable) {\r\n                if (closed) {\r\n                    closed();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            $childRowColumn.data('childTable', null);\r\n            $childTable.slideUp('fast', function () {\r\n                $childTable.jtable('destroy');\r\n                $childTable.remove();\r\n                self.closeChildRow($row);\r\n                if (closed) {\r\n                    closed();\r\n                }\r\n            });\r\n        },\r\n\r\n        /* Returns a boolean value indicates that if a child row is open for given row.\r\n        *************************************************************************/\r\n        isChildRowOpen: function ($row) {\r\n            return (this.getChildRow($row).is(':visible'));\r\n        },\r\n\r\n        /* Gets child row for given row, opens it if it's closed (Creates if needed).\r\n        *************************************************************************/\r\n        getChildRow: function ($row) {\r\n            return $row.data('childRow') || this._createChildRow($row);\r\n        },\r\n\r\n        /* Creates and opens child row for given row.\r\n        *************************************************************************/\r\n        openChildRow: function ($row) {\r\n            var $childRow = this.getChildRow($row);\r\n            if (!$childRow.is(':visible')) {\r\n                $childRow.show();\r\n            }\r\n\r\n            return $childRow;\r\n        },\r\n\r\n        /* Closes child row if it's open.\r\n        *************************************************************************/\r\n        closeChildRow: function ($row) {\r\n            var $childRow = this.getChildRow($row);\r\n            if ($childRow.is(':visible')) {\r\n                $childRow.hide();\r\n            }\r\n        },\r\n\r\n        /************************************************************************\r\n        * OVERRIDED METHODS                                                     *\r\n        *************************************************************************/\r\n\r\n        /* Overrides _removeRowsFromTable method to remove child rows of deleted rows.\r\n        *************************************************************************/\r\n        _removeRowsFromTable: function ($rows, reason) {\r\n            //var self = this;\r\n\r\n            if (reason == 'deleted') {\r\n                $rows.each(function () {\r\n                    var $row = $(this);\r\n                    var $childRow = $row.data('childRow');\r\n                    if ($childRow) {\r\n                        //self.closeChildTable($row); //Removed since it causes \"Uncaught Error: cannot call methods on jtable prior to initialization; attempted to call method 'destroy'\"\r\n                        $childRow.remove();\r\n                    }\r\n                });\r\n            }\r\n\r\n            base._removeRowsFromTable.apply(this, arguments);\r\n        },\r\n\r\n        /************************************************************************\r\n        * PRIVATE METHODS                                                       *\r\n        *************************************************************************/\r\n\r\n        /* Creates a child row for a row, hides and returns it.\r\n        *************************************************************************/\r\n        _createChildRow: function ($row) {\r\n            var totalColumnCount = this._$table.find('thead th').length;\r\n            var $childRow = $('<tr></tr>')\r\n                .addClass('jtable-child-row')\r\n                .append('<td colspan=\"' + totalColumnCount + '\"></td>');\r\n            $row.after($childRow);\r\n            $row.data('childRow', $childRow);\r\n            $childRow.hide();\r\n            return $childRow;\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n\r\n"]}